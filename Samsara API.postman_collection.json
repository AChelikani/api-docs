{
	"info": {
		"_postman_id": "7c2c0e01-9807-4704-b124-ad9ffac3c259",
		"name": "Samsara API",
		"description": "Samsara provides API endpoints so that you can build powerful applications and custom solutions with sensor data. Samsara has endpoints available to track and analyze sensors, vehicles, and entire fleets.\n\nYou can view the full Samsara API documentation here: [developers.samsara.com](https://developers.samsara.com/)\n\nThe easiest way to get started with the API is to click the *Run in Postman* button present at the top of this page and use the Postman App to send requests.\n\n# Authentication\n\nYou'll need an API access token to get started. You can get your key from the [Samsara Dashboard](https://kb.samsara.com/hc/en-us/articles/217317047-Creating-API-Tokens).\n\nOnce you've created an API access token, you can copy-paste the token into the `token` variable within this collection. This will propogate across the entire collection, and Postman will take care of the rest.\n\nAll Samsara's APIs use Bearer Token authentication. This means the token is sent as part of every request in the `Authentication` HTTP header with the following form:\n\n```\nAuthenication: Bearer {token}\n```\n\nwhere `{token}` is your API access token.\n\n# More details\n\nPlease see [developers.samsara.com](https://developers.samsara.com/) for detailed documentation.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Addresses",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Retrieve an address",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/addresses/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"addresses",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "Unique Samsara ID for the address"
										}
									]
								},
								"description": "Returns a specific address."
							},
							"response": [
								{
									"name": "Newly created address object with ID",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/addresses/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"addresses",
												"<string>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": {\n  \"contacts\": [\n   {\n    \"firstName\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastName\": \"<string>\"\n   },\n   {\n    \"firstName\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastName\": \"<string>\"\n   }\n  ],\n  \"id\": \"<string>\",\n  \"latitude\": \"<double>\",\n  \"longitude\": \"<double>\",\n  \"tags\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"geofence\": {\n   \"circle\": {\n    \"latitude\": \"<double>\",\n    \"longitude\": \"<double>\",\n    \"radiusMeters\": \"<integer>\"\n   },\n   \"polygon\": {\n    \"vertices\": [\n     {\n      \"latitude\": \"<double>\",\n      \"longitude\": \"<double>\"\n     },\n     {\n      \"latitude\": \"<double>\",\n      \"longitude\": \"<double>\"\n     }\n    ]\n   }\n  },\n  \"addressTypes\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"formattedAddress\": \"<string>\",\n  \"name\": \"<string>\",\n  \"notes\": \"<string>\"\n }\n}"
								},
								{
									"name": "Error response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/addresses/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"addresses",
												"<string>"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Delete an address",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/addresses/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"addresses",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "Unique Samsara ID for the address"
										}
									]
								},
								"description": "Delete a specific address."
							},
							"response": [
								{
									"name": "Empty success body",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/addresses/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"addresses",
												"<string>"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unexpected error.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/addresses/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"addresses",
												"<string>"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Update an address",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"contactIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"latitude\": \"<double>\",\n    \"longitude\": \"<double>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geofence\": {\n        \"circle\": {\n            \"radiusMeters\": \"<integer>\",\n            \"latitude\": \"<double>\",\n            \"longitude\": \"<double>\"\n        },\n        \"polygon\": {\n            \"vertices\": [\n                {\n                    \"latitude\": \"<double>\",\n                    \"longitude\": \"<double>\"\n                },\n                {\n                    \"latitude\": \"<double>\",\n                    \"longitude\": \"<double>\"\n                }\n            ]\n        }\n    },\n    \"addressTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"formattedAddress\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/addresses/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"addresses",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "Unique Samsara ID for the address"
										}
									]
								},
								"description": "Update a specific address."
							},
							"response": [
								{
									"name": "Updated address object with ID.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"contactIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"latitude\": \"<double>\",\n    \"longitude\": \"<double>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geofence\": {\n        \"circle\": {\n            \"radiusMeters\": \"<integer>\",\n            \"latitude\": \"<double>\",\n            \"longitude\": \"<double>\"\n        },\n        \"polygon\": {\n            \"vertices\": [\n                {\n                    \"latitude\": \"<double>\",\n                    \"longitude\": \"<double>\"\n                },\n                {\n                    \"latitude\": \"<double>\",\n                    \"longitude\": \"<double>\"\n                }\n            ]\n        }\n    },\n    \"addressTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"formattedAddress\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/addresses/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"addresses",
												"<string>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": {\n  \"contacts\": [\n   {\n    \"firstName\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastName\": \"<string>\"\n   },\n   {\n    \"firstName\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastName\": \"<string>\"\n   }\n  ],\n  \"id\": \"<string>\",\n  \"latitude\": \"<double>\",\n  \"longitude\": \"<double>\",\n  \"tags\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"geofence\": {\n   \"circle\": {\n    \"latitude\": \"<double>\",\n    \"longitude\": \"<double>\",\n    \"radiusMeters\": \"<integer>\"\n   },\n   \"polygon\": {\n    \"vertices\": [\n     {\n      \"latitude\": \"<double>\",\n      \"longitude\": \"<double>\"\n     },\n     {\n      \"latitude\": \"<double>\",\n      \"longitude\": \"<double>\"\n     }\n    ]\n   }\n  },\n  \"addressTypes\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"formattedAddress\": \"<string>\",\n  \"name\": \"<string>\",\n  \"notes\": \"<string>\"\n }\n}"
								},
								{
									"name": "Error response",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"contactIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"latitude\": \"<double>\",\n    \"longitude\": \"<double>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geofence\": {\n        \"circle\": {\n            \"radiusMeters\": \"<integer>\",\n            \"latitude\": \"<double>\",\n            \"longitude\": \"<double>\"\n        },\n        \"polygon\": {\n            \"vertices\": [\n                {\n                    \"latitude\": \"<double>\",\n                    \"longitude\": \"<double>\"\n                },\n                {\n                    \"latitude\": \"<double>\",\n                    \"longitude\": \"<double>\"\n                }\n            ]\n        }\n    },\n    \"addressTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"formattedAddress\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/addresses/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"addresses",
												"<string>"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "List all addresses",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/addresses?limit=512&after=<string>&tagIds=<string>,<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"addresses"
							],
							"query": [
								{
									"key": "limit",
									"value": "512",
									"description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
								},
								{
									"key": "after",
									"value": "<string>",
									"description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
								},
								{
									"key": "tagIds",
									"value": "<string>,<string>",
									"description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
								}
							]
						},
						"description": "Returns a list of all addresses in an organization"
					},
					"response": [
						{
							"name": "List of all addresses in the organization",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/addresses?limit=512&after=<string>&tagIds=<string>,<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"addresses"
									],
									"query": [
										{
											"key": "limit",
											"value": "512"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "tagIds",
											"value": "<string>,<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"contacts\": [\n    {\n     \"firstName\": \"<string>\",\n     \"id\": \"<string>\",\n     \"lastName\": \"<string>\"\n    },\n    {\n     \"firstName\": \"<string>\",\n     \"id\": \"<string>\",\n     \"lastName\": \"<string>\"\n    }\n   ],\n   \"id\": \"<string>\",\n   \"latitude\": \"<double>\",\n   \"longitude\": \"<double>\",\n   \"tags\": [\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    },\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    }\n   ],\n   \"geofence\": {\n    \"circle\": {\n     \"latitude\": \"<double>\",\n     \"longitude\": \"<double>\",\n     \"radiusMeters\": \"<integer>\"\n    },\n    \"polygon\": {\n     \"vertices\": [\n      {\n       \"latitude\": \"<double>\",\n       \"longitude\": \"<double>\"\n      },\n      {\n       \"latitude\": \"<double>\",\n       \"longitude\": \"<double>\"\n      }\n     ]\n    }\n   },\n   \"addressTypes\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"formattedAddress\": \"<string>\",\n   \"name\": \"<string>\",\n   \"notes\": \"<string>\"\n  },\n  {\n   \"contacts\": [\n    {\n     \"firstName\": \"<string>\",\n     \"id\": \"<string>\",\n     \"lastName\": \"<string>\"\n    },\n    {\n     \"firstName\": \"<string>\",\n     \"id\": \"<string>\",\n     \"lastName\": \"<string>\"\n    }\n   ],\n   \"id\": \"<string>\",\n   \"latitude\": \"<double>\",\n   \"longitude\": \"<double>\",\n   \"tags\": [\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    },\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    }\n   ],\n   \"geofence\": {\n    \"circle\": {\n     \"latitude\": \"<double>\",\n     \"longitude\": \"<double>\",\n     \"radiusMeters\": \"<integer>\"\n    },\n    \"polygon\": {\n     \"vertices\": [\n      {\n       \"latitude\": \"<double>\",\n       \"longitude\": \"<double>\"\n      },\n      {\n       \"latitude\": \"<double>\",\n       \"longitude\": \"<double>\"\n      }\n     ]\n    }\n   },\n   \"addressTypes\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"formattedAddress\": \"<string>\",\n   \"name\": \"<string>\",\n   \"notes\": \"<string>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": \"<string>\",\n  \"hasNextPage\": \"<boolean>\"\n }\n}"
						},
						{
							"name": "Error response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/addresses?limit=512&after=<string>&tagIds=<string>,<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"addresses"
									],
									"query": [
										{
											"key": "limit",
											"value": "512"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "tagIds",
											"value": "<string>,<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Create an address",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"contactIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"latitude\": \"<double>\",\n    \"longitude\": \"<double>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geofence\": {\n        \"circle\": {\n            \"radiusMeters\": \"<integer>\",\n            \"latitude\": \"<double>\",\n            \"longitude\": \"<double>\"\n        },\n        \"polygon\": {\n            \"vertices\": [\n                {\n                    \"latitude\": \"<double>\",\n                    \"longitude\": \"<double>\"\n                },\n                {\n                    \"latitude\": \"<double>\",\n                    \"longitude\": \"<double>\"\n                }\n            ]\n        }\n    },\n    \"addressTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"formattedAddress\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/addresses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"addresses"
							]
						},
						"description": "Creates a new address in the organization"
					},
					"response": [
						{
							"name": "Newly created address object with ID",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"contactIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"latitude\": \"<double>\",\n    \"longitude\": \"<double>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geofence\": {\n        \"circle\": {\n            \"radiusMeters\": \"<integer>\",\n            \"latitude\": \"<double>\",\n            \"longitude\": \"<double>\"\n        },\n        \"polygon\": {\n            \"vertices\": [\n                {\n                    \"latitude\": \"<double>\",\n                    \"longitude\": \"<double>\"\n                },\n                {\n                    \"latitude\": \"<double>\",\n                    \"longitude\": \"<double>\"\n                }\n            ]\n        }\n    },\n    \"addressTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"formattedAddress\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/addresses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"addresses"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"contacts\": [\n   {\n    \"firstName\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastName\": \"<string>\"\n   },\n   {\n    \"firstName\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastName\": \"<string>\"\n   }\n  ],\n  \"id\": \"<string>\",\n  \"latitude\": \"<double>\",\n  \"longitude\": \"<double>\",\n  \"tags\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"geofence\": {\n   \"circle\": {\n    \"latitude\": \"<double>\",\n    \"longitude\": \"<double>\",\n    \"radiusMeters\": \"<integer>\"\n   },\n   \"polygon\": {\n    \"vertices\": [\n     {\n      \"latitude\": \"<double>\",\n      \"longitude\": \"<double>\"\n     },\n     {\n      \"latitude\": \"<double>\",\n      \"longitude\": \"<double>\"\n     }\n    ]\n   }\n  },\n  \"addressTypes\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"formattedAddress\": \"<string>\",\n  \"name\": \"<string>\",\n  \"notes\": \"<string>\"\n }\n}"
						},
						{
							"name": "Error response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"contactIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"latitude\": \"<double>\",\n    \"longitude\": \"<double>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geofence\": {\n        \"circle\": {\n            \"radiusMeters\": \"<integer>\",\n            \"latitude\": \"<double>\",\n            \"longitude\": \"<double>\"\n        },\n        \"polygon\": {\n            \"vertices\": [\n                {\n                    \"latitude\": \"<double>\",\n                    \"longitude\": \"<double>\"\n                },\n                {\n                    \"latitude\": \"<double>\",\n                    \"longitude\": \"<double>\"\n                }\n            ]\n        }\n    },\n    \"addressTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"formattedAddress\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/addresses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"addresses"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "Address book entries in Samsara can be used to collect useful data about operations within a particular address's geofence area. Once an address book entry is established, this address can then subsequently be used in order to create routes, set geofence arrival alerts, or detect trips that begin or end within a given geofence area.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "eceef41d-4820-42d5-8641-a87023bcd1fa",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "1fe48adc-9034-4d1a-af61-cd95078a5b99",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Contacts",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Retrieve a contact",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/contacts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "Unique identifier for the contact."
										}
									]
								},
								"description": "Get a specific contact's information."
							},
							"response": [
								{
									"name": "Error response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/contacts/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"<string>"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
								},
								{
									"name": "Returns the specified contact.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/contacts/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"<string>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": {\n  \"email\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"id\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"phone\": \"<string>\"\n }\n}"
								}
							]
						},
						{
							"name": "Delete a contact",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/contacts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "Unique identifier for the contact."
										}
									]
								},
								"description": "Delete the given contact."
							},
							"response": [
								{
									"name": "Returns an empty success response.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/contacts/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"<string>"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Error response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/contacts/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"<string>"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Update a contact",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"phone\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "Unique identifier for the contact."
										}
									]
								},
								"description": "Update a specific contact's information."
							},
							"response": [
								{
									"name": "Error response",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"phone\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"<string>"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
								},
								{
									"name": "Updated contact object with given ID.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"phone\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"<string>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": {\n  \"email\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"id\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"phone\": \"<string>\"\n }\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "List all contacts",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/contacts?limit=512&after=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"contacts"
							],
							"query": [
								{
									"key": "limit",
									"value": "512",
									"description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
								},
								{
									"key": "after",
									"value": "<string>",
									"description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
								}
							]
						},
						"description": "Returns a list of all contacts in an organization."
					},
					"response": [
						{
							"name": "Error response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/contacts?limit=512&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts"
									],
									"query": [
										{
											"key": "limit",
											"value": "512"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
						},
						{
							"name": "List of all contacts",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/contacts?limit=512&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts"
									],
									"query": [
										{
											"key": "limit",
											"value": "512"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"email\": \"<string>\",\n   \"firstName\": \"<string>\",\n   \"id\": \"<string>\",\n   \"lastName\": \"<string>\",\n   \"phone\": \"<string>\"\n  },\n  {\n   \"email\": \"<string>\",\n   \"firstName\": \"<string>\",\n   \"id\": \"<string>\",\n   \"lastName\": \"<string>\",\n   \"phone\": \"<string>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": \"<string>\",\n  \"hasNextPage\": \"<boolean>\"\n }\n}"
						}
					]
				},
				{
					"name": "Create a contact",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"phone\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/contacts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"contacts"
							]
						},
						"description": "Add a contact to the organization"
					},
					"response": [
						{
							"name": "Contact was successfully added.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"phone\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/contacts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"email\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"id\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"phone\": \"<string>\"\n }\n}"
						},
						{
							"name": "Error response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"phone\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/contacts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "Contacts are an easy way to manage which users receive alerts (via sms or email).",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ac7fc2fe-9df0-4fec-868a-51504a1ceedc",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ae0a360e-8720-47dd-bb68-3da357c9c7c3",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Documents",
			"item": [
				{
					"name": "Fetch document types",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/fleet/drivers/document_types",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"fleet",
								"drivers",
								"document_types"
							]
						},
						"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch all of the document types."
					},
					"response": [
						{
							"name": "Unexpected error.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/drivers/document_types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"drivers",
										"document_types"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						},
						{
							"name": "Returns all of the document types.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/drivers/document_types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"drivers",
										"document_types"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"name\": \"<string>\",\n  \"orgId\": \"<long>\",\n  \"uuid\": \"<string>\",\n  \"fieldTypes\": [\n   {\n    \"label\": \"<string>\",\n    \"valueType\": \"<string>\",\n    \"numberValueTypeMetadata\": {\n     \"numDecimalPlaces\": \"<int64>\"\n    }\n   },\n   {\n    \"label\": \"<string>\",\n    \"valueType\": \"<string>\",\n    \"numberValueTypeMetadata\": {\n     \"numDecimalPlaces\": \"<int64>\"\n    }\n   }\n  ]\n },\n {\n  \"name\": \"<string>\",\n  \"orgId\": \"<long>\",\n  \"uuid\": \"<string>\",\n  \"fieldTypes\": [\n   {\n    \"label\": \"<string>\",\n    \"valueType\": \"<string>\",\n    \"numberValueTypeMetadata\": {\n     \"numDecimalPlaces\": \"<int64>\"\n    }\n   },\n   {\n    \"label\": \"<string>\",\n    \"valueType\": \"<string>\",\n    \"numberValueTypeMetadata\": {\n     \"numDecimalPlaces\": \"<int64>\"\n    }\n   }\n  ]\n }\n]"
						}
					]
				},
				{
					"name": "Fetch all documents",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/fleet/drivers/documents?endMs=<long>&durationMs=<long>&queryBy=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"fleet",
								"drivers",
								"documents"
							],
							"query": [
								{
									"key": "endMs",
									"value": "<long>",
									"description": "Time in unix milliseconds that represents the oldest documents to return. Used in combination with durationMs. Defaults to now."
								},
								{
									"key": "durationMs",
									"value": "<long>",
									"description": "Time in milliseconds that represents the duration before endMs to query. Defaults to 24 hours."
								},
								{
									"key": "queryBy",
									"value": "<string>",
									"description": "Retrieve most recent documents based on either driverCreatedAtMs or serverUpdatedAtMs. If no value is provided, the default is driverCreatedAtMs."
								}
							]
						},
						"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch all of the documents."
					},
					"response": [
						{
							"name": "Unexpected error.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/drivers/documents?endMs=<long>&durationMs=<long>&queryBy=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"drivers",
										"documents"
									],
									"query": [
										{
											"key": "endMs",
											"value": "<long>"
										},
										{
											"key": "durationMs",
											"value": "<long>"
										},
										{
											"key": "queryBy",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						},
						{
							"name": "Returns all of the documents.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/drivers/documents?endMs=<long>&durationMs=<long>&queryBy=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"drivers",
										"documents"
									],
									"query": [
										{
											"key": "endMs",
											"value": "<long>"
										},
										{
											"key": "durationMs",
											"value": "<long>"
										},
										{
											"key": "queryBy",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"documentType\": \"<string>\",\n  \"driverCreatedAtMs\": \"<long>\",\n  \"driverId\": \"<long>\",\n  \"fields\": [\n   {\n    \"label\": \"<string>\",\n    \"value\": \"schema type not provided\",\n    \"dateTimeValue\": \"<string>\",\n    \"multipleChoiceValue\": [\n     {\n      \"selected\": \"<boolean>\",\n      \"value\": \"<string>\"\n     },\n     {\n      \"selected\": \"<boolean>\",\n      \"value\": \"<string>\"\n     }\n    ],\n    \"numberValue\": \"<double>\",\n    \"photoValue\": [\n     {\n      \"url\": \"<string>\"\n     },\n     {\n      \"url\": \"<string>\"\n     }\n    ],\n    \"stringValue\": \"<string>\",\n    \"valueType\": \"<string>\"\n   },\n   {\n    \"label\": \"<string>\",\n    \"value\": \"schema type not provided\",\n    \"dateTimeValue\": \"<string>\",\n    \"multipleChoiceValue\": [\n     {\n      \"selected\": \"<boolean>\",\n      \"value\": \"<string>\"\n     },\n     {\n      \"selected\": \"<boolean>\",\n      \"value\": \"<string>\"\n     }\n    ],\n    \"numberValue\": \"<double>\",\n    \"photoValue\": [\n     {\n      \"url\": \"<string>\"\n     },\n     {\n      \"url\": \"<string>\"\n     }\n    ],\n    \"stringValue\": \"<string>\",\n    \"valueType\": \"<string>\"\n   }\n  ],\n  \"id\": \"<string>\",\n  \"orgId\": \"<long>\",\n  \"serverCreatedAtMs\": \"<long>\",\n  \"serverUpdatedAtMs\": \"<long>\",\n  \"vehicleId\": \"<long>\",\n  \"dispatchJobId\": \"<long>\",\n  \"notes\": \"<string>\",\n  \"state\": \"Required\"\n },\n {\n  \"documentType\": \"<string>\",\n  \"driverCreatedAtMs\": \"<long>\",\n  \"driverId\": \"<long>\",\n  \"fields\": [\n   {\n    \"label\": \"<string>\",\n    \"value\": \"schema type not provided\",\n    \"dateTimeValue\": \"<string>\",\n    \"multipleChoiceValue\": [\n     {\n      \"selected\": \"<boolean>\",\n      \"value\": \"<string>\"\n     },\n     {\n      \"selected\": \"<boolean>\",\n      \"value\": \"<string>\"\n     }\n    ],\n    \"numberValue\": \"<double>\",\n    \"photoValue\": [\n     {\n      \"url\": \"<string>\"\n     },\n     {\n      \"url\": \"<string>\"\n     }\n    ],\n    \"stringValue\": \"<string>\",\n    \"valueType\": \"<string>\"\n   },\n   {\n    \"label\": \"<string>\",\n    \"value\": \"schema type not provided\",\n    \"dateTimeValue\": \"<string>\",\n    \"multipleChoiceValue\": [\n     {\n      \"selected\": \"<boolean>\",\n      \"value\": \"<string>\"\n     },\n     {\n      \"selected\": \"<boolean>\",\n      \"value\": \"<string>\"\n     }\n    ],\n    \"numberValue\": \"<double>\",\n    \"photoValue\": [\n     {\n      \"url\": \"<string>\"\n     },\n     {\n      \"url\": \"<string>\"\n     }\n    ],\n    \"stringValue\": \"<string>\",\n    \"valueType\": \"<string>\"\n   }\n  ],\n  \"id\": \"<string>\",\n  \"orgId\": \"<long>\",\n  \"serverCreatedAtMs\": \"<long>\",\n  \"serverUpdatedAtMs\": \"<long>\",\n  \"vehicleId\": \"<long>\",\n  \"dispatchJobId\": \"<long>\",\n  \"notes\": \"<string>\",\n  \"state\": \"Required\"\n }\n]"
						}
					]
				},
				{
					"name": "Create a document",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"documentTypeUuid\": \"<string>\",\n    \"fields\": [\n        {\n            \"label\": \"<string>\",\n            \"value\": \"schema type not provided\",\n            \"dateTimeValue\": \"<string>\",\n            \"multipleChoiceValue\": [\n                {\n                    \"selected\": \"<boolean>\",\n                    \"value\": \"<string>\"\n                },\n                {\n                    \"selected\": \"<boolean>\",\n                    \"value\": \"<string>\"\n                }\n            ],\n            \"numberValue\": \"<double>\",\n            \"photoValue\": [\n                {\n                    \"url\": \"<string>\"\n                },\n                {\n                    \"url\": \"<string>\"\n                }\n            ],\n            \"stringValue\": \"<string>\",\n            \"valueType\": \"<string>\"\n        },\n        {\n            \"label\": \"<string>\",\n            \"value\": \"schema type not provided\",\n            \"dateTimeValue\": \"<string>\",\n            \"multipleChoiceValue\": [\n                {\n                    \"selected\": \"<boolean>\",\n                    \"value\": \"<string>\"\n                },\n                {\n                    \"selected\": \"<boolean>\",\n                    \"value\": \"<string>\"\n                }\n            ],\n            \"numberValue\": \"<double>\",\n            \"photoValue\": [\n                {\n                    \"url\": \"<string>\"\n                },\n                {\n                    \"url\": \"<string>\"\n                }\n            ],\n            \"stringValue\": \"<string>\",\n            \"valueType\": \"<string>\"\n        }\n    ],\n    \"dispatchJobId\": \"<long>\",\n    \"notes\": \"<string>\",\n    \"state\": \"Required\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/fleet/drivers/:driver_id/documents",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"fleet",
								"drivers",
								":driver_id",
								"documents"
							],
							"variable": [
								{
									"key": "driver_id",
									"value": "<long>",
									"description": "ID of the driver for whom the document is created. Must contain only digits 0-9."
								}
							]
						},
						"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nCreate a document for the given driver."
					},
					"response": [
						{
							"name": "Returns the created document.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"documentTypeUuid\": \"<string>\",\n    \"fields\": [\n        {\n            \"label\": \"<string>\",\n            \"value\": \"schema type not provided\",\n            \"dateTimeValue\": \"<string>\",\n            \"multipleChoiceValue\": [\n                {\n                    \"selected\": \"<boolean>\",\n                    \"value\": \"<string>\"\n                },\n                {\n                    \"selected\": \"<boolean>\",\n                    \"value\": \"<string>\"\n                }\n            ],\n            \"numberValue\": \"<double>\",\n            \"photoValue\": [\n                {\n                    \"url\": \"<string>\"\n                },\n                {\n                    \"url\": \"<string>\"\n                }\n            ],\n            \"stringValue\": \"<string>\",\n            \"valueType\": \"<string>\"\n        },\n        {\n            \"label\": \"<string>\",\n            \"value\": \"schema type not provided\",\n            \"dateTimeValue\": \"<string>\",\n            \"multipleChoiceValue\": [\n                {\n                    \"selected\": \"<boolean>\",\n                    \"value\": \"<string>\"\n                },\n                {\n                    \"selected\": \"<boolean>\",\n                    \"value\": \"<string>\"\n                }\n            ],\n            \"numberValue\": \"<double>\",\n            \"photoValue\": [\n                {\n                    \"url\": \"<string>\"\n                },\n                {\n                    \"url\": \"<string>\"\n                }\n            ],\n            \"stringValue\": \"<string>\",\n            \"valueType\": \"<string>\"\n        }\n    ],\n    \"dispatchJobId\": \"<long>\",\n    \"notes\": \"<string>\",\n    \"state\": \"Required\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/drivers/<long>/documents",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"drivers",
										"<long>",
										"documents"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"documentType\": \"<string>\",\n \"driverCreatedAtMs\": \"<long>\",\n \"driverId\": \"<long>\",\n \"fields\": [\n  {\n   \"label\": \"<string>\",\n   \"value\": \"schema type not provided\",\n   \"dateTimeValue\": \"<string>\",\n   \"multipleChoiceValue\": [\n    {\n     \"selected\": \"<boolean>\",\n     \"value\": \"<string>\"\n    },\n    {\n     \"selected\": \"<boolean>\",\n     \"value\": \"<string>\"\n    }\n   ],\n   \"numberValue\": \"<double>\",\n   \"photoValue\": [\n    {\n     \"url\": \"<string>\"\n    },\n    {\n     \"url\": \"<string>\"\n    }\n   ],\n   \"stringValue\": \"<string>\",\n   \"valueType\": \"<string>\"\n  },\n  {\n   \"label\": \"<string>\",\n   \"value\": \"schema type not provided\",\n   \"dateTimeValue\": \"<string>\",\n   \"multipleChoiceValue\": [\n    {\n     \"selected\": \"<boolean>\",\n     \"value\": \"<string>\"\n    },\n    {\n     \"selected\": \"<boolean>\",\n     \"value\": \"<string>\"\n    }\n   ],\n   \"numberValue\": \"<double>\",\n   \"photoValue\": [\n    {\n     \"url\": \"<string>\"\n    },\n    {\n     \"url\": \"<string>\"\n    }\n   ],\n   \"stringValue\": \"<string>\",\n   \"valueType\": \"<string>\"\n  }\n ],\n \"id\": \"<string>\",\n \"orgId\": \"<long>\",\n \"serverCreatedAtMs\": \"<long>\",\n \"serverUpdatedAtMs\": \"<long>\",\n \"vehicleId\": \"<long>\",\n \"dispatchJobId\": \"<long>\",\n \"notes\": \"<string>\",\n \"state\": \"Required\"\n}"
						},
						{
							"name": "Unexpected error.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"documentTypeUuid\": \"<string>\",\n    \"fields\": [\n        {\n            \"label\": \"<string>\",\n            \"value\": \"schema type not provided\",\n            \"dateTimeValue\": \"<string>\",\n            \"multipleChoiceValue\": [\n                {\n                    \"selected\": \"<boolean>\",\n                    \"value\": \"<string>\"\n                },\n                {\n                    \"selected\": \"<boolean>\",\n                    \"value\": \"<string>\"\n                }\n            ],\n            \"numberValue\": \"<double>\",\n            \"photoValue\": [\n                {\n                    \"url\": \"<string>\"\n                },\n                {\n                    \"url\": \"<string>\"\n                }\n            ],\n            \"stringValue\": \"<string>\",\n            \"valueType\": \"<string>\"\n        },\n        {\n            \"label\": \"<string>\",\n            \"value\": \"schema type not provided\",\n            \"dateTimeValue\": \"<string>\",\n            \"multipleChoiceValue\": [\n                {\n                    \"selected\": \"<boolean>\",\n                    \"value\": \"<string>\"\n                },\n                {\n                    \"selected\": \"<boolean>\",\n                    \"value\": \"<string>\"\n                }\n            ],\n            \"numberValue\": \"<double>\",\n            \"photoValue\": [\n                {\n                    \"url\": \"<string>\"\n                },\n                {\n                    \"url\": \"<string>\"\n                }\n            ],\n            \"stringValue\": \"<string>\",\n            \"valueType\": \"<string>\"\n        }\n    ],\n    \"dispatchJobId\": \"<long>\",\n    \"notes\": \"<string>\",\n    \"state\": \"Required\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/drivers/<long>/documents",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"drivers",
										"<long>",
										"documents"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						}
					]
				},
				{
					"name": "Fetches a document",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/fleet/drivers/:driver_id/documents/:document_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"fleet",
								"drivers",
								":driver_id",
								"documents",
								":document_id"
							],
							"variable": [
								{
									"key": "driver_id",
									"value": "<long>",
									"description": "ID of the driver who submitted the document. Must contain only digits 0-9."
								},
								{
									"key": "document_id",
									"value": "<string>",
									"description": "ID of document."
								}
							]
						},
						"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetches a single document submission by a specific driver."
					},
					"response": [
						{
							"name": "Returns the specified document.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/drivers/<long>/documents/<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"drivers",
										"<long>",
										"documents",
										"<string>"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"documentType\": \"<string>\",\n \"driverCreatedAtMs\": \"<long>\",\n \"driverId\": \"<long>\",\n \"fields\": [\n  {\n   \"label\": \"<string>\",\n   \"value\": \"schema type not provided\",\n   \"dateTimeValue\": \"<string>\",\n   \"multipleChoiceValue\": [\n    {\n     \"selected\": \"<boolean>\",\n     \"value\": \"<string>\"\n    },\n    {\n     \"selected\": \"<boolean>\",\n     \"value\": \"<string>\"\n    }\n   ],\n   \"numberValue\": \"<double>\",\n   \"photoValue\": [\n    {\n     \"url\": \"<string>\"\n    },\n    {\n     \"url\": \"<string>\"\n    }\n   ],\n   \"stringValue\": \"<string>\",\n   \"valueType\": \"<string>\"\n  },\n  {\n   \"label\": \"<string>\",\n   \"value\": \"schema type not provided\",\n   \"dateTimeValue\": \"<string>\",\n   \"multipleChoiceValue\": [\n    {\n     \"selected\": \"<boolean>\",\n     \"value\": \"<string>\"\n    },\n    {\n     \"selected\": \"<boolean>\",\n     \"value\": \"<string>\"\n    }\n   ],\n   \"numberValue\": \"<double>\",\n   \"photoValue\": [\n    {\n     \"url\": \"<string>\"\n    },\n    {\n     \"url\": \"<string>\"\n    }\n   ],\n   \"stringValue\": \"<string>\",\n   \"valueType\": \"<string>\"\n  }\n ],\n \"id\": \"<string>\",\n \"orgId\": \"<long>\",\n \"serverCreatedAtMs\": \"<long>\",\n \"serverUpdatedAtMs\": \"<long>\",\n \"vehicleId\": \"<long>\",\n \"dispatchJobId\": \"<long>\",\n \"notes\": \"<string>\",\n \"state\": \"Required\"\n}"
						},
						{
							"name": "Unexpected error.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/drivers/<long>/documents/<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"drivers",
										"<long>",
										"documents",
										"<string>"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						}
					]
				}
			],
			"description": "The documents feature allows you to manage driver-submitted documents from the Samsara app. Submitted documents are grouped by document types, and back office users can create new types of documents. For more information on the driver workflow around documents, see this [article](https://kb.samsara.com/hc/en-us/articles/360006911551-Using-Documents-in-the-Dashboard).",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "5731a3fa-748b-4e83-af21-e4870a84e859",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "0a0117f4-2105-42a2-a9b8-76247d237fc3",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Drivers",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Retrieve a driver",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/fleet/drivers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fleet",
										"drivers",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "ID of the driver. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`"
										}
									]
								},
								"description": "Get information about a driver."
							},
							"response": [
								{
									"name": "Error response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/fleet/drivers/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fleet",
												"drivers",
												"<string>"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
								},
								{
									"name": "Returns the specified driver.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/fleet/drivers/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fleet",
												"drivers",
												"<string>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": {\n  \"currentVehicle\": {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"staticAssignedVehicle\": {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"vehicleGroupTag\": {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\"\n  },\n  \"carrierSettings\": {\n   \"carrierName\": \"<string>\",\n   \"dotNumber\": \"<long>\",\n   \"mainOfficeAddress\": \"<string>\"\n  },\n  \"eldAdverseWeatherExemptionEnabled\": \"<boolean>\",\n  \"eldBigDayExemptionEnabled\": \"<boolean>\",\n  \"eldDayStartHour\": \"<integer>\",\n  \"eldExempt\": \"<boolean>\",\n  \"eldExemptReason\": \"<string>\",\n  \"eldPcEnabled\": \"<boolean>\",\n  \"eldYmEnabled\": \"<boolean>\",\n  \"externalIds\": \"<object>\",\n  \"isDeactivated\": \"<boolean>\",\n  \"licenseNumber\": \"<string>\",\n  \"licenseState\": \"<string>\",\n  \"locale\": \"<string>\",\n  \"name\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"username\": \"<string>\"\n }\n}"
								}
							]
						},
						{
							"name": "Update a driver",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"currentVehicleId\": \"<string>\",\n    \"password\": \"<string>\",\n    \"staticAssignedVehicleId\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"vehicleGroupTagId\": \"<string>\",\n    \"carrierSettings\": {\n        \"carrierName\": \"<string>\",\n        \"dotNumber\": \"<long>\",\n        \"mainOfficeAddress\": \"<string>\"\n    },\n    \"eldAdverseWeatherExemptionEnabled\": \"<boolean>\",\n    \"eldBigDayExemptionEnabled\": \"<boolean>\",\n    \"eldDayStartHour\": \"<integer>\",\n    \"eldExempt\": \"<boolean>\",\n    \"eldExemptReason\": \"<string>\",\n    \"eldPcEnabled\": \"<boolean>\",\n    \"eldYmEnabled\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"isDeactivated\": \"<boolean>\",\n    \"licenseNumber\": \"<string>\",\n    \"licenseState\": \"<string>\",\n    \"locale\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"timezone\": \"<string>\",\n    \"username\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/fleet/drivers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fleet",
										"drivers",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "ID of the driver. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`"
										}
									]
								},
								"description": "Update a specific driver's information. This can also be used to activate or de-activate a given driver"
							},
							"response": [
								{
									"name": "Updated driver object, with ID.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currentVehicleId\": \"<string>\",\n    \"password\": \"<string>\",\n    \"staticAssignedVehicleId\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"vehicleGroupTagId\": \"<string>\",\n    \"carrierSettings\": {\n        \"carrierName\": \"<string>\",\n        \"dotNumber\": \"<long>\",\n        \"mainOfficeAddress\": \"<string>\"\n    },\n    \"eldAdverseWeatherExemptionEnabled\": \"<boolean>\",\n    \"eldBigDayExemptionEnabled\": \"<boolean>\",\n    \"eldDayStartHour\": \"<integer>\",\n    \"eldExempt\": \"<boolean>\",\n    \"eldExemptReason\": \"<string>\",\n    \"eldPcEnabled\": \"<boolean>\",\n    \"eldYmEnabled\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"isDeactivated\": \"<boolean>\",\n    \"licenseNumber\": \"<string>\",\n    \"licenseState\": \"<string>\",\n    \"locale\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"timezone\": \"<string>\",\n    \"username\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/fleet/drivers/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fleet",
												"drivers",
												"<string>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": {\n  \"currentVehicle\": {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"staticAssignedVehicle\": {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"vehicleGroupTag\": {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\"\n  },\n  \"carrierSettings\": {\n   \"carrierName\": \"<string>\",\n   \"dotNumber\": \"<long>\",\n   \"mainOfficeAddress\": \"<string>\"\n  },\n  \"eldAdverseWeatherExemptionEnabled\": \"<boolean>\",\n  \"eldBigDayExemptionEnabled\": \"<boolean>\",\n  \"eldDayStartHour\": \"<integer>\",\n  \"eldExempt\": \"<boolean>\",\n  \"eldExemptReason\": \"<string>\",\n  \"eldPcEnabled\": \"<boolean>\",\n  \"eldYmEnabled\": \"<boolean>\",\n  \"externalIds\": \"<object>\",\n  \"isDeactivated\": \"<boolean>\",\n  \"licenseNumber\": \"<string>\",\n  \"licenseState\": \"<string>\",\n  \"locale\": \"<string>\",\n  \"name\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"username\": \"<string>\"\n }\n}"
								},
								{
									"name": "Error response",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currentVehicleId\": \"<string>\",\n    \"password\": \"<string>\",\n    \"staticAssignedVehicleId\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"vehicleGroupTagId\": \"<string>\",\n    \"carrierSettings\": {\n        \"carrierName\": \"<string>\",\n        \"dotNumber\": \"<long>\",\n        \"mainOfficeAddress\": \"<string>\"\n    },\n    \"eldAdverseWeatherExemptionEnabled\": \"<boolean>\",\n    \"eldBigDayExemptionEnabled\": \"<boolean>\",\n    \"eldDayStartHour\": \"<integer>\",\n    \"eldExempt\": \"<boolean>\",\n    \"eldExemptReason\": \"<string>\",\n    \"eldPcEnabled\": \"<boolean>\",\n    \"eldYmEnabled\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"isDeactivated\": \"<boolean>\",\n    \"licenseNumber\": \"<string>\",\n    \"licenseState\": \"<string>\",\n    \"locale\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"timezone\": \"<string>\",\n    \"username\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/fleet/drivers/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fleet",
												"drivers",
												"<string>"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "List all drivers",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/fleet/drivers?isDeactivated=<boolean>&limit=512&after=<string>&tagIds=<string>,<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"fleet",
								"drivers"
							],
							"query": [
								{
									"key": "isDeactivated",
									"value": "<boolean>",
									"description": "If value is true, only drivers that are deactivated will appear in the response. This parameter will default to false if not provided (fetching only active drivers)."
								},
								{
									"key": "limit",
									"value": "512",
									"description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
								},
								{
									"key": "after",
									"value": "<string>",
									"description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
								},
								{
									"key": "tagIds",
									"value": "<string>,<string>",
									"description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
								}
							]
						},
						"description": "Get all drivers in organization."
					},
					"response": [
						{
							"name": "Error response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/fleet/drivers?isDeactivated=<boolean>&limit=512&after=<string>&tagIds=<string>,<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fleet",
										"drivers"
									],
									"query": [
										{
											"key": "isDeactivated",
											"value": "<boolean>"
										},
										{
											"key": "limit",
											"value": "512"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "tagIds",
											"value": "<string>,<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
						},
						{
							"name": "List of all driver objects.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/fleet/drivers?isDeactivated=<boolean>&limit=512&after=<string>&tagIds=<string>,<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fleet",
										"drivers"
									],
									"query": [
										{
											"key": "isDeactivated",
											"value": "<boolean>"
										},
										{
											"key": "limit",
											"value": "512"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "tagIds",
											"value": "<string>,<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"currentVehicle\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   \"id\": \"<string>\",\n   \"staticAssignedVehicle\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   \"tags\": [\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    },\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    }\n   ],\n   \"vehicleGroupTag\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   \"carrierSettings\": {\n    \"carrierName\": \"<string>\",\n    \"dotNumber\": \"<long>\",\n    \"mainOfficeAddress\": \"<string>\"\n   },\n   \"eldAdverseWeatherExemptionEnabled\": \"<boolean>\",\n   \"eldBigDayExemptionEnabled\": \"<boolean>\",\n   \"eldDayStartHour\": \"<integer>\",\n   \"eldExempt\": \"<boolean>\",\n   \"eldExemptReason\": \"<string>\",\n   \"eldPcEnabled\": \"<boolean>\",\n   \"eldYmEnabled\": \"<boolean>\",\n   \"externalIds\": \"<object>\",\n   \"isDeactivated\": \"<boolean>\",\n   \"licenseNumber\": \"<string>\",\n   \"licenseState\": \"<string>\",\n   \"locale\": \"<string>\",\n   \"name\": \"<string>\",\n   \"notes\": \"<string>\",\n   \"phone\": \"<string>\",\n   \"timezone\": \"<string>\",\n   \"username\": \"<string>\"\n  },\n  {\n   \"currentVehicle\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   \"id\": \"<string>\",\n   \"staticAssignedVehicle\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   \"tags\": [\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    },\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    }\n   ],\n   \"vehicleGroupTag\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   \"carrierSettings\": {\n    \"carrierName\": \"<string>\",\n    \"dotNumber\": \"<long>\",\n    \"mainOfficeAddress\": \"<string>\"\n   },\n   \"eldAdverseWeatherExemptionEnabled\": \"<boolean>\",\n   \"eldBigDayExemptionEnabled\": \"<boolean>\",\n   \"eldDayStartHour\": \"<integer>\",\n   \"eldExempt\": \"<boolean>\",\n   \"eldExemptReason\": \"<string>\",\n   \"eldPcEnabled\": \"<boolean>\",\n   \"eldYmEnabled\": \"<boolean>\",\n   \"externalIds\": \"<object>\",\n   \"isDeactivated\": \"<boolean>\",\n   \"licenseNumber\": \"<string>\",\n   \"licenseState\": \"<string>\",\n   \"locale\": \"<string>\",\n   \"name\": \"<string>\",\n   \"notes\": \"<string>\",\n   \"phone\": \"<string>\",\n   \"timezone\": \"<string>\",\n   \"username\": \"<string>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": \"<string>\",\n  \"hasNextPage\": \"<boolean>\"\n }\n}"
						}
					]
				},
				{
					"name": "Create a driver",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"carrierSettings\": {\n        \"carrierName\": \"<string>\",\n        \"dotNumber\": \"<long>\",\n        \"mainOfficeAddress\": \"<string>\"\n    },\n    \"currentVehicleId\": \"<string>\",\n    \"eldAdverseWeatherExemptionEnabled\": \"<boolean>\",\n    \"eldBigDayExemptionEnabled\": \"<boolean>\",\n    \"eldDayStartHour\": \"<integer>\",\n    \"eldExempt\": \"<boolean>\",\n    \"eldExemptReason\": \"<string>\",\n    \"eldPcEnabled\": \"<boolean>\",\n    \"eldYmEnabled\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licenseNumber\": \"<string>\",\n    \"licenseState\": \"<string>\",\n    \"locale\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"staticAssignedVehicleId\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"timezone\": \"<string>\",\n    \"vehicleGroupTagId\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/fleet/drivers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"fleet",
								"drivers"
							]
						},
						"description": "Add a driver to the organization."
					},
					"response": [
						{
							"name": "Newly created driver object, with Samsara-generated ID.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"carrierSettings\": {\n        \"carrierName\": \"<string>\",\n        \"dotNumber\": \"<long>\",\n        \"mainOfficeAddress\": \"<string>\"\n    },\n    \"currentVehicleId\": \"<string>\",\n    \"eldAdverseWeatherExemptionEnabled\": \"<boolean>\",\n    \"eldBigDayExemptionEnabled\": \"<boolean>\",\n    \"eldDayStartHour\": \"<integer>\",\n    \"eldExempt\": \"<boolean>\",\n    \"eldExemptReason\": \"<string>\",\n    \"eldPcEnabled\": \"<boolean>\",\n    \"eldYmEnabled\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licenseNumber\": \"<string>\",\n    \"licenseState\": \"<string>\",\n    \"locale\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"staticAssignedVehicleId\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"timezone\": \"<string>\",\n    \"vehicleGroupTagId\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/fleet/drivers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fleet",
										"drivers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"currentVehicle\": {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"staticAssignedVehicle\": {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"vehicleGroupTag\": {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\"\n  },\n  \"carrierSettings\": {\n   \"carrierName\": \"<string>\",\n   \"dotNumber\": \"<long>\",\n   \"mainOfficeAddress\": \"<string>\"\n  },\n  \"eldAdverseWeatherExemptionEnabled\": \"<boolean>\",\n  \"eldBigDayExemptionEnabled\": \"<boolean>\",\n  \"eldDayStartHour\": \"<integer>\",\n  \"eldExempt\": \"<boolean>\",\n  \"eldExemptReason\": \"<string>\",\n  \"eldPcEnabled\": \"<boolean>\",\n  \"eldYmEnabled\": \"<boolean>\",\n  \"externalIds\": \"<object>\",\n  \"isDeactivated\": \"<boolean>\",\n  \"licenseNumber\": \"<string>\",\n  \"licenseState\": \"<string>\",\n  \"locale\": \"<string>\",\n  \"name\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"username\": \"<string>\"\n }\n}"
						},
						{
							"name": "Error response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"carrierSettings\": {\n        \"carrierName\": \"<string>\",\n        \"dotNumber\": \"<long>\",\n        \"mainOfficeAddress\": \"<string>\"\n    },\n    \"currentVehicleId\": \"<string>\",\n    \"eldAdverseWeatherExemptionEnabled\": \"<boolean>\",\n    \"eldBigDayExemptionEnabled\": \"<boolean>\",\n    \"eldDayStartHour\": \"<integer>\",\n    \"eldExempt\": \"<boolean>\",\n    \"eldExemptReason\": \"<string>\",\n    \"eldPcEnabled\": \"<boolean>\",\n    \"eldYmEnabled\": \"<boolean>\",\n    \"externalIds\": \"<object>\",\n    \"licenseNumber\": \"<string>\",\n    \"licenseState\": \"<string>\",\n    \"locale\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"staticAssignedVehicleId\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"timezone\": \"<string>\",\n    \"vehicleGroupTagId\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/fleet/drivers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fleet",
										"drivers"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "Driver objects allow you to track your driver-vehicle assignments, manage driver profiles, and update mobile app credential logins. You can retrieve a list of all drivers, or you can fetch each driver object individually. Drivers can be either active or inactive. You should inactivate a driver if you wish to keep the driver's driving history and HOS logs. If your driver is inactive, you can still get information about a driver summary.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ecf67581-fb25-4d2b-97c7-fd6208300802",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c8bae7c1-aa39-42e9-9e00-0b3f51f5e0a0",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Hours of Service",
			"item": [
				{
					"name": "{driver id}",
					"item": [
						{
							"name": "Get daily HOS logs for a specific driver",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"startMs\": \"<long>\",\n    \"endMs\": \"<long>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/drivers/:driver_id/hos_daily_logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"drivers",
										":driver_id",
										"hos_daily_logs"
									],
									"variable": [
										{
											"key": "driver_id",
											"value": "<long>",
											"description": "ID of the driver with HOS logs."
										}
									]
								},
								"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet summarized daily Hours of Service charts for a specified driver.\n\nThe response will contain a list of `days`, where each entry in the list is the driver's summarized hours of service for that entire day.\n\nThe time range for a \"day\" is defined by the `driver`'s `eldDayStartHour`. By default, this is `0`, which indicates the `driver`'s \"day\" is from midnight to midnight in the `driver`'s respective `timezone`. This value is configurable per driver.\n\nThe `startMs` and `endMs` parameters indicate start and end for the date range you'd like to query. These parameters are inclusive. This means that the response will include the \"day\" that contains `startMs` and the \"day\" that contains `endMs`. For example:\n\nLet's say a `driver`'s `eldDayStartHour` is `0` and their timezone is `America/Chicago`.\n\nIf `startMs` was `1576080000000` (December 11, 2019 10:00:00 AM America/Chicago) and an `endMs` was `1576166400000` (December 12, 2019 10:00:00 AM America/Los_Angeles), then the response will contain a two `day` entries: [December 11, 2019 12:00:00 AM America/Chicago to December 12, 2019 12:00:00 AM America/Chicago], and [December 12, 2019 12:00:00 AM America/Chicago to December 13, 2019 12:00:00 AM America/Chicago]."
							},
							"response": [
								{
									"name": "Unexpected error.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"startMs\": \"<long>\",\n    \"endMs\": \"<long>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/v1/fleet/drivers/<long>/hos_daily_logs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"fleet",
												"drivers",
												"<long>",
												"hos_daily_logs"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<string>\""
								},
								{
									"name": "Distance traveled and time active for each driver in the organization over the specified time period.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"startMs\": \"<long>\",\n    \"endMs\": \"<long>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/v1/fleet/drivers/<long>/hos_daily_logs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"fleet",
												"drivers",
												"<long>",
												"hos_daily_logs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"days\": [\n  {\n   \"activeHours\": \"<double>\",\n   \"activeMs\": \"<long>\",\n   \"certified\": \"<boolean>\",\n   \"certifiedAtMs\": \"<int64>\",\n   \"distanceMiles\": \"<double>\",\n   \"endMs\": \"<integer>\",\n   \"shippingDocIds\": \"<object>\",\n   \"startMs\": \"<integer>\",\n   \"trailerIds\": \"<object>\",\n   \"vehicleIds\": \"<object>\"\n  },\n  {\n   \"activeHours\": \"<double>\",\n   \"activeMs\": \"<long>\",\n   \"certified\": \"<boolean>\",\n   \"certifiedAtMs\": \"<int64>\",\n   \"distanceMiles\": \"<double>\",\n   \"endMs\": \"<integer>\",\n   \"shippingDocIds\": \"<object>\",\n   \"startMs\": \"<integer>\",\n   \"trailerIds\": \"<object>\",\n   \"vehicleIds\": \"<object>\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Get HOS logs for a specific driver",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"driverId\": \"<long>\",\n    \"startMs\": \"<integer>\",\n    \"endMs\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/hos_logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"hos_logs"
									]
								},
								"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet the HOS (hours of service) logs for the specified driver. This method returns all the HOS statuses that the driver was in during this time period."
							},
							"response": [
								{
									"name": "HOS logs for the specified driver.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"driverId\": \"<long>\",\n    \"startMs\": \"<integer>\",\n    \"endMs\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/v1/fleet/hos_logs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"fleet",
												"hos_logs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"logs\": [\n  {\n   \"codriverIds\": [\n    \"<number>\",\n    \"<number>\"\n   ],\n   \"driverId\": \"<long>\",\n   \"groupId\": \"<long>\",\n   \"hosStatusType\": \"<string>\",\n   \"locCity\": \"<string>\",\n   \"locLat\": \"<float>\",\n   \"locLng\": \"<float>\",\n   \"locName\": \"<string>\",\n   \"locState\": \"<string>\",\n   \"logStartMs\": \"<long>\",\n   \"remark\": \"<string>\",\n   \"vehicleId\": \"<long>\"\n  },\n  {\n   \"codriverIds\": [\n    \"<number>\",\n    \"<number>\"\n   ],\n   \"driverId\": \"<long>\",\n   \"groupId\": \"<long>\",\n   \"hosStatusType\": \"<string>\",\n   \"locCity\": \"<string>\",\n   \"locLat\": \"<float>\",\n   \"locLng\": \"<float>\",\n   \"locName\": \"<string>\",\n   \"locState\": \"<string>\",\n   \"logStartMs\": \"<long>\",\n   \"remark\": \"<string>\",\n   \"vehicleId\": \"<long>\"\n  }\n ]\n}"
								},
								{
									"name": "Unexpected error.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"driverId\": \"<long>\",\n    \"startMs\": \"<integer>\",\n    \"endMs\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/v1/fleet/hos_logs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"fleet",
												"hos_logs"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<string>\""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get HOS signin and signout",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/fleet/hos_authentication_logs?driverId=<long>&startMs=<long>&endMs=<long>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"fleet",
								"hos_authentication_logs"
							],
							"query": [
								{
									"key": "driverId",
									"value": "<long>",
									"description": "Driver ID to query."
								},
								{
									"key": "startMs",
									"value": "<long>",
									"description": "Beginning of the time range, specified in milliseconds UNIX time."
								},
								{
									"key": "endMs",
									"value": "<long>",
									"description": "End of the time range, specified in milliseconds UNIX time."
								}
							]
						},
						"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet the HOS (hours of service) signin and signout logs for the specified driver. The response includes 4 fields that are now deprecated."
					},
					"response": [
						{
							"name": "Unexpected error.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/hos_authentication_logs?driverId=<long>&startMs=<long>&endMs=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"hos_authentication_logs"
									],
									"query": [
										{
											"key": "driverId",
											"value": "<long>"
										},
										{
											"key": "startMs",
											"value": "<long>"
										},
										{
											"key": "endMs",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						},
						{
							"name": "HOS authentication logs for the specified driver.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/hos_authentication_logs?driverId=<long>&startMs=<long>&endMs=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"hos_authentication_logs"
									],
									"query": [
										{
											"key": "driverId",
											"value": "<long>"
										},
										{
											"key": "startMs",
											"value": "<long>"
										},
										{
											"key": "endMs",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"authenticationLogs\": [\n  {\n   \"actionType\": \"<string>\",\n   \"address\": \"<string>\",\n   \"addressName\": \"<string>\",\n   \"city\": \"<string>\",\n   \"happenedAtMs\": \"<long>\",\n   \"state\": \"<string>\"\n  },\n  {\n   \"actionType\": \"<string>\",\n   \"address\": \"<string>\",\n   \"addressName\": \"<string>\",\n   \"city\": \"<string>\",\n   \"happenedAtMs\": \"<long>\",\n   \"state\": \"<string>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Get current HOS status for all drivers",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/fleet/hos_logs_summary?after=<string>&limit=<int64>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"fleet",
								"hos_logs_summary"
							],
							"query": [
								{
									"key": "after",
									"value": "<string>",
									"description": "Pagination parameter indicating the cursor position to continue returning results after. Used in conjunction with the 'limit' parameter."
								},
								{
									"key": "limit",
									"value": "<int64>",
									"description": "Pagination parameter indicating the number of results to return in this request. Used in conjunction with 'after'."
								}
							]
						},
						"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet the current HOS status for all drivers. Note that this includes inactive as well as active drivers. You may need to upgrade your API token to version 2019-07-31 or later to leverage response pagination. [See here](https://kb.samsara.com/hc/en-us/articles/360026132972-Upgrading-API-Tokens)"
					},
					"response": [
						{
							"name": "HOS logs for the specified driver.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/hos_logs_summary?after=<string>&limit=<int64>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"hos_logs_summary"
									],
									"query": [
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "<int64>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"drivers\": [\n  {\n   \"currentDutyStatusCode\": \"<string>\",\n   \"cycleRemaining\": \"<long>\",\n   \"cycleTomorrow\": \"<long>\",\n   \"driveMsToday\": \"<int64>\",\n   \"driverId\": \"<long>\",\n   \"driverName\": \"<string>\",\n   \"drivingInViolationCycle\": \"<long>\",\n   \"drivingInViolationToday\": \"<long>\",\n   \"onDutyMsToday\": \"<int64>\",\n   \"pendingDriveMsToday\": \"<int64>\",\n   \"pendingOnDutyMsToday\": \"<int64>\",\n   \"shiftDriveRemaining\": \"<long>\",\n   \"shiftRemaining\": \"<long>\",\n   \"timeInCurrentStatus\": \"<long>\",\n   \"timeUntilBreak\": \"<long>\",\n   \"vehicleName\": \"<string>\"\n  },\n  {\n   \"currentDutyStatusCode\": \"<string>\",\n   \"cycleRemaining\": \"<long>\",\n   \"cycleTomorrow\": \"<long>\",\n   \"driveMsToday\": \"<int64>\",\n   \"driverId\": \"<long>\",\n   \"driverName\": \"<string>\",\n   \"drivingInViolationCycle\": \"<long>\",\n   \"drivingInViolationToday\": \"<long>\",\n   \"onDutyMsToday\": \"<int64>\",\n   \"pendingDriveMsToday\": \"<int64>\",\n   \"pendingOnDutyMsToday\": \"<int64>\",\n   \"shiftDriveRemaining\": \"<long>\",\n   \"shiftRemaining\": \"<long>\",\n   \"timeInCurrentStatus\": \"<long>\",\n   \"timeUntilBreak\": \"<long>\",\n   \"vehicleName\": \"<string>\"\n  }\n ],\n \"pagination\": {\n  \"hasNextPage\": \"<boolean>\",\n  \"endCursor\": \"<string>\"\n }\n}"
						},
						{
							"name": "Unexpected error.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/hos_logs_summary?after=<string>&limit=<int64>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"hos_logs_summary"
									],
									"query": [
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "<int64>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						}
					]
				}
			],
			"description": "Driver logs containing duty status, certification details, and associated vehicles and trailers are available. You can also retrieve summarized total active time logs. Signin/Signout logs are also available. Drivers can track hours of service via the Samsara Driver mobile app.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Industrial",
			"item": [
				{
					"name": "data",
					"item": [
						{
							"name": "Get industrial data",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/industrial/data?startMs=<long>&endMs=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"industrial",
										"data"
									],
									"query": [
										{
											"key": "startMs",
											"value": "<long>",
											"description": "Timestamp in unix milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs. defaults to nowMs."
										},
										{
											"key": "endMs",
											"value": "<long>",
											"description": "Timestamp in unix milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs. Defaults to nowMs."
										}
									]
								},
								"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch all of the data inputs."
							},
							"response": [
								{
									"name": "List of data inputs.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/industrial/data?startMs=<long>&endMs=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"industrial",
												"data"
											],
											"query": [
												{
													"key": "startMs",
													"value": "<long>"
												},
												{
													"key": "endMs",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"dataInputs\": [\n  {\n   \"name\": \"<string>\",\n   \"id\": \"<long>\",\n   \"points\": [\n    {\n     \"timeMs\": \"<long>\",\n     \"value\": \"<double>\"\n    },\n    {\n     \"timeMs\": \"<long>\",\n     \"value\": \"<double>\"\n    }\n   ]\n  },\n  {\n   \"name\": \"<string>\",\n   \"id\": \"<long>\",\n   \"points\": [\n    {\n     \"timeMs\": \"<long>\",\n     \"value\": \"<double>\"\n    },\n    {\n     \"timeMs\": \"<long>\",\n     \"value\": \"<double>\"\n    }\n   ]\n  }\n ]\n}"
								},
								{
									"name": "Unexpected error.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/industrial/data?startMs=<long>&endMs=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"industrial",
												"data"
											],
											"query": [
												{
													"key": "startMs",
													"value": "<long>"
												},
												{
													"key": "endMs",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<string>\""
								}
							]
						},
						{
							"name": "Get industrial data from a specific device",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/industrial/data/:data_input_id?startMs=<long>&endMs=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"industrial",
										"data",
										":data_input_id"
									],
									"query": [
										{
											"key": "startMs",
											"value": "<long>",
											"description": "Timestamp in unix milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs. defaults to nowMs."
										},
										{
											"key": "endMs",
											"value": "<long>",
											"description": "Timestamp in unix milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs. Defaults to nowMs."
										}
									],
									"variable": [
										{
											"key": "data_input_id",
											"value": "<long>",
											"description": "ID of the data input. Must contain only digits 0-9."
										}
									]
								},
								"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch datapoints from a given data input."
							},
							"response": [
								{
									"name": "Unexpected error.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/industrial/data/<long>?startMs=<long>&endMs=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"industrial",
												"data",
												"<long>"
											],
											"query": [
												{
													"key": "startMs",
													"value": "<long>"
												},
												{
													"key": "endMs",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<string>\""
								},
								{
									"name": "Returns datapoints for the given data input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/industrial/data/<long>?startMs=<long>&endMs=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"industrial",
												"data",
												"<long>"
											],
											"query": [
												{
													"key": "startMs",
													"value": "<long>"
												},
												{
													"key": "endMs",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"<string>\",\n \"id\": \"<long>\",\n \"points\": [\n  {\n   \"timeMs\": \"<long>\",\n   \"value\": \"<double>\"\n  },\n  {\n   \"timeMs\": \"<long>\",\n   \"value\": \"<double>\"\n  }\n ]\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "vision",
					"item": [
						{
							"name": "cameras",
							"item": [
								{
									"name": "Fetch industrial cameras",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/industrial/vision/cameras",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"industrial",
												"vision",
												"cameras"
											]
										},
										"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch all cameras."
									},
									"response": [
										{
											"name": "Unexpected error.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v1/industrial/vision/cameras",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"industrial",
														"vision",
														"cameras"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<string>\""
										},
										{
											"name": "Returns details about a camera.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v1/industrial/vision/cameras",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"industrial",
														"vision",
														"cameras"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"cameraId\": \"<long>\",\n  \"cameraName\": \"<string>\",\n  \"ethernetIp\": \"<string>\",\n  \"wifiIp\": \"<string>\"\n },\n {\n  \"cameraId\": \"<long>\",\n  \"cameraName\": \"<string>\",\n  \"ethernetIp\": \"<string>\",\n  \"wifiIp\": \"<string>\"\n }\n]"
										}
									]
								},
								{
									"name": "Fetch industrial camera programs",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/industrial/vision/cameras/:camera_id/programs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"industrial",
												"vision",
												"cameras",
												":camera_id",
												"programs"
											],
											"variable": [
												{
													"key": "camera_id",
													"value": "<long>",
													"description": "The camera_id should be valid for the given accessToken."
												}
											]
										},
										"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch configured programs on the camera."
									},
									"response": [
										{
											"name": "Unexpected error.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v1/industrial/vision/cameras/<long>/programs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"industrial",
														"vision",
														"cameras",
														"<long>",
														"programs"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<string>\""
										},
										{
											"name": "Returns programs configured on the camera.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v1/industrial/vision/cameras/<long>/programs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"industrial",
														"vision",
														"cameras",
														"<long>",
														"programs"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"programId\": \"<long>\",\n  \"programName\": \"<string>\"\n },\n {\n  \"programId\": \"<long>\",\n  \"programName\": \"<string>\"\n }\n]"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "runs",
							"item": [
								{
									"name": "{camera id}",
									"item": [
										{
											"name": "Fetch runs by camera",
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v1/industrial/vision/runs/:camera_id?durationMs=<long>&endMs=<long>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"industrial",
														"vision",
														"runs",
														":camera_id"
													],
													"query": [
														{
															"key": "durationMs",
															"value": "<long>",
															"description": "DurationMs is a required param. This works with the EndMs parameter. Indicates the duration in which the visionRuns will be fetched"
														},
														{
															"key": "endMs",
															"value": "<long>",
															"description": "EndMs is an optional param. It will default to the current time."
														}
													],
													"variable": [
														{
															"key": "camera_id",
															"value": "<long>",
															"description": "The camera_id should be valid for the given accessToken."
														}
													]
												},
												"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch runs by camera."
											},
											"response": [
												{
													"name": "Return runs by cameraId.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v1/industrial/vision/runs/<long>?durationMs=<long>&endMs=<long>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"industrial",
																"vision",
																"runs",
																"<long>"
															],
															"query": [
																{
																	"key": "durationMs",
																	"value": "<long>"
																},
																{
																	"key": "endMs",
																	"value": "<long>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"deviceId\": \"<long>\",\n  \"endedAtMs\": \"<long>\",\n  \"program\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"reportMetadata\": {\n   \"itemsPerMinute\": \"<float64>\",\n   \"noReadCount\": \"<long>\",\n   \"rejectCount\": \"<long>\",\n   \"successCount\": \"<long>\"\n  },\n  \"startedAtMs\": \"<long>\"\n },\n {\n  \"deviceId\": \"<long>\",\n  \"endedAtMs\": \"<long>\",\n  \"program\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"reportMetadata\": {\n   \"itemsPerMinute\": \"<float64>\",\n   \"noReadCount\": \"<long>\",\n   \"rejectCount\": \"<long>\",\n   \"successCount\": \"<long>\"\n  },\n  \"startedAtMs\": \"<long>\"\n }\n]"
												},
												{
													"name": "Unexpected error.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v1/industrial/vision/runs/<long>?durationMs=<long>&endMs=<long>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"industrial",
																"vision",
																"runs",
																"<long>"
															],
															"query": [
																{
																	"key": "durationMs",
																	"value": "<long>"
																},
																{
																	"key": "endMs",
																	"value": "<long>"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<string>\""
												}
											]
										},
										{
											"name": "Fetch runs by camera and program",
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v1/industrial/vision/runs/:camera_id/:program_id/:started_at_ms?include=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"industrial",
														"vision",
														"runs",
														":camera_id",
														":program_id",
														":started_at_ms"
													],
													"query": [
														{
															"key": "include",
															"value": "<string>",
															"description": "Include is a filter parameter. Accepts 'pass', 'reject' or 'no_read'."
														}
													],
													"variable": [
														{
															"key": "camera_id",
															"value": "<long>",
															"description": "The camera_id should be valid for the given accessToken."
														},
														{
															"key": "program_id",
															"value": "<long>",
															"description": "The configured program's ID on the camera."
														},
														{
															"key": "started_at_ms",
															"value": "<long>",
															"description": "Started_at_ms is a required param. Indicates the start time of the run to be fetched."
														}
													]
												},
												"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch runs by camera and program."
											},
											"response": [
												{
													"name": "Return runs by camera ID and program ID.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v1/industrial/vision/runs/<long>/<long>/<long>?include=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"industrial",
																"vision",
																"runs",
																"<long>",
																"<long>",
																"<long>"
															],
															"query": [
																{
																	"key": "include",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"deviceId\": \"<long>\",\n \"endedAtMs\": \"<long>\",\n \"programId\": \"<long>\",\n \"reportMetadata\": {\n  \"itemsPerMinute\": \"<float64>\",\n  \"noReadCount\": \"<long>\",\n  \"rejectCount\": \"<long>\",\n  \"successCount\": \"<long>\"\n },\n \"results\": [\n  {\n   \"captureAtMs\": \"<float64>\",\n   \"result\": \"<string>\",\n   \"stepResults\": [\n    {\n     \"angleCheck\": {\n      \"angleConfigured\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"angleFound\": \"<long>\",\n      \"endStepName\": \"<string>\",\n      \"startStepName\": \"<string>\"\n     },\n     \"barcode\": [\n      {\n       \"contents\": \"<string>\",\n       \"matchString\": \"<string>\",\n       \"type\": \"<string>\"\n      },\n      {\n       \"contents\": \"<string>\",\n       \"matchString\": \"<string>\",\n       \"type\": \"<string>\"\n      }\n     ],\n     \"booleanLogic\": {\n      \"operator\": \"<string>\",\n      \"steps\": [\n       {\n        \"name\": \"<string>\",\n        \"result\": \"<string>\"\n       },\n       {\n        \"name\": \"<string>\",\n        \"result\": \"<string>\"\n       }\n      ]\n     },\n     \"caliper\": {\n      \"angleRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      },\n      \"contrastRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"distanceFound\": \"<float>\",\n      \"filterPolarity\": \"LIGHT TO DARK\",\n      \"maxDistance\": \"<float>\",\n      \"minDistance\": \"<float>\",\n      \"sharpnessRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"straightnessRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      },\n      \"unit\": \"<string>\"\n     },\n     \"contour\": {\n      \"angleDegrees\": \"<long>\",\n      \"angleTolerance\": \"<long>\",\n      \"matchPercentage\": \"<long>\",\n      \"matchThreshold\": \"<long>\"\n     },\n     \"distance\": {\n      \"distanceFound\": \"<float64>\",\n      \"endStepName\": \"<string>\",\n      \"enforceOffsetAngleRange\": \"<boolean>\",\n      \"maxDistance\": \"<float64>\",\n      \"maxOffsetAngle\": \"<long>\",\n      \"minDistance\": \"<float64>\",\n      \"minOffsetAngle\": \"<long>\",\n      \"offsetAngleFound\": \"<long>\",\n      \"startStepName\": \"<string>\",\n      \"unit\": \"<string>\"\n     },\n     \"expirationDate\": {\n      \"dateOffset\": \"<long>\",\n      \"foundDate\": \"<string>\",\n      \"matchDate\": \"<string>\"\n     },\n     \"findCopies\": {\n      \"angleTolerance\": \"<long>\",\n      \"foundCount\": \"<long>\",\n      \"maxCount\": \"<long>\",\n      \"minCount\": \"<long>\",\n      \"threshold\": \"<long>\"\n     },\n     \"findEdge\": {\n      \"angleFound\": \"<float64>\",\n      \"angleRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      },\n      \"contrastPercent\": \"<float64>\",\n      \"contrastRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"filterPolarity\": \"<string>\",\n      \"sharpnessPercent\": \"<float64>\",\n      \"sharpnessRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"straightnessFound\": \"<float64>\",\n      \"straightnessRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      }\n     },\n     \"findShapes\": {\n      \"foundCount\": \"<integer>\",\n      \"maxCount\": \"<integer>\",\n      \"minCount\": \"<integer>\"\n     },\n     \"fixture\": {\n      \"coordinates\": {\n       \"x\": \"<integer>\",\n       \"y\": \"<integer>\"\n      },\n      \"found\": \"<boolean>\",\n      \"rotationDegrees\": \"<long>\"\n     },\n     \"labelMatch\": {\n      \"score\": \"<long>\",\n      \"threshold\": \"<long>\"\n     },\n     \"name\": \"<string>\",\n     \"presenceAbsence\": {\n      \"blueRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"checkForAbsence\": \"<boolean>\",\n      \"grayscaleRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"greenRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"hueRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"redRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"saturationRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"score\": \"<long>\",\n      \"threshold\": \"<long>\",\n      \"valueRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      }\n     },\n     \"result\": \"<string>\",\n     \"textMatch\": {\n      \"foundText\": \"<string>\",\n      \"matchString\": \"<string>\"\n     }\n    },\n    {\n     \"angleCheck\": {\n      \"angleConfigured\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"angleFound\": \"<long>\",\n      \"endStepName\": \"<string>\",\n      \"startStepName\": \"<string>\"\n     },\n     \"barcode\": [\n      {\n       \"contents\": \"<string>\",\n       \"matchString\": \"<string>\",\n       \"type\": \"<string>\"\n      },\n      {\n       \"contents\": \"<string>\",\n       \"matchString\": \"<string>\",\n       \"type\": \"<string>\"\n      }\n     ],\n     \"booleanLogic\": {\n      \"operator\": \"<string>\",\n      \"steps\": [\n       {\n        \"name\": \"<string>\",\n        \"result\": \"<string>\"\n       },\n       {\n        \"name\": \"<string>\",\n        \"result\": \"<string>\"\n       }\n      ]\n     },\n     \"caliper\": {\n      \"angleRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      },\n      \"contrastRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"distanceFound\": \"<float>\",\n      \"filterPolarity\": \"LIGHT TO DARK\",\n      \"maxDistance\": \"<float>\",\n      \"minDistance\": \"<float>\",\n      \"sharpnessRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"straightnessRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      },\n      \"unit\": \"<string>\"\n     },\n     \"contour\": {\n      \"angleDegrees\": \"<long>\",\n      \"angleTolerance\": \"<long>\",\n      \"matchPercentage\": \"<long>\",\n      \"matchThreshold\": \"<long>\"\n     },\n     \"distance\": {\n      \"distanceFound\": \"<float64>\",\n      \"endStepName\": \"<string>\",\n      \"enforceOffsetAngleRange\": \"<boolean>\",\n      \"maxDistance\": \"<float64>\",\n      \"maxOffsetAngle\": \"<long>\",\n      \"minDistance\": \"<float64>\",\n      \"minOffsetAngle\": \"<long>\",\n      \"offsetAngleFound\": \"<long>\",\n      \"startStepName\": \"<string>\",\n      \"unit\": \"<string>\"\n     },\n     \"expirationDate\": {\n      \"dateOffset\": \"<long>\",\n      \"foundDate\": \"<string>\",\n      \"matchDate\": \"<string>\"\n     },\n     \"findCopies\": {\n      \"angleTolerance\": \"<long>\",\n      \"foundCount\": \"<long>\",\n      \"maxCount\": \"<long>\",\n      \"minCount\": \"<long>\",\n      \"threshold\": \"<long>\"\n     },\n     \"findEdge\": {\n      \"angleFound\": \"<float64>\",\n      \"angleRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      },\n      \"contrastPercent\": \"<float64>\",\n      \"contrastRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"filterPolarity\": \"<string>\",\n      \"sharpnessPercent\": \"<float64>\",\n      \"sharpnessRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"straightnessFound\": \"<float64>\",\n      \"straightnessRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      }\n     },\n     \"findShapes\": {\n      \"foundCount\": \"<integer>\",\n      \"maxCount\": \"<integer>\",\n      \"minCount\": \"<integer>\"\n     },\n     \"fixture\": {\n      \"coordinates\": {\n       \"x\": \"<integer>\",\n       \"y\": \"<integer>\"\n      },\n      \"found\": \"<boolean>\",\n      \"rotationDegrees\": \"<long>\"\n     },\n     \"labelMatch\": {\n      \"score\": \"<long>\",\n      \"threshold\": \"<long>\"\n     },\n     \"name\": \"<string>\",\n     \"presenceAbsence\": {\n      \"blueRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"checkForAbsence\": \"<boolean>\",\n      \"grayscaleRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"greenRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"hueRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"redRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"saturationRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"score\": \"<long>\",\n      \"threshold\": \"<long>\",\n      \"valueRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      }\n     },\n     \"result\": \"<string>\",\n     \"textMatch\": {\n      \"foundText\": \"<string>\",\n      \"matchString\": \"<string>\"\n     }\n    }\n   ]\n  },\n  {\n   \"captureAtMs\": \"<float64>\",\n   \"result\": \"<string>\",\n   \"stepResults\": [\n    {\n     \"angleCheck\": {\n      \"angleConfigured\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"angleFound\": \"<long>\",\n      \"endStepName\": \"<string>\",\n      \"startStepName\": \"<string>\"\n     },\n     \"barcode\": [\n      {\n       \"contents\": \"<string>\",\n       \"matchString\": \"<string>\",\n       \"type\": \"<string>\"\n      },\n      {\n       \"contents\": \"<string>\",\n       \"matchString\": \"<string>\",\n       \"type\": \"<string>\"\n      }\n     ],\n     \"booleanLogic\": {\n      \"operator\": \"<string>\",\n      \"steps\": [\n       {\n        \"name\": \"<string>\",\n        \"result\": \"<string>\"\n       },\n       {\n        \"name\": \"<string>\",\n        \"result\": \"<string>\"\n       }\n      ]\n     },\n     \"caliper\": {\n      \"angleRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      },\n      \"contrastRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"distanceFound\": \"<float>\",\n      \"filterPolarity\": \"LIGHT TO DARK\",\n      \"maxDistance\": \"<float>\",\n      \"minDistance\": \"<float>\",\n      \"sharpnessRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"straightnessRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      },\n      \"unit\": \"<string>\"\n     },\n     \"contour\": {\n      \"angleDegrees\": \"<long>\",\n      \"angleTolerance\": \"<long>\",\n      \"matchPercentage\": \"<long>\",\n      \"matchThreshold\": \"<long>\"\n     },\n     \"distance\": {\n      \"distanceFound\": \"<float64>\",\n      \"endStepName\": \"<string>\",\n      \"enforceOffsetAngleRange\": \"<boolean>\",\n      \"maxDistance\": \"<float64>\",\n      \"maxOffsetAngle\": \"<long>\",\n      \"minDistance\": \"<float64>\",\n      \"minOffsetAngle\": \"<long>\",\n      \"offsetAngleFound\": \"<long>\",\n      \"startStepName\": \"<string>\",\n      \"unit\": \"<string>\"\n     },\n     \"expirationDate\": {\n      \"dateOffset\": \"<long>\",\n      \"foundDate\": \"<string>\",\n      \"matchDate\": \"<string>\"\n     },\n     \"findCopies\": {\n      \"angleTolerance\": \"<long>\",\n      \"foundCount\": \"<long>\",\n      \"maxCount\": \"<long>\",\n      \"minCount\": \"<long>\",\n      \"threshold\": \"<long>\"\n     },\n     \"findEdge\": {\n      \"angleFound\": \"<float64>\",\n      \"angleRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      },\n      \"contrastPercent\": \"<float64>\",\n      \"contrastRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"filterPolarity\": \"<string>\",\n      \"sharpnessPercent\": \"<float64>\",\n      \"sharpnessRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"straightnessFound\": \"<float64>\",\n      \"straightnessRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      }\n     },\n     \"findShapes\": {\n      \"foundCount\": \"<integer>\",\n      \"maxCount\": \"<integer>\",\n      \"minCount\": \"<integer>\"\n     },\n     \"fixture\": {\n      \"coordinates\": {\n       \"x\": \"<integer>\",\n       \"y\": \"<integer>\"\n      },\n      \"found\": \"<boolean>\",\n      \"rotationDegrees\": \"<long>\"\n     },\n     \"labelMatch\": {\n      \"score\": \"<long>\",\n      \"threshold\": \"<long>\"\n     },\n     \"name\": \"<string>\",\n     \"presenceAbsence\": {\n      \"blueRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"checkForAbsence\": \"<boolean>\",\n      \"grayscaleRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"greenRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"hueRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"redRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"saturationRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"score\": \"<long>\",\n      \"threshold\": \"<long>\",\n      \"valueRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      }\n     },\n     \"result\": \"<string>\",\n     \"textMatch\": {\n      \"foundText\": \"<string>\",\n      \"matchString\": \"<string>\"\n     }\n    },\n    {\n     \"angleCheck\": {\n      \"angleConfigured\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"angleFound\": \"<long>\",\n      \"endStepName\": \"<string>\",\n      \"startStepName\": \"<string>\"\n     },\n     \"barcode\": [\n      {\n       \"contents\": \"<string>\",\n       \"matchString\": \"<string>\",\n       \"type\": \"<string>\"\n      },\n      {\n       \"contents\": \"<string>\",\n       \"matchString\": \"<string>\",\n       \"type\": \"<string>\"\n      }\n     ],\n     \"booleanLogic\": {\n      \"operator\": \"<string>\",\n      \"steps\": [\n       {\n        \"name\": \"<string>\",\n        \"result\": \"<string>\"\n       },\n       {\n        \"name\": \"<string>\",\n        \"result\": \"<string>\"\n       }\n      ]\n     },\n     \"caliper\": {\n      \"angleRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      },\n      \"contrastRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"distanceFound\": \"<float>\",\n      \"filterPolarity\": \"LIGHT TO DARK\",\n      \"maxDistance\": \"<float>\",\n      \"minDistance\": \"<float>\",\n      \"sharpnessRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"straightnessRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      },\n      \"unit\": \"<string>\"\n     },\n     \"contour\": {\n      \"angleDegrees\": \"<long>\",\n      \"angleTolerance\": \"<long>\",\n      \"matchPercentage\": \"<long>\",\n      \"matchThreshold\": \"<long>\"\n     },\n     \"distance\": {\n      \"distanceFound\": \"<float64>\",\n      \"endStepName\": \"<string>\",\n      \"enforceOffsetAngleRange\": \"<boolean>\",\n      \"maxDistance\": \"<float64>\",\n      \"maxOffsetAngle\": \"<long>\",\n      \"minDistance\": \"<float64>\",\n      \"minOffsetAngle\": \"<long>\",\n      \"offsetAngleFound\": \"<long>\",\n      \"startStepName\": \"<string>\",\n      \"unit\": \"<string>\"\n     },\n     \"expirationDate\": {\n      \"dateOffset\": \"<long>\",\n      \"foundDate\": \"<string>\",\n      \"matchDate\": \"<string>\"\n     },\n     \"findCopies\": {\n      \"angleTolerance\": \"<long>\",\n      \"foundCount\": \"<long>\",\n      \"maxCount\": \"<long>\",\n      \"minCount\": \"<long>\",\n      \"threshold\": \"<long>\"\n     },\n     \"findEdge\": {\n      \"angleFound\": \"<float64>\",\n      \"angleRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      },\n      \"contrastPercent\": \"<float64>\",\n      \"contrastRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"filterPolarity\": \"<string>\",\n      \"sharpnessPercent\": \"<float64>\",\n      \"sharpnessRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"straightnessFound\": \"<float64>\",\n      \"straightnessRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      }\n     },\n     \"findShapes\": {\n      \"foundCount\": \"<integer>\",\n      \"maxCount\": \"<integer>\",\n      \"minCount\": \"<integer>\"\n     },\n     \"fixture\": {\n      \"coordinates\": {\n       \"x\": \"<integer>\",\n       \"y\": \"<integer>\"\n      },\n      \"found\": \"<boolean>\",\n      \"rotationDegrees\": \"<long>\"\n     },\n     \"labelMatch\": {\n      \"score\": \"<long>\",\n      \"threshold\": \"<long>\"\n     },\n     \"name\": \"<string>\",\n     \"presenceAbsence\": {\n      \"blueRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"checkForAbsence\": \"<boolean>\",\n      \"grayscaleRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"greenRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"hueRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"redRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"saturationRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"score\": \"<long>\",\n      \"threshold\": \"<long>\",\n      \"valueRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      }\n     },\n     \"result\": \"<string>\",\n     \"textMatch\": {\n      \"foundText\": \"<string>\",\n      \"matchString\": \"<string>\"\n     }\n    }\n   ]\n  }\n ],\n \"startedAtMs\": \"<long>\"\n}"
												},
												{
													"name": "Unexpected error.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v1/industrial/vision/runs/<long>/<long>/<long>?include=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"industrial",
																"vision",
																"runs",
																"<long>",
																"<long>",
																"<long>"
															],
															"query": [
																{
																	"key": "include",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<string>\""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Fetch runs",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/industrial/vision/runs?durationMs=<long>&endMs=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"industrial",
												"vision",
												"runs"
											],
											"query": [
												{
													"key": "durationMs",
													"value": "<long>",
													"description": "DurationMs is a required param. This works with the EndMs parameter. Indicates the duration in which the visionRuns will be fetched"
												},
												{
													"key": "endMs",
													"value": "<long>",
													"description": "EndMs is an optional param. It will default to the current time."
												}
											]
										},
										"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch runs."
									},
									"response": [
										{
											"name": "Unexpected error.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v1/industrial/vision/runs?durationMs=<long>&endMs=<long>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"industrial",
														"vision",
														"runs"
													],
													"query": [
														{
															"key": "durationMs",
															"value": "<long>"
														},
														{
															"key": "endMs",
															"value": "<long>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<string>\""
										},
										{
											"name": "Return runs.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v1/industrial/vision/runs?durationMs=<long>&endMs=<long>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"industrial",
														"vision",
														"runs"
													],
													"query": [
														{
															"key": "durationMs",
															"value": "<long>"
														},
														{
															"key": "endMs",
															"value": "<long>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"visionRuns\": [\n  {\n   \"deviceId\": \"<long>\",\n   \"endedAtMs\": \"<long>\",\n   \"programId\": \"<long>\",\n   \"reportMetadata\": {\n    \"itemsPerMinute\": \"<float64>\",\n    \"noReadCount\": \"<long>\",\n    \"rejectCount\": \"<long>\",\n    \"successCount\": \"<long>\"\n   },\n   \"startedAtMs\": \"<long>\"\n  },\n  {\n   \"deviceId\": \"<long>\",\n   \"endedAtMs\": \"<long>\",\n   \"programId\": \"<long>\",\n   \"reportMetadata\": {\n    \"itemsPerMinute\": \"<float64>\",\n    \"noReadCount\": \"<long>\",\n    \"rejectCount\": \"<long>\",\n    \"successCount\": \"<long>\"\n   },\n   \"startedAtMs\": \"<long>\"\n  }\n ]\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Fetch the latest run for a camera or program",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/industrial/vision/run/camera/:camera_id?program_id=<long>&startedAtMs=<long>&include=<string>&limit=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"industrial",
										"vision",
										"run",
										"camera",
										":camera_id"
									],
									"query": [
										{
											"key": "program_id",
											"value": "<long>",
											"description": "The configured program's ID on the camera."
										},
										{
											"key": "startedAtMs",
											"value": "<long>",
											"description": "EndMs is an optional param. It will default to the current time."
										},
										{
											"key": "include",
											"value": "<string>",
											"description": "Include is a filter parameter. Accepts 'pass', 'reject' or 'no_read'."
										},
										{
											"key": "limit",
											"value": "<long>",
											"description": "Limit is an integer value from 1 to 1,000."
										}
									],
									"variable": [
										{
											"key": "camera_id",
											"value": "<long>",
											"description": "The camera_id should be valid for the given accessToken."
										}
									]
								},
								"description": "Fetch the latest run for a camera or program by default. If startedAtMs is supplied, fetch the specific run that corresponds to that start time."
							},
							"response": [
								{
									"name": "Unexpected error.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/industrial/vision/run/camera/<long>?program_id=<long>&startedAtMs=<long>&include=<string>&limit=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"industrial",
												"vision",
												"run",
												"camera",
												"<long>"
											],
											"query": [
												{
													"key": "program_id",
													"value": "<long>"
												},
												{
													"key": "startedAtMs",
													"value": "<long>"
												},
												{
													"key": "include",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<string>\""
								},
								{
									"name": "Returns the details for this run.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/industrial/vision/run/camera/<long>?program_id=<long>&startedAtMs=<long>&include=<string>&limit=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"industrial",
												"vision",
												"run",
												"camera",
												"<long>"
											],
											"query": [
												{
													"key": "program_id",
													"value": "<long>"
												},
												{
													"key": "startedAtMs",
													"value": "<long>"
												},
												{
													"key": "include",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"cameraId\": \"<long>\",\n \"endedAtMs\": \"<long>\",\n \"inspectionResults\": [\n  {\n   \"captureAtMs\": \"<float64>\",\n   \"result\": \"<string>\",\n   \"stepResults\": [\n    {\n     \"angleCheck\": {\n      \"angleConfigured\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"angleFound\": \"<long>\",\n      \"endStepName\": \"<string>\",\n      \"startStepName\": \"<string>\"\n     },\n     \"barcode\": [\n      {\n       \"contents\": \"<string>\",\n       \"matchString\": \"<string>\",\n       \"type\": \"<string>\"\n      },\n      {\n       \"contents\": \"<string>\",\n       \"matchString\": \"<string>\",\n       \"type\": \"<string>\"\n      }\n     ],\n     \"booleanLogic\": {\n      \"operator\": \"<string>\",\n      \"steps\": [\n       {\n        \"name\": \"<string>\",\n        \"result\": \"<string>\"\n       },\n       {\n        \"name\": \"<string>\",\n        \"result\": \"<string>\"\n       }\n      ]\n     },\n     \"caliper\": {\n      \"angleRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      },\n      \"contrastRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"distanceFound\": \"<float>\",\n      \"filterPolarity\": \"LIGHT TO DARK\",\n      \"maxDistance\": \"<float>\",\n      \"minDistance\": \"<float>\",\n      \"sharpnessRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"straightnessRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      },\n      \"unit\": \"<string>\"\n     },\n     \"contour\": {\n      \"angleDegrees\": \"<long>\",\n      \"angleTolerance\": \"<long>\",\n      \"matchPercentage\": \"<long>\",\n      \"matchThreshold\": \"<long>\"\n     },\n     \"distance\": {\n      \"distanceFound\": \"<float64>\",\n      \"endStepName\": \"<string>\",\n      \"enforceOffsetAngleRange\": \"<boolean>\",\n      \"maxDistance\": \"<float64>\",\n      \"maxOffsetAngle\": \"<long>\",\n      \"minDistance\": \"<float64>\",\n      \"minOffsetAngle\": \"<long>\",\n      \"offsetAngleFound\": \"<long>\",\n      \"startStepName\": \"<string>\",\n      \"unit\": \"<string>\"\n     },\n     \"expirationDate\": {\n      \"dateOffset\": \"<long>\",\n      \"foundDate\": \"<string>\",\n      \"matchDate\": \"<string>\"\n     },\n     \"findCopies\": {\n      \"angleTolerance\": \"<long>\",\n      \"foundCount\": \"<long>\",\n      \"maxCount\": \"<long>\",\n      \"minCount\": \"<long>\",\n      \"threshold\": \"<long>\"\n     },\n     \"findEdge\": {\n      \"angleFound\": \"<float64>\",\n      \"angleRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      },\n      \"contrastPercent\": \"<float64>\",\n      \"contrastRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"filterPolarity\": \"<string>\",\n      \"sharpnessPercent\": \"<float64>\",\n      \"sharpnessRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"straightnessFound\": \"<float64>\",\n      \"straightnessRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      }\n     },\n     \"findShapes\": {\n      \"foundCount\": \"<integer>\",\n      \"maxCount\": \"<integer>\",\n      \"minCount\": \"<integer>\"\n     },\n     \"fixture\": {\n      \"coordinates\": {\n       \"x\": \"<integer>\",\n       \"y\": \"<integer>\"\n      },\n      \"found\": \"<boolean>\",\n      \"rotationDegrees\": \"<long>\"\n     },\n     \"labelMatch\": {\n      \"score\": \"<long>\",\n      \"threshold\": \"<long>\"\n     },\n     \"name\": \"<string>\",\n     \"presenceAbsence\": {\n      \"blueRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"checkForAbsence\": \"<boolean>\",\n      \"grayscaleRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"greenRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"hueRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"redRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"saturationRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"score\": \"<long>\",\n      \"threshold\": \"<long>\",\n      \"valueRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      }\n     },\n     \"result\": \"<string>\",\n     \"textMatch\": {\n      \"foundText\": \"<string>\",\n      \"matchString\": \"<string>\"\n     }\n    },\n    {\n     \"angleCheck\": {\n      \"angleConfigured\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"angleFound\": \"<long>\",\n      \"endStepName\": \"<string>\",\n      \"startStepName\": \"<string>\"\n     },\n     \"barcode\": [\n      {\n       \"contents\": \"<string>\",\n       \"matchString\": \"<string>\",\n       \"type\": \"<string>\"\n      },\n      {\n       \"contents\": \"<string>\",\n       \"matchString\": \"<string>\",\n       \"type\": \"<string>\"\n      }\n     ],\n     \"booleanLogic\": {\n      \"operator\": \"<string>\",\n      \"steps\": [\n       {\n        \"name\": \"<string>\",\n        \"result\": \"<string>\"\n       },\n       {\n        \"name\": \"<string>\",\n        \"result\": \"<string>\"\n       }\n      ]\n     },\n     \"caliper\": {\n      \"angleRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      },\n      \"contrastRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"distanceFound\": \"<float>\",\n      \"filterPolarity\": \"LIGHT TO DARK\",\n      \"maxDistance\": \"<float>\",\n      \"minDistance\": \"<float>\",\n      \"sharpnessRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"straightnessRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      },\n      \"unit\": \"<string>\"\n     },\n     \"contour\": {\n      \"angleDegrees\": \"<long>\",\n      \"angleTolerance\": \"<long>\",\n      \"matchPercentage\": \"<long>\",\n      \"matchThreshold\": \"<long>\"\n     },\n     \"distance\": {\n      \"distanceFound\": \"<float64>\",\n      \"endStepName\": \"<string>\",\n      \"enforceOffsetAngleRange\": \"<boolean>\",\n      \"maxDistance\": \"<float64>\",\n      \"maxOffsetAngle\": \"<long>\",\n      \"minDistance\": \"<float64>\",\n      \"minOffsetAngle\": \"<long>\",\n      \"offsetAngleFound\": \"<long>\",\n      \"startStepName\": \"<string>\",\n      \"unit\": \"<string>\"\n     },\n     \"expirationDate\": {\n      \"dateOffset\": \"<long>\",\n      \"foundDate\": \"<string>\",\n      \"matchDate\": \"<string>\"\n     },\n     \"findCopies\": {\n      \"angleTolerance\": \"<long>\",\n      \"foundCount\": \"<long>\",\n      \"maxCount\": \"<long>\",\n      \"minCount\": \"<long>\",\n      \"threshold\": \"<long>\"\n     },\n     \"findEdge\": {\n      \"angleFound\": \"<float64>\",\n      \"angleRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      },\n      \"contrastPercent\": \"<float64>\",\n      \"contrastRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"filterPolarity\": \"<string>\",\n      \"sharpnessPercent\": \"<float64>\",\n      \"sharpnessRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"straightnessFound\": \"<float64>\",\n      \"straightnessRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      }\n     },\n     \"findShapes\": {\n      \"foundCount\": \"<integer>\",\n      \"maxCount\": \"<integer>\",\n      \"minCount\": \"<integer>\"\n     },\n     \"fixture\": {\n      \"coordinates\": {\n       \"x\": \"<integer>\",\n       \"y\": \"<integer>\"\n      },\n      \"found\": \"<boolean>\",\n      \"rotationDegrees\": \"<long>\"\n     },\n     \"labelMatch\": {\n      \"score\": \"<long>\",\n      \"threshold\": \"<long>\"\n     },\n     \"name\": \"<string>\",\n     \"presenceAbsence\": {\n      \"blueRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"checkForAbsence\": \"<boolean>\",\n      \"grayscaleRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"greenRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"hueRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"redRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"saturationRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"score\": \"<long>\",\n      \"threshold\": \"<long>\",\n      \"valueRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      }\n     },\n     \"result\": \"<string>\",\n     \"textMatch\": {\n      \"foundText\": \"<string>\",\n      \"matchString\": \"<string>\"\n     }\n    }\n   ]\n  },\n  {\n   \"captureAtMs\": \"<float64>\",\n   \"result\": \"<string>\",\n   \"stepResults\": [\n    {\n     \"angleCheck\": {\n      \"angleConfigured\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"angleFound\": \"<long>\",\n      \"endStepName\": \"<string>\",\n      \"startStepName\": \"<string>\"\n     },\n     \"barcode\": [\n      {\n       \"contents\": \"<string>\",\n       \"matchString\": \"<string>\",\n       \"type\": \"<string>\"\n      },\n      {\n       \"contents\": \"<string>\",\n       \"matchString\": \"<string>\",\n       \"type\": \"<string>\"\n      }\n     ],\n     \"booleanLogic\": {\n      \"operator\": \"<string>\",\n      \"steps\": [\n       {\n        \"name\": \"<string>\",\n        \"result\": \"<string>\"\n       },\n       {\n        \"name\": \"<string>\",\n        \"result\": \"<string>\"\n       }\n      ]\n     },\n     \"caliper\": {\n      \"angleRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      },\n      \"contrastRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"distanceFound\": \"<float>\",\n      \"filterPolarity\": \"LIGHT TO DARK\",\n      \"maxDistance\": \"<float>\",\n      \"minDistance\": \"<float>\",\n      \"sharpnessRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"straightnessRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      },\n      \"unit\": \"<string>\"\n     },\n     \"contour\": {\n      \"angleDegrees\": \"<long>\",\n      \"angleTolerance\": \"<long>\",\n      \"matchPercentage\": \"<long>\",\n      \"matchThreshold\": \"<long>\"\n     },\n     \"distance\": {\n      \"distanceFound\": \"<float64>\",\n      \"endStepName\": \"<string>\",\n      \"enforceOffsetAngleRange\": \"<boolean>\",\n      \"maxDistance\": \"<float64>\",\n      \"maxOffsetAngle\": \"<long>\",\n      \"minDistance\": \"<float64>\",\n      \"minOffsetAngle\": \"<long>\",\n      \"offsetAngleFound\": \"<long>\",\n      \"startStepName\": \"<string>\",\n      \"unit\": \"<string>\"\n     },\n     \"expirationDate\": {\n      \"dateOffset\": \"<long>\",\n      \"foundDate\": \"<string>\",\n      \"matchDate\": \"<string>\"\n     },\n     \"findCopies\": {\n      \"angleTolerance\": \"<long>\",\n      \"foundCount\": \"<long>\",\n      \"maxCount\": \"<long>\",\n      \"minCount\": \"<long>\",\n      \"threshold\": \"<long>\"\n     },\n     \"findEdge\": {\n      \"angleFound\": \"<float64>\",\n      \"angleRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      },\n      \"contrastPercent\": \"<float64>\",\n      \"contrastRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"filterPolarity\": \"<string>\",\n      \"sharpnessPercent\": \"<float64>\",\n      \"sharpnessRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"straightnessFound\": \"<float64>\",\n      \"straightnessRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      }\n     },\n     \"findShapes\": {\n      \"foundCount\": \"<integer>\",\n      \"maxCount\": \"<integer>\",\n      \"minCount\": \"<integer>\"\n     },\n     \"fixture\": {\n      \"coordinates\": {\n       \"x\": \"<integer>\",\n       \"y\": \"<integer>\"\n      },\n      \"found\": \"<boolean>\",\n      \"rotationDegrees\": \"<long>\"\n     },\n     \"labelMatch\": {\n      \"score\": \"<long>\",\n      \"threshold\": \"<long>\"\n     },\n     \"name\": \"<string>\",\n     \"presenceAbsence\": {\n      \"blueRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"checkForAbsence\": \"<boolean>\",\n      \"grayscaleRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"greenRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"hueRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"redRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"saturationRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"score\": \"<long>\",\n      \"threshold\": \"<long>\",\n      \"valueRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      }\n     },\n     \"result\": \"<string>\",\n     \"textMatch\": {\n      \"foundText\": \"<string>\",\n      \"matchString\": \"<string>\"\n     }\n    },\n    {\n     \"angleCheck\": {\n      \"angleConfigured\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"angleFound\": \"<long>\",\n      \"endStepName\": \"<string>\",\n      \"startStepName\": \"<string>\"\n     },\n     \"barcode\": [\n      {\n       \"contents\": \"<string>\",\n       \"matchString\": \"<string>\",\n       \"type\": \"<string>\"\n      },\n      {\n       \"contents\": \"<string>\",\n       \"matchString\": \"<string>\",\n       \"type\": \"<string>\"\n      }\n     ],\n     \"booleanLogic\": {\n      \"operator\": \"<string>\",\n      \"steps\": [\n       {\n        \"name\": \"<string>\",\n        \"result\": \"<string>\"\n       },\n       {\n        \"name\": \"<string>\",\n        \"result\": \"<string>\"\n       }\n      ]\n     },\n     \"caliper\": {\n      \"angleRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      },\n      \"contrastRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"distanceFound\": \"<float>\",\n      \"filterPolarity\": \"LIGHT TO DARK\",\n      \"maxDistance\": \"<float>\",\n      \"minDistance\": \"<float>\",\n      \"sharpnessRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"straightnessRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      },\n      \"unit\": \"<string>\"\n     },\n     \"contour\": {\n      \"angleDegrees\": \"<long>\",\n      \"angleTolerance\": \"<long>\",\n      \"matchPercentage\": \"<long>\",\n      \"matchThreshold\": \"<long>\"\n     },\n     \"distance\": {\n      \"distanceFound\": \"<float64>\",\n      \"endStepName\": \"<string>\",\n      \"enforceOffsetAngleRange\": \"<boolean>\",\n      \"maxDistance\": \"<float64>\",\n      \"maxOffsetAngle\": \"<long>\",\n      \"minDistance\": \"<float64>\",\n      \"minOffsetAngle\": \"<long>\",\n      \"offsetAngleFound\": \"<long>\",\n      \"startStepName\": \"<string>\",\n      \"unit\": \"<string>\"\n     },\n     \"expirationDate\": {\n      \"dateOffset\": \"<long>\",\n      \"foundDate\": \"<string>\",\n      \"matchDate\": \"<string>\"\n     },\n     \"findCopies\": {\n      \"angleTolerance\": \"<long>\",\n      \"foundCount\": \"<long>\",\n      \"maxCount\": \"<long>\",\n      \"minCount\": \"<long>\",\n      \"threshold\": \"<long>\"\n     },\n     \"findEdge\": {\n      \"angleFound\": \"<float64>\",\n      \"angleRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      },\n      \"contrastPercent\": \"<float64>\",\n      \"contrastRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"filterPolarity\": \"<string>\",\n      \"sharpnessPercent\": \"<float64>\",\n      \"sharpnessRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"straightnessFound\": \"<float64>\",\n      \"straightnessRange\": {\n       \"high\": \"<integer>\",\n       \"low\": \"<integer>\"\n      }\n     },\n     \"findShapes\": {\n      \"foundCount\": \"<integer>\",\n      \"maxCount\": \"<integer>\",\n      \"minCount\": \"<integer>\"\n     },\n     \"fixture\": {\n      \"coordinates\": {\n       \"x\": \"<integer>\",\n       \"y\": \"<integer>\"\n      },\n      \"found\": \"<boolean>\",\n      \"rotationDegrees\": \"<long>\"\n     },\n     \"labelMatch\": {\n      \"score\": \"<long>\",\n      \"threshold\": \"<long>\"\n     },\n     \"name\": \"<string>\",\n     \"presenceAbsence\": {\n      \"blueRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"checkForAbsence\": \"<boolean>\",\n      \"grayscaleRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"greenRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"hueRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"redRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"saturationRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      },\n      \"score\": \"<long>\",\n      \"threshold\": \"<long>\",\n      \"valueRange\": {\n       \"high\": \"<long>\",\n       \"low\": \"<long>\"\n      }\n     },\n     \"result\": \"<string>\",\n     \"textMatch\": {\n      \"foundText\": \"<string>\",\n      \"matchString\": \"<string>\"\n     }\n    }\n   ]\n  }\n ],\n \"isOngoing\": \"<boolean>\",\n \"program\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"runSummary\": {\n  \"itemsPerMinute\": \"<float64>\",\n  \"noReadCount\": \"<long>\",\n  \"rejectCount\": \"<long>\",\n  \"successCount\": \"<long>\"\n },\n \"startedAtMs\": \"<long>\"\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "machines",
					"item": [
						{
							"name": "Get machine history",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"startMs\": \"<integer>\",\n    \"endMs\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/machines/history",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"machines",
										"history"
									]
								},
								"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet historical data for machine objects. This method returns a set of historical data for all machines"
							},
							"response": [
								{
									"name": "List of machine results objects, each containing a time and a datapoint.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"startMs\": \"<integer>\",\n    \"endMs\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/v1/machines/history",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"machines",
												"history"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"machines\": [\n  {\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"vibrations\": [\n    {\n     \"X\": \"<double>\",\n     \"Y\": \"<double>\",\n     \"Z\": \"<double>\",\n     \"time\": \"<long>\"\n    },\n    {\n     \"X\": \"<double>\",\n     \"Y\": \"<double>\",\n     \"Z\": \"<double>\",\n     \"time\": \"<long>\"\n    }\n   ]\n  },\n  {\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"vibrations\": [\n    {\n     \"X\": \"<double>\",\n     \"Y\": \"<double>\",\n     \"Z\": \"<double>\",\n     \"time\": \"<long>\"\n    },\n    {\n     \"X\": \"<double>\",\n     \"Y\": \"<double>\",\n     \"Z\": \"<double>\",\n     \"time\": \"<long>\"\n    }\n   ]\n  }\n ]\n}"
								},
								{
									"name": "Unexpected error.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"startMs\": \"<integer>\",\n    \"endMs\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/v1/machines/history",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"machines",
												"history"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<string>\""
								}
							]
						},
						{
							"name": "Get machines",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/machines/list",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"machines",
										"list"
									]
								},
								"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet machine objects. This method returns a list of the machine objects in the Samsara Cloud and information about them."
							},
							"response": [
								{
									"name": "List of machine objects.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/machines/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"machines",
												"list"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"machines\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\",\n   \"notes\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\",\n   \"notes\": \"<string>\"\n  }\n ]\n}"
								},
								{
									"name": "Unexpected error.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/machines/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"machines",
												"list"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<string>\""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "Access to industrial data",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "0e6506b6-990b-43be-8aae-6fc049d23755",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "0760d3da-1d6f-46bb-ad53-d16890dc4d55",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Maintenance",
			"item": [
				{
					"name": "DVIRs",
					"item": [
						{
							"name": "Get DVIRs",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/maintenance/dvirs?end_ms=<integer>&duration_ms=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"maintenance",
										"dvirs"
									],
									"query": [
										{
											"key": "end_ms",
											"value": "<integer>",
											"description": "Time in millis until the last dvir log."
										},
										{
											"key": "duration_ms",
											"value": "<integer>",
											"description": "Time in millis which corresponds to the duration before the end_ms."
										}
									]
								},
								"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet DVIRs for the org within provided time constraints"
							},
							"response": [
								{
									"name": "Unexpected error.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/fleet/maintenance/dvirs?end_ms=<integer>&duration_ms=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"fleet",
												"maintenance",
												"dvirs"
											],
											"query": [
												{
													"key": "end_ms",
													"value": "<integer>"
												},
												{
													"key": "duration_ms",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<string>\""
								},
								{
									"name": "DVIRs for the specified duration.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/fleet/maintenance/dvirs?end_ms=<integer>&duration_ms=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"fleet",
												"maintenance",
												"dvirs"
											],
											"query": [
												{
													"key": "end_ms",
													"value": "<integer>"
												},
												{
													"key": "duration_ms",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"dvirs\": [\n  {\n   \"authorSignature\": {\n    \"driverId\": \"<long>\",\n    \"email\": \"<string>\",\n    \"mechanicUserId\": \"<long>\",\n    \"name\": \"<string>\",\n    \"signedAt\": \"<long>\",\n    \"type\": \"<string>\",\n    \"username\": \"<string>\"\n   },\n   \"defectsCorrected\": \"<boolean>\",\n   \"defectsNeedNotBeCorrected\": \"<boolean>\",\n   \"id\": \"<long>\",\n   \"inspectionType\": \"<string>\",\n   \"mechanicNotes\": \"<string>\",\n   \"mechanicOrAgentSignature\": {\n    \"driverId\": \"<long>\",\n    \"email\": \"<string>\",\n    \"mechanicUserId\": \"<long>\",\n    \"name\": \"<string>\",\n    \"signedAt\": \"<long>\",\n    \"type\": \"<string>\",\n    \"username\": \"<string>\"\n   },\n   \"nextDriverSignature\": {\n    \"driverId\": \"<long>\",\n    \"email\": \"<string>\",\n    \"name\": \"<string>\",\n    \"signedAt\": \"<long>\",\n    \"type\": \"<string>\",\n    \"username\": \"<string>\"\n   },\n   \"odometerMiles\": \"<long>\",\n   \"startedAtMs\": \"<long>\",\n   \"timeMs\": \"<long>\",\n   \"trailerDefects\": [\n    {\n     \"comment\": \"<string>\",\n     \"defectType\": \"<string>\",\n     \"id\": \"<long>\",\n     \"resolved\": \"<boolean>\",\n     \"resolvedAt\": \"<long>\",\n     \"resolvedByDriverId\": \"<long>\",\n     \"resolvedByMechanicId\": \"<long>\"\n    },\n    {\n     \"comment\": \"<string>\",\n     \"defectType\": \"<string>\",\n     \"id\": \"<long>\",\n     \"resolved\": \"<boolean>\",\n     \"resolvedAt\": \"<long>\",\n     \"resolvedByDriverId\": \"<long>\",\n     \"resolvedByMechanicId\": \"<long>\"\n    }\n   ],\n   \"trailerId\": \"<integer>\",\n   \"trailerName\": \"<string>\",\n   \"vehicle\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   \"vehicleCondition\": \"<string>\",\n   \"vehicleDefects\": [\n    {\n     \"comment\": \"<string>\",\n     \"defectType\": \"<string>\",\n     \"id\": \"<long>\",\n     \"resolved\": \"<boolean>\",\n     \"resolvedAt\": \"<long>\",\n     \"resolvedByDriverId\": \"<long>\",\n     \"resolvedByMechanicId\": \"<long>\"\n    },\n    {\n     \"comment\": \"<string>\",\n     \"defectType\": \"<string>\",\n     \"id\": \"<long>\",\n     \"resolved\": \"<boolean>\",\n     \"resolvedAt\": \"<long>\",\n     \"resolvedByDriverId\": \"<long>\",\n     \"resolvedByMechanicId\": \"<long>\"\n    }\n   ]\n  },\n  {\n   \"authorSignature\": {\n    \"driverId\": \"<long>\",\n    \"email\": \"<string>\",\n    \"mechanicUserId\": \"<long>\",\n    \"name\": \"<string>\",\n    \"signedAt\": \"<long>\",\n    \"type\": \"<string>\",\n    \"username\": \"<string>\"\n   },\n   \"defectsCorrected\": \"<boolean>\",\n   \"defectsNeedNotBeCorrected\": \"<boolean>\",\n   \"id\": \"<long>\",\n   \"inspectionType\": \"<string>\",\n   \"mechanicNotes\": \"<string>\",\n   \"mechanicOrAgentSignature\": {\n    \"driverId\": \"<long>\",\n    \"email\": \"<string>\",\n    \"mechanicUserId\": \"<long>\",\n    \"name\": \"<string>\",\n    \"signedAt\": \"<long>\",\n    \"type\": \"<string>\",\n    \"username\": \"<string>\"\n   },\n   \"nextDriverSignature\": {\n    \"driverId\": \"<long>\",\n    \"email\": \"<string>\",\n    \"name\": \"<string>\",\n    \"signedAt\": \"<long>\",\n    \"type\": \"<string>\",\n    \"username\": \"<string>\"\n   },\n   \"odometerMiles\": \"<long>\",\n   \"startedAtMs\": \"<long>\",\n   \"timeMs\": \"<long>\",\n   \"trailerDefects\": [\n    {\n     \"comment\": \"<string>\",\n     \"defectType\": \"<string>\",\n     \"id\": \"<long>\",\n     \"resolved\": \"<boolean>\",\n     \"resolvedAt\": \"<long>\",\n     \"resolvedByDriverId\": \"<long>\",\n     \"resolvedByMechanicId\": \"<long>\"\n    },\n    {\n     \"comment\": \"<string>\",\n     \"defectType\": \"<string>\",\n     \"id\": \"<long>\",\n     \"resolved\": \"<boolean>\",\n     \"resolvedAt\": \"<long>\",\n     \"resolvedByDriverId\": \"<long>\",\n     \"resolvedByMechanicId\": \"<long>\"\n    }\n   ],\n   \"trailerId\": \"<integer>\",\n   \"trailerName\": \"<string>\",\n   \"vehicle\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   \"vehicleCondition\": \"<string>\",\n   \"vehicleDefects\": [\n    {\n     \"comment\": \"<string>\",\n     \"defectType\": \"<string>\",\n     \"id\": \"<long>\",\n     \"resolved\": \"<boolean>\",\n     \"resolvedAt\": \"<long>\",\n     \"resolvedByDriverId\": \"<long>\",\n     \"resolvedByMechanicId\": \"<long>\"\n    },\n    {\n     \"comment\": \"<string>\",\n     \"defectType\": \"<string>\",\n     \"id\": \"<long>\",\n     \"resolved\": \"<boolean>\",\n     \"resolvedAt\": \"<long>\",\n     \"resolvedByDriverId\": \"<long>\",\n     \"resolvedByMechanicId\": \"<long>\"\n    }\n   ]\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Create a DVIR",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"safe\": \"<string>\",\n    \"inspectionType\": \"<string>\",\n    \"userEmail\": \"<string>\",\n    \"mechanicNotes\": \"<string>\",\n    \"odometerMiles\": \"<integer>\",\n    \"previousDefectsCorrected\": \"<boolean>\",\n    \"previousDefectsIgnored\": \"<boolean>\",\n    \"resolvedDefectIds\": [\n        \"<long>\",\n        \"<long>\"\n    ],\n    \"trailerId\": \"<integer>\",\n    \"vehicleId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/maintenance/dvirs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"maintenance",
										"dvirs"
									]
								},
								"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nCreate a new dvir, marking a vehicle or trailer safe or unsafe."
							},
							"response": [
								{
									"name": "Newly created DVIR.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"safe\": \"<string>\",\n    \"inspectionType\": \"<string>\",\n    \"userEmail\": \"<string>\",\n    \"mechanicNotes\": \"<string>\",\n    \"odometerMiles\": \"<integer>\",\n    \"previousDefectsCorrected\": \"<boolean>\",\n    \"previousDefectsIgnored\": \"<boolean>\",\n    \"resolvedDefectIds\": [\n        \"<long>\",\n        \"<long>\"\n    ],\n    \"trailerId\": \"<integer>\",\n    \"vehicleId\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/v1/fleet/maintenance/dvirs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"fleet",
												"maintenance",
												"dvirs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"authorSignature\": {\n  \"driverId\": \"<long>\",\n  \"email\": \"<string>\",\n  \"mechanicUserId\": \"<long>\",\n  \"name\": \"<string>\",\n  \"signedAt\": \"<long>\",\n  \"type\": \"<string>\",\n  \"username\": \"<string>\"\n },\n \"defectsCorrected\": \"<boolean>\",\n \"defectsNeedNotBeCorrected\": \"<boolean>\",\n \"id\": \"<long>\",\n \"inspectionType\": \"<string>\",\n \"mechanicNotes\": \"<string>\",\n \"mechanicOrAgentSignature\": {\n  \"driverId\": \"<long>\",\n  \"email\": \"<string>\",\n  \"mechanicUserId\": \"<long>\",\n  \"name\": \"<string>\",\n  \"signedAt\": \"<long>\",\n  \"type\": \"<string>\",\n  \"username\": \"<string>\"\n },\n \"nextDriverSignature\": {\n  \"driverId\": \"<long>\",\n  \"email\": \"<string>\",\n  \"name\": \"<string>\",\n  \"signedAt\": \"<long>\",\n  \"type\": \"<string>\",\n  \"username\": \"<string>\"\n },\n \"odometerMiles\": \"<long>\",\n \"startedAtMs\": \"<long>\",\n \"timeMs\": \"<long>\",\n \"trailerDefects\": [\n  {\n   \"comment\": \"<string>\",\n   \"defectType\": \"<string>\",\n   \"id\": \"<long>\",\n   \"resolved\": \"<boolean>\",\n   \"resolvedAt\": \"<long>\",\n   \"resolvedByDriverId\": \"<long>\",\n   \"resolvedByMechanicId\": \"<long>\"\n  },\n  {\n   \"comment\": \"<string>\",\n   \"defectType\": \"<string>\",\n   \"id\": \"<long>\",\n   \"resolved\": \"<boolean>\",\n   \"resolvedAt\": \"<long>\",\n   \"resolvedByDriverId\": \"<long>\",\n   \"resolvedByMechanicId\": \"<long>\"\n  }\n ],\n \"trailerId\": \"<integer>\",\n \"trailerName\": \"<string>\",\n \"vehicle\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"vehicleCondition\": \"<string>\",\n \"vehicleDefects\": [\n  {\n   \"comment\": \"<string>\",\n   \"defectType\": \"<string>\",\n   \"id\": \"<long>\",\n   \"resolved\": \"<boolean>\",\n   \"resolvedAt\": \"<long>\",\n   \"resolvedByDriverId\": \"<long>\",\n   \"resolvedByMechanicId\": \"<long>\"\n  },\n  {\n   \"comment\": \"<string>\",\n   \"defectType\": \"<string>\",\n   \"id\": \"<long>\",\n   \"resolved\": \"<boolean>\",\n   \"resolvedAt\": \"<long>\",\n   \"resolvedByDriverId\": \"<long>\",\n   \"resolvedByMechanicId\": \"<long>\"\n  }\n ]\n}"
								},
								{
									"name": "Unexpected error.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"safe\": \"<string>\",\n    \"inspectionType\": \"<string>\",\n    \"userEmail\": \"<string>\",\n    \"mechanicNotes\": \"<string>\",\n    \"odometerMiles\": \"<integer>\",\n    \"previousDefectsCorrected\": \"<boolean>\",\n    \"previousDefectsIgnored\": \"<boolean>\",\n    \"resolvedDefectIds\": [\n        \"<long>\",\n        \"<long>\"\n    ],\n    \"trailerId\": \"<integer>\",\n    \"vehicleId\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/v1/fleet/maintenance/dvirs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"fleet",
												"maintenance",
												"dvirs"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<string>\""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get vehicles with engine faults or check lights",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/fleet/maintenance/list",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"fleet",
								"maintenance",
								"list"
							]
						},
						"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet list of the vehicles with any engine faults or check light data."
					},
					"response": [
						{
							"name": "Unexpected error.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/maintenance/list",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"maintenance",
										"list"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						},
						{
							"name": "List of vehicles and maintenance information about each.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/maintenance/list",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"maintenance",
										"list"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"vehicles\": [\n  {\n   \"id\": \"<long>\",\n   \"j1939\": {\n    \"checkEngineLight\": {\n     \"emissionsIsOn\": \"<boolean>\",\n     \"protectIsOn\": \"<boolean>\",\n     \"stopIsOn\": \"<boolean>\",\n     \"warningIsOn\": \"<boolean>\"\n    },\n    \"diagnosticTroubleCodes\": [\n     {\n      \"fmiId\": \"<integer>\",\n      \"fmiText\": \"<string>\",\n      \"occurrenceCount\": \"<integer>\",\n      \"spnDescription\": \"<string>\",\n      \"spnId\": \"<integer>\",\n      \"txId\": \"<integer>\"\n     },\n     {\n      \"fmiId\": \"<integer>\",\n      \"fmiText\": \"<string>\",\n      \"occurrenceCount\": \"<integer>\",\n      \"spnDescription\": \"<string>\",\n      \"spnId\": \"<integer>\",\n      \"txId\": \"<integer>\"\n     }\n    ]\n   },\n   \"passenger\": {\n    \"checkEngineLight\": {\n     \"isOn\": \"<boolean>\"\n    },\n    \"diagnosticTroubleCodes\": [\n     {\n      \"dtcId\": \"<integer>\",\n      \"dtcDescription\": \"<string>\",\n      \"dtcShortCode\": \"<string>\"\n     },\n     {\n      \"dtcId\": \"<integer>\",\n      \"dtcDescription\": \"<string>\",\n      \"dtcShortCode\": \"<string>\"\n     }\n    ]\n   }\n  },\n  {\n   \"id\": \"<long>\",\n   \"j1939\": {\n    \"checkEngineLight\": {\n     \"emissionsIsOn\": \"<boolean>\",\n     \"protectIsOn\": \"<boolean>\",\n     \"stopIsOn\": \"<boolean>\",\n     \"warningIsOn\": \"<boolean>\"\n    },\n    \"diagnosticTroubleCodes\": [\n     {\n      \"fmiId\": \"<integer>\",\n      \"fmiText\": \"<string>\",\n      \"occurrenceCount\": \"<integer>\",\n      \"spnDescription\": \"<string>\",\n      \"spnId\": \"<integer>\",\n      \"txId\": \"<integer>\"\n     },\n     {\n      \"fmiId\": \"<integer>\",\n      \"fmiText\": \"<string>\",\n      \"occurrenceCount\": \"<integer>\",\n      \"spnDescription\": \"<string>\",\n      \"spnId\": \"<integer>\",\n      \"txId\": \"<integer>\"\n     }\n    ]\n   },\n   \"passenger\": {\n    \"checkEngineLight\": {\n     \"isOn\": \"<boolean>\"\n    },\n    \"diagnosticTroubleCodes\": [\n     {\n      \"dtcId\": \"<integer>\",\n      \"dtcDescription\": \"<string>\",\n      \"dtcShortCode\": \"<string>\"\n     },\n     {\n      \"dtcId\": \"<integer>\",\n      \"dtcDescription\": \"<string>\",\n      \"dtcShortCode\": \"<string>\"\n     }\n    ]\n   }\n  }\n ]\n}"
						}
					]
				}
			],
			"description": "Maintenance refers to both DVIRs and reports on vehicle fault codes.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Messages",
			"item": [
				{
					"name": "Get all messages.",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/fleet/messages?endMs=<long>&durationMs=<long>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"fleet",
								"messages"
							],
							"query": [
								{
									"key": "endMs",
									"value": "<long>",
									"description": "Time in unix milliseconds that represents the end of time range of messages to return. Used in combination with durationMs. Defaults to now."
								},
								{
									"key": "durationMs",
									"value": "<long>",
									"description": "Time in milliseconds that represents the duration before endMs to query. Defaults to 24 hours."
								}
							]
						},
						"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet all messages."
					},
					"response": [
						{
							"name": "Unexpected error.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/messages?endMs=<long>&durationMs=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"messages"
									],
									"query": [
										{
											"key": "endMs",
											"value": "<long>"
										},
										{
											"key": "durationMs",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						},
						{
							"name": "Returns the fetched messages from most recently sent to least recently sent.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/messages?endMs=<long>&durationMs=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"messages"
									],
									"query": [
										{
											"key": "endMs",
											"value": "<long>"
										},
										{
											"key": "durationMs",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"driverId\": \"<long>\",\n   \"text\": \"<string>\",\n   \"sentAtMs\": \"<long>\",\n   \"sender\": {\n    \"type\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   \"isRead\": \"<boolean>\"\n  },\n  {\n   \"driverId\": \"<long>\",\n   \"text\": \"<string>\",\n   \"sentAtMs\": \"<long>\",\n   \"sender\": {\n    \"type\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   \"isRead\": \"<boolean>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Send a message to a list of driver ids.",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"driverIds\": [\n        \"<int64>\",\n        \"<int64>\"\n    ],\n    \"text\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/fleet/messages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"fleet",
								"messages"
							]
						},
						"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nSend a message to a list of driver ids."
					},
					"response": [
						{
							"name": "Returns the created messages.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"driverIds\": [\n        \"<int64>\",\n        \"<int64>\"\n    ],\n    \"text\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"messages"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"driverId\": \"<long>\",\n   \"text\": \"<string>\"\n  },\n  {\n   \"driverId\": \"<long>\",\n   \"text\": \"<string>\"\n  }\n ]\n}"
						},
						{
							"name": "Unexpected error.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"driverIds\": [\n        \"<int64>\",\n        \"<int64>\"\n    ],\n    \"text\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"messages"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						}
					]
				}
			],
			"description": "Fleet Admins can send direct free-form messages to drivers. This will send a message to the driver's Samsara driver app, in which you can track whether or not a message has been read by a given driver. For sending structured messages, see the Documents API.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Routes",
			"item": [
				{
					"name": "{route id}",
					"item": [
						{
							"name": "Get a route",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/dispatch/routes/:route_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"dispatch",
										"routes",
										":route_id"
									],
									"variable": [
										{
											"key": "route_id",
											"value": "<long>",
											"description": "ID of the dispatch route. Must contain only digits 0-9."
										}
									]
								},
								"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch a dispatch route by id."
							},
							"response": [
								{
									"name": "The dispatch route corresponding to route_id.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/fleet/dispatch/routes/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"fleet",
												"dispatch",
												"routes",
												"<long>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"dispatch_jobs\": [\n  {\n   \"arrived_at_ms\": \"<long>\",\n   \"completed_at_ms\": \"<long>\",\n   \"dispatch_route_id\": \"<long>\",\n   \"documents\": [\n    {\n     \"driverId\": \"<integer>\",\n     \"id\": \"<string>\"\n    },\n    {\n     \"driverId\": \"<integer>\",\n     \"id\": \"<string>\"\n    }\n   ],\n   \"driver_id\": \"<long>\",\n   \"en_route_at_ms\": \"<long>\",\n   \"estimated_arrival_ms\": \"<long>\",\n   \"fleet_viewer_url\": \"<string>\",\n   \"group_id\": \"<long>\",\n   \"id\": \"<long>\",\n   \"job_state\": \"<string>\",\n   \"skipped_at_ms\": \"<long>\",\n   \"vehicle_id\": \"<long>\",\n   \"destination_address\": \"<string>\",\n   \"destination_address_id\": \"<long>\",\n   \"destination_lat\": \"<double>\",\n   \"destination_lng\": \"<double>\",\n   \"destination_name\": \"<string>\",\n   \"notes\": \"<string>\",\n   \"scheduled_arrival_time_ms\": \"<long>\",\n   \"scheduled_departure_time_ms\": \"<long>\"\n  },\n  {\n   \"arrived_at_ms\": \"<long>\",\n   \"completed_at_ms\": \"<long>\",\n   \"dispatch_route_id\": \"<long>\",\n   \"documents\": [\n    {\n     \"driverId\": \"<integer>\",\n     \"id\": \"<string>\"\n    },\n    {\n     \"driverId\": \"<integer>\",\n     \"id\": \"<string>\"\n    }\n   ],\n   \"driver_id\": \"<long>\",\n   \"en_route_at_ms\": \"<long>\",\n   \"estimated_arrival_ms\": \"<long>\",\n   \"fleet_viewer_url\": \"<string>\",\n   \"group_id\": \"<long>\",\n   \"id\": \"<long>\",\n   \"job_state\": \"<string>\",\n   \"skipped_at_ms\": \"<long>\",\n   \"vehicle_id\": \"<long>\",\n   \"destination_address\": \"<string>\",\n   \"destination_address_id\": \"<long>\",\n   \"destination_lat\": \"<double>\",\n   \"destination_lng\": \"<double>\",\n   \"destination_name\": \"<string>\",\n   \"notes\": \"<string>\",\n   \"scheduled_arrival_time_ms\": \"<long>\",\n   \"scheduled_departure_time_ms\": \"<long>\"\n  }\n ],\n \"id\": \"<long>\",\n \"actual_end_ms\": \"<long>\",\n \"actual_start_ms\": \"<long>\",\n \"driver_id\": \"<long>\",\n \"group_id\": \"<long>\",\n \"name\": \"<string>\",\n \"notes\": \"<string>\",\n \"odometer_end_meters\": \"<long>\",\n \"odometer_start_meters\": \"<long>\",\n \"scheduled_end_ms\": \"<long>\",\n \"scheduled_meters\": \"<long>\",\n \"scheduled_start_ms\": \"<long>\",\n \"start_location_address\": \"<string>\",\n \"start_location_address_id\": \"<long>\",\n \"start_location_lat\": \"<double>\",\n \"start_location_lng\": \"<double>\",\n \"start_location_name\": \"<string>\",\n \"trailer_id\": \"<long>\",\n \"vehicle_id\": \"<long>\"\n}"
								},
								{
									"name": "Unexpected error.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/fleet/dispatch/routes/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"fleet",
												"dispatch",
												"routes",
												"<long>"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<string>\""
								}
							]
						},
						{
							"name": "Update a route",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dispatch_jobs\": [\n        {\n            \"id\": \"<long>\",\n            \"destination_address\": \"<string>\",\n            \"destination_address_id\": \"<long>\",\n            \"destination_lat\": \"<double>\",\n            \"destination_lng\": \"<double>\",\n            \"destination_name\": \"<string>\",\n            \"notes\": \"<string>\",\n            \"scheduled_arrival_time_ms\": \"<long>\",\n            \"scheduled_departure_time_ms\": \"<long>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"destination_address\": \"<string>\",\n            \"destination_address_id\": \"<long>\",\n            \"destination_lat\": \"<double>\",\n            \"destination_lng\": \"<double>\",\n            \"destination_name\": \"<string>\",\n            \"notes\": \"<string>\",\n            \"scheduled_arrival_time_ms\": \"<long>\",\n            \"scheduled_departure_time_ms\": \"<long>\"\n        }\n    ],\n    \"id\": \"<long>\",\n    \"driver_id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"scheduled_end_ms\": \"<long>\",\n    \"scheduled_meters\": \"<long>\",\n    \"scheduled_start_ms\": \"<long>\",\n    \"start_location_address\": \"<string>\",\n    \"start_location_address_id\": \"<long>\",\n    \"start_location_lat\": \"<double>\",\n    \"start_location_lng\": \"<double>\",\n    \"start_location_name\": \"<string>\",\n    \"trailer_id\": \"<long>\",\n    \"vehicle_id\": \"<long>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/dispatch/routes/:route_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"dispatch",
										"routes",
										":route_id"
									],
									"variable": [
										{
											"key": "route_id",
											"value": "<long>",
											"description": "ID of the dispatch route. Must contain only digits 0-9."
										}
									]
								},
								"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nUpdate the dispatch route. Allowable updates include adding or removing jobs, and changing job locations and times."
							},
							"response": [
								{
									"name": "Unexpected error.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"dispatch_jobs\": [\n        {\n            \"id\": \"<long>\",\n            \"destination_address\": \"<string>\",\n            \"destination_address_id\": \"<long>\",\n            \"destination_lat\": \"<double>\",\n            \"destination_lng\": \"<double>\",\n            \"destination_name\": \"<string>\",\n            \"notes\": \"<string>\",\n            \"scheduled_arrival_time_ms\": \"<long>\",\n            \"scheduled_departure_time_ms\": \"<long>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"destination_address\": \"<string>\",\n            \"destination_address_id\": \"<long>\",\n            \"destination_lat\": \"<double>\",\n            \"destination_lng\": \"<double>\",\n            \"destination_name\": \"<string>\",\n            \"notes\": \"<string>\",\n            \"scheduled_arrival_time_ms\": \"<long>\",\n            \"scheduled_departure_time_ms\": \"<long>\"\n        }\n    ],\n    \"id\": \"<long>\",\n    \"driver_id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"scheduled_end_ms\": \"<long>\",\n    \"scheduled_meters\": \"<long>\",\n    \"scheduled_start_ms\": \"<long>\",\n    \"start_location_address\": \"<string>\",\n    \"start_location_address_id\": \"<long>\",\n    \"start_location_lat\": \"<double>\",\n    \"start_location_lng\": \"<double>\",\n    \"start_location_name\": \"<string>\",\n    \"trailer_id\": \"<long>\",\n    \"vehicle_id\": \"<long>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/v1/fleet/dispatch/routes/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"fleet",
												"dispatch",
												"routes",
												"<long>"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<string>\""
								},
								{
									"name": "The updated route corresponding to route_id.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"dispatch_jobs\": [\n        {\n            \"id\": \"<long>\",\n            \"destination_address\": \"<string>\",\n            \"destination_address_id\": \"<long>\",\n            \"destination_lat\": \"<double>\",\n            \"destination_lng\": \"<double>\",\n            \"destination_name\": \"<string>\",\n            \"notes\": \"<string>\",\n            \"scheduled_arrival_time_ms\": \"<long>\",\n            \"scheduled_departure_time_ms\": \"<long>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"destination_address\": \"<string>\",\n            \"destination_address_id\": \"<long>\",\n            \"destination_lat\": \"<double>\",\n            \"destination_lng\": \"<double>\",\n            \"destination_name\": \"<string>\",\n            \"notes\": \"<string>\",\n            \"scheduled_arrival_time_ms\": \"<long>\",\n            \"scheduled_departure_time_ms\": \"<long>\"\n        }\n    ],\n    \"id\": \"<long>\",\n    \"driver_id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"scheduled_end_ms\": \"<long>\",\n    \"scheduled_meters\": \"<long>\",\n    \"scheduled_start_ms\": \"<long>\",\n    \"start_location_address\": \"<string>\",\n    \"start_location_address_id\": \"<long>\",\n    \"start_location_lat\": \"<double>\",\n    \"start_location_lng\": \"<double>\",\n    \"start_location_name\": \"<string>\",\n    \"trailer_id\": \"<long>\",\n    \"vehicle_id\": \"<long>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/v1/fleet/dispatch/routes/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"fleet",
												"dispatch",
												"routes",
												"<long>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"dispatch_jobs\": [\n  {\n   \"arrived_at_ms\": \"<long>\",\n   \"completed_at_ms\": \"<long>\",\n   \"dispatch_route_id\": \"<long>\",\n   \"documents\": [\n    {\n     \"driverId\": \"<integer>\",\n     \"id\": \"<string>\"\n    },\n    {\n     \"driverId\": \"<integer>\",\n     \"id\": \"<string>\"\n    }\n   ],\n   \"driver_id\": \"<long>\",\n   \"en_route_at_ms\": \"<long>\",\n   \"estimated_arrival_ms\": \"<long>\",\n   \"fleet_viewer_url\": \"<string>\",\n   \"group_id\": \"<long>\",\n   \"id\": \"<long>\",\n   \"job_state\": \"<string>\",\n   \"skipped_at_ms\": \"<long>\",\n   \"vehicle_id\": \"<long>\",\n   \"destination_address\": \"<string>\",\n   \"destination_address_id\": \"<long>\",\n   \"destination_lat\": \"<double>\",\n   \"destination_lng\": \"<double>\",\n   \"destination_name\": \"<string>\",\n   \"notes\": \"<string>\",\n   \"scheduled_arrival_time_ms\": \"<long>\",\n   \"scheduled_departure_time_ms\": \"<long>\"\n  },\n  {\n   \"arrived_at_ms\": \"<long>\",\n   \"completed_at_ms\": \"<long>\",\n   \"dispatch_route_id\": \"<long>\",\n   \"documents\": [\n    {\n     \"driverId\": \"<integer>\",\n     \"id\": \"<string>\"\n    },\n    {\n     \"driverId\": \"<integer>\",\n     \"id\": \"<string>\"\n    }\n   ],\n   \"driver_id\": \"<long>\",\n   \"en_route_at_ms\": \"<long>\",\n   \"estimated_arrival_ms\": \"<long>\",\n   \"fleet_viewer_url\": \"<string>\",\n   \"group_id\": \"<long>\",\n   \"id\": \"<long>\",\n   \"job_state\": \"<string>\",\n   \"skipped_at_ms\": \"<long>\",\n   \"vehicle_id\": \"<long>\",\n   \"destination_address\": \"<string>\",\n   \"destination_address_id\": \"<long>\",\n   \"destination_lat\": \"<double>\",\n   \"destination_lng\": \"<double>\",\n   \"destination_name\": \"<string>\",\n   \"notes\": \"<string>\",\n   \"scheduled_arrival_time_ms\": \"<long>\",\n   \"scheduled_departure_time_ms\": \"<long>\"\n  }\n ],\n \"id\": \"<long>\",\n \"actual_end_ms\": \"<long>\",\n \"actual_start_ms\": \"<long>\",\n \"driver_id\": \"<long>\",\n \"group_id\": \"<long>\",\n \"name\": \"<string>\",\n \"notes\": \"<string>\",\n \"odometer_end_meters\": \"<long>\",\n \"odometer_start_meters\": \"<long>\",\n \"scheduled_end_ms\": \"<long>\",\n \"scheduled_meters\": \"<long>\",\n \"scheduled_start_ms\": \"<long>\",\n \"start_location_address\": \"<string>\",\n \"start_location_address_id\": \"<long>\",\n \"start_location_lat\": \"<double>\",\n \"start_location_lng\": \"<double>\",\n \"start_location_name\": \"<string>\",\n \"trailer_id\": \"<long>\",\n \"vehicle_id\": \"<long>\"\n}"
								}
							]
						},
						{
							"name": "Delete a route",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/dispatch/routes/:route_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"dispatch",
										"routes",
										":route_id"
									],
									"variable": [
										{
											"key": "route_id",
											"value": "<long>",
											"description": "ID of the dispatch route. Must contain only digits 0-9."
										}
									]
								},
								"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nDelete a dispatch route and its associated jobs."
							},
							"response": [
								{
									"name": "Unexpected error.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/fleet/dispatch/routes/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"fleet",
												"dispatch",
												"routes",
												"<long>"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<string>\""
								},
								{
									"name": "Successfully deleted the dispatch route. No response body is returned.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/fleet/dispatch/routes/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"fleet",
												"dispatch",
												"routes",
												"<long>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get route history",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/dispatch/routes/:route_id/history?start_time=<long>&end_time=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"dispatch",
										"routes",
										":route_id",
										"history"
									],
									"query": [
										{
											"key": "start_time",
											"value": "<long>",
											"description": "Timestamp representing the start of the period to fetch, inclusive. Used in combination with end_time. Defaults to 0."
										},
										{
											"key": "end_time",
											"value": "<long>",
											"description": "Timestamp representing the end of the period to fetch, inclusive. Used in combination with start_time. Defaults to nowMs."
										}
									],
									"variable": [
										{
											"key": "route_id",
											"value": "<long>",
											"description": "ID of the route with history. Must contain only digits 0-9."
										}
									]
								},
								"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch the history of a dispatch route."
							},
							"response": [
								{
									"name": "The historical route state changes between start_time and end_time.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/fleet/dispatch/routes/<long>/history?start_time=<long>&end_time=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"fleet",
												"dispatch",
												"routes",
												"<long>",
												"history"
											],
											"query": [
												{
													"key": "start_time",
													"value": "<long>"
												},
												{
													"key": "end_time",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"history\": [\n  {\n   \"changed_at_ms\": \"<long>\",\n   \"route\": {\n    \"dispatch_jobs\": [\n     {\n      \"arrived_at_ms\": \"<long>\",\n      \"completed_at_ms\": \"<long>\",\n      \"dispatch_route_id\": \"<long>\",\n      \"documents\": [\n       {\n        \"driverId\": \"<integer>\",\n        \"id\": \"<string>\"\n       },\n       {\n        \"driverId\": \"<integer>\",\n        \"id\": \"<string>\"\n       }\n      ],\n      \"driver_id\": \"<long>\",\n      \"en_route_at_ms\": \"<long>\",\n      \"estimated_arrival_ms\": \"<long>\",\n      \"fleet_viewer_url\": \"<string>\",\n      \"group_id\": \"<long>\",\n      \"id\": \"<long>\",\n      \"job_state\": \"<string>\",\n      \"skipped_at_ms\": \"<long>\",\n      \"vehicle_id\": \"<long>\",\n      \"destination_address\": \"<string>\",\n      \"destination_address_id\": \"<long>\",\n      \"destination_lat\": \"<double>\",\n      \"destination_lng\": \"<double>\",\n      \"destination_name\": \"<string>\",\n      \"notes\": \"<string>\",\n      \"scheduled_arrival_time_ms\": \"<long>\",\n      \"scheduled_departure_time_ms\": \"<long>\"\n     },\n     {\n      \"arrived_at_ms\": \"<long>\",\n      \"completed_at_ms\": \"<long>\",\n      \"dispatch_route_id\": \"<long>\",\n      \"documents\": [\n       {\n        \"driverId\": \"<integer>\",\n        \"id\": \"<string>\"\n       },\n       {\n        \"driverId\": \"<integer>\",\n        \"id\": \"<string>\"\n       }\n      ],\n      \"driver_id\": \"<long>\",\n      \"en_route_at_ms\": \"<long>\",\n      \"estimated_arrival_ms\": \"<long>\",\n      \"fleet_viewer_url\": \"<string>\",\n      \"group_id\": \"<long>\",\n      \"id\": \"<long>\",\n      \"job_state\": \"<string>\",\n      \"skipped_at_ms\": \"<long>\",\n      \"vehicle_id\": \"<long>\",\n      \"destination_address\": \"<string>\",\n      \"destination_address_id\": \"<long>\",\n      \"destination_lat\": \"<double>\",\n      \"destination_lng\": \"<double>\",\n      \"destination_name\": \"<string>\",\n      \"notes\": \"<string>\",\n      \"scheduled_arrival_time_ms\": \"<long>\",\n      \"scheduled_departure_time_ms\": \"<long>\"\n     }\n    ],\n    \"id\": \"<long>\",\n    \"actual_end_ms\": \"<long>\",\n    \"actual_start_ms\": \"<long>\",\n    \"driver_id\": \"<long>\",\n    \"group_id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometer_end_meters\": \"<long>\",\n    \"odometer_start_meters\": \"<long>\",\n    \"scheduled_end_ms\": \"<long>\",\n    \"scheduled_meters\": \"<long>\",\n    \"scheduled_start_ms\": \"<long>\",\n    \"start_location_address\": \"<string>\",\n    \"start_location_address_id\": \"<long>\",\n    \"start_location_lat\": \"<double>\",\n    \"start_location_lng\": \"<double>\",\n    \"start_location_name\": \"<string>\",\n    \"trailer_id\": \"<long>\",\n    \"vehicle_id\": \"<long>\"\n   }\n  },\n  {\n   \"changed_at_ms\": \"<long>\",\n   \"route\": {\n    \"dispatch_jobs\": [\n     {\n      \"arrived_at_ms\": \"<long>\",\n      \"completed_at_ms\": \"<long>\",\n      \"dispatch_route_id\": \"<long>\",\n      \"documents\": [\n       {\n        \"driverId\": \"<integer>\",\n        \"id\": \"<string>\"\n       },\n       {\n        \"driverId\": \"<integer>\",\n        \"id\": \"<string>\"\n       }\n      ],\n      \"driver_id\": \"<long>\",\n      \"en_route_at_ms\": \"<long>\",\n      \"estimated_arrival_ms\": \"<long>\",\n      \"fleet_viewer_url\": \"<string>\",\n      \"group_id\": \"<long>\",\n      \"id\": \"<long>\",\n      \"job_state\": \"<string>\",\n      \"skipped_at_ms\": \"<long>\",\n      \"vehicle_id\": \"<long>\",\n      \"destination_address\": \"<string>\",\n      \"destination_address_id\": \"<long>\",\n      \"destination_lat\": \"<double>\",\n      \"destination_lng\": \"<double>\",\n      \"destination_name\": \"<string>\",\n      \"notes\": \"<string>\",\n      \"scheduled_arrival_time_ms\": \"<long>\",\n      \"scheduled_departure_time_ms\": \"<long>\"\n     },\n     {\n      \"arrived_at_ms\": \"<long>\",\n      \"completed_at_ms\": \"<long>\",\n      \"dispatch_route_id\": \"<long>\",\n      \"documents\": [\n       {\n        \"driverId\": \"<integer>\",\n        \"id\": \"<string>\"\n       },\n       {\n        \"driverId\": \"<integer>\",\n        \"id\": \"<string>\"\n       }\n      ],\n      \"driver_id\": \"<long>\",\n      \"en_route_at_ms\": \"<long>\",\n      \"estimated_arrival_ms\": \"<long>\",\n      \"fleet_viewer_url\": \"<string>\",\n      \"group_id\": \"<long>\",\n      \"id\": \"<long>\",\n      \"job_state\": \"<string>\",\n      \"skipped_at_ms\": \"<long>\",\n      \"vehicle_id\": \"<long>\",\n      \"destination_address\": \"<string>\",\n      \"destination_address_id\": \"<long>\",\n      \"destination_lat\": \"<double>\",\n      \"destination_lng\": \"<double>\",\n      \"destination_name\": \"<string>\",\n      \"notes\": \"<string>\",\n      \"scheduled_arrival_time_ms\": \"<long>\",\n      \"scheduled_departure_time_ms\": \"<long>\"\n     }\n    ],\n    \"id\": \"<long>\",\n    \"actual_end_ms\": \"<long>\",\n    \"actual_start_ms\": \"<long>\",\n    \"driver_id\": \"<long>\",\n    \"group_id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometer_end_meters\": \"<long>\",\n    \"odometer_start_meters\": \"<long>\",\n    \"scheduled_end_ms\": \"<long>\",\n    \"scheduled_meters\": \"<long>\",\n    \"scheduled_start_ms\": \"<long>\",\n    \"start_location_address\": \"<string>\",\n    \"start_location_address_id\": \"<long>\",\n    \"start_location_lat\": \"<double>\",\n    \"start_location_lng\": \"<double>\",\n    \"start_location_name\": \"<string>\",\n    \"trailer_id\": \"<long>\",\n    \"vehicle_id\": \"<long>\"\n   }\n  }\n ]\n}"
								},
								{
									"name": "Unexpected error.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/fleet/dispatch/routes/<long>/history?start_time=<long>&end_time=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"fleet",
												"dispatch",
												"routes",
												"<long>",
												"history"
											],
											"query": [
												{
													"key": "start_time",
													"value": "<long>"
												},
												{
													"key": "end_time",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<string>\""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get all routes",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/fleet/dispatch/routes?end_time=<long>&duration=<long>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"fleet",
								"dispatch",
								"routes"
							],
							"query": [
								{
									"key": "end_time",
									"value": "<long>",
									"description": "Time in unix milliseconds that represents the end time of the requested time interval. See above for a description of how routes are returned. Defaults to now."
								},
								{
									"key": "duration",
									"value": "<long>",
									"description": "Time in milliseconds that represents the duration before end_time to query. Defaults to 24 hours."
								}
							]
						},
						"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch all dispatch routes for a given time period. The time period is defined as `end_time` and the `duration` before which to query.\n\nRoutes are returned if the route's `scheduled_start_ms` and `scheduled_end_ms` overlap with the requested time period.\n\nMore concretely, if the route's `scheduled_start_ms` is before `end_time` and the `scheduled_end_ms` is within or after the given duration, then the route is returned."
					},
					"response": [
						{
							"name": "Unexpected error.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/dispatch/routes?end_time=<long>&duration=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"dispatch",
										"routes"
									],
									"query": [
										{
											"key": "end_time",
											"value": "<long>"
										},
										{
											"key": "duration",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						},
						{
							"name": "All dispatch route objects.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/dispatch/routes?end_time=<long>&duration=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"dispatch",
										"routes"
									],
									"query": [
										{
											"key": "end_time",
											"value": "<long>"
										},
										{
											"key": "duration",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"dispatch_jobs\": [\n   {\n    \"arrived_at_ms\": \"<long>\",\n    \"completed_at_ms\": \"<long>\",\n    \"dispatch_route_id\": \"<long>\",\n    \"documents\": [\n     {\n      \"driverId\": \"<integer>\",\n      \"id\": \"<string>\"\n     },\n     {\n      \"driverId\": \"<integer>\",\n      \"id\": \"<string>\"\n     }\n    ],\n    \"driver_id\": \"<long>\",\n    \"en_route_at_ms\": \"<long>\",\n    \"fleet_viewer_url\": \"<string>\",\n    \"group_id\": \"<long>\",\n    \"id\": \"<long>\",\n    \"job_state\": \"<string>\",\n    \"skipped_at_ms\": \"<long>\",\n    \"vehicle_id\": \"<long>\",\n    \"destination_address\": \"<string>\",\n    \"destination_address_id\": \"<long>\",\n    \"destination_lat\": \"<double>\",\n    \"destination_lng\": \"<double>\",\n    \"destination_name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"scheduled_arrival_time_ms\": \"<long>\",\n    \"scheduled_departure_time_ms\": \"<long>\"\n   },\n   {\n    \"arrived_at_ms\": \"<long>\",\n    \"completed_at_ms\": \"<long>\",\n    \"dispatch_route_id\": \"<long>\",\n    \"documents\": [\n     {\n      \"driverId\": \"<integer>\",\n      \"id\": \"<string>\"\n     },\n     {\n      \"driverId\": \"<integer>\",\n      \"id\": \"<string>\"\n     }\n    ],\n    \"driver_id\": \"<long>\",\n    \"en_route_at_ms\": \"<long>\",\n    \"fleet_viewer_url\": \"<string>\",\n    \"group_id\": \"<long>\",\n    \"id\": \"<long>\",\n    \"job_state\": \"<string>\",\n    \"skipped_at_ms\": \"<long>\",\n    \"vehicle_id\": \"<long>\",\n    \"destination_address\": \"<string>\",\n    \"destination_address_id\": \"<long>\",\n    \"destination_lat\": \"<double>\",\n    \"destination_lng\": \"<double>\",\n    \"destination_name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"scheduled_arrival_time_ms\": \"<long>\",\n    \"scheduled_departure_time_ms\": \"<long>\"\n   }\n  ],\n  \"id\": \"<long>\",\n  \"actual_end_ms\": \"<long>\",\n  \"actual_start_ms\": \"<long>\",\n  \"driver_id\": \"<long>\",\n  \"group_id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"odometer_end_meters\": \"<long>\",\n  \"odometer_start_meters\": \"<long>\",\n  \"scheduled_end_ms\": \"<long>\",\n  \"scheduled_meters\": \"<long>\",\n  \"scheduled_start_ms\": \"<long>\",\n  \"start_location_address\": \"<string>\",\n  \"start_location_address_id\": \"<long>\",\n  \"start_location_lat\": \"<double>\",\n  \"start_location_lng\": \"<double>\",\n  \"start_location_name\": \"<string>\",\n  \"trailer_id\": \"<long>\",\n  \"vehicle_id\": \"<long>\"\n },\n {\n  \"dispatch_jobs\": [\n   {\n    \"arrived_at_ms\": \"<long>\",\n    \"completed_at_ms\": \"<long>\",\n    \"dispatch_route_id\": \"<long>\",\n    \"documents\": [\n     {\n      \"driverId\": \"<integer>\",\n      \"id\": \"<string>\"\n     },\n     {\n      \"driverId\": \"<integer>\",\n      \"id\": \"<string>\"\n     }\n    ],\n    \"driver_id\": \"<long>\",\n    \"en_route_at_ms\": \"<long>\",\n    \"fleet_viewer_url\": \"<string>\",\n    \"group_id\": \"<long>\",\n    \"id\": \"<long>\",\n    \"job_state\": \"<string>\",\n    \"skipped_at_ms\": \"<long>\",\n    \"vehicle_id\": \"<long>\",\n    \"destination_address\": \"<string>\",\n    \"destination_address_id\": \"<long>\",\n    \"destination_lat\": \"<double>\",\n    \"destination_lng\": \"<double>\",\n    \"destination_name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"scheduled_arrival_time_ms\": \"<long>\",\n    \"scheduled_departure_time_ms\": \"<long>\"\n   },\n   {\n    \"arrived_at_ms\": \"<long>\",\n    \"completed_at_ms\": \"<long>\",\n    \"dispatch_route_id\": \"<long>\",\n    \"documents\": [\n     {\n      \"driverId\": \"<integer>\",\n      \"id\": \"<string>\"\n     },\n     {\n      \"driverId\": \"<integer>\",\n      \"id\": \"<string>\"\n     }\n    ],\n    \"driver_id\": \"<long>\",\n    \"en_route_at_ms\": \"<long>\",\n    \"fleet_viewer_url\": \"<string>\",\n    \"group_id\": \"<long>\",\n    \"id\": \"<long>\",\n    \"job_state\": \"<string>\",\n    \"skipped_at_ms\": \"<long>\",\n    \"vehicle_id\": \"<long>\",\n    \"destination_address\": \"<string>\",\n    \"destination_address_id\": \"<long>\",\n    \"destination_lat\": \"<double>\",\n    \"destination_lng\": \"<double>\",\n    \"destination_name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"scheduled_arrival_time_ms\": \"<long>\",\n    \"scheduled_departure_time_ms\": \"<long>\"\n   }\n  ],\n  \"id\": \"<long>\",\n  \"actual_end_ms\": \"<long>\",\n  \"actual_start_ms\": \"<long>\",\n  \"driver_id\": \"<long>\",\n  \"group_id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"odometer_end_meters\": \"<long>\",\n  \"odometer_start_meters\": \"<long>\",\n  \"scheduled_end_ms\": \"<long>\",\n  \"scheduled_meters\": \"<long>\",\n  \"scheduled_start_ms\": \"<long>\",\n  \"start_location_address\": \"<string>\",\n  \"start_location_address_id\": \"<long>\",\n  \"start_location_lat\": \"<double>\",\n  \"start_location_lng\": \"<double>\",\n  \"start_location_name\": \"<string>\",\n  \"trailer_id\": \"<long>\",\n  \"vehicle_id\": \"<long>\"\n }\n]"
						}
					]
				},
				{
					"name": "Create a new route",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dispatch_jobs\": [\n        {\n            \"scheduled_arrival_time_ms\": \"<long>\",\n            \"destination_address\": \"<string>\",\n            \"destination_address_id\": \"<long>\",\n            \"destination_lat\": \"<double>\",\n            \"destination_lng\": \"<double>\",\n            \"destination_name\": \"<string>\",\n            \"notes\": \"<string>\",\n            \"scheduled_departure_time_ms\": \"<long>\"\n        },\n        {\n            \"scheduled_arrival_time_ms\": \"<long>\",\n            \"destination_address\": \"<string>\",\n            \"destination_address_id\": \"<long>\",\n            \"destination_lat\": \"<double>\",\n            \"destination_lng\": \"<double>\",\n            \"destination_name\": \"<string>\",\n            \"notes\": \"<string>\",\n            \"scheduled_departure_time_ms\": \"<long>\"\n        }\n    ],\n    \"driver_id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"scheduled_end_ms\": \"<long>\",\n    \"scheduled_meters\": \"<long>\",\n    \"scheduled_start_ms\": \"<long>\",\n    \"start_location_address\": \"<string>\",\n    \"start_location_address_id\": \"<long>\",\n    \"start_location_lat\": \"<double>\",\n    \"start_location_lng\": \"<double>\",\n    \"start_location_name\": \"<string>\",\n    \"trailer_id\": \"<long>\",\n    \"vehicle_id\": \"<long>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/fleet/dispatch/routes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"fleet",
								"dispatch",
								"routes"
							]
						},
						"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nCreate a new dispatch route."
					},
					"response": [
						{
							"name": "Unexpected error.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dispatch_jobs\": [\n        {\n            \"scheduled_arrival_time_ms\": \"<long>\",\n            \"destination_address\": \"<string>\",\n            \"destination_address_id\": \"<long>\",\n            \"destination_lat\": \"<double>\",\n            \"destination_lng\": \"<double>\",\n            \"destination_name\": \"<string>\",\n            \"notes\": \"<string>\",\n            \"scheduled_departure_time_ms\": \"<long>\"\n        },\n        {\n            \"scheduled_arrival_time_ms\": \"<long>\",\n            \"destination_address\": \"<string>\",\n            \"destination_address_id\": \"<long>\",\n            \"destination_lat\": \"<double>\",\n            \"destination_lng\": \"<double>\",\n            \"destination_name\": \"<string>\",\n            \"notes\": \"<string>\",\n            \"scheduled_departure_time_ms\": \"<long>\"\n        }\n    ],\n    \"driver_id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"scheduled_end_ms\": \"<long>\",\n    \"scheduled_meters\": \"<long>\",\n    \"scheduled_start_ms\": \"<long>\",\n    \"start_location_address\": \"<string>\",\n    \"start_location_address_id\": \"<long>\",\n    \"start_location_lat\": \"<double>\",\n    \"start_location_lng\": \"<double>\",\n    \"start_location_name\": \"<string>\",\n    \"trailer_id\": \"<long>\",\n    \"vehicle_id\": \"<long>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/dispatch/routes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"dispatch",
										"routes"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						},
						{
							"name": "Created route object including the new route ID.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dispatch_jobs\": [\n        {\n            \"scheduled_arrival_time_ms\": \"<long>\",\n            \"destination_address\": \"<string>\",\n            \"destination_address_id\": \"<long>\",\n            \"destination_lat\": \"<double>\",\n            \"destination_lng\": \"<double>\",\n            \"destination_name\": \"<string>\",\n            \"notes\": \"<string>\",\n            \"scheduled_departure_time_ms\": \"<long>\"\n        },\n        {\n            \"scheduled_arrival_time_ms\": \"<long>\",\n            \"destination_address\": \"<string>\",\n            \"destination_address_id\": \"<long>\",\n            \"destination_lat\": \"<double>\",\n            \"destination_lng\": \"<double>\",\n            \"destination_name\": \"<string>\",\n            \"notes\": \"<string>\",\n            \"scheduled_departure_time_ms\": \"<long>\"\n        }\n    ],\n    \"driver_id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"scheduled_end_ms\": \"<long>\",\n    \"scheduled_meters\": \"<long>\",\n    \"scheduled_start_ms\": \"<long>\",\n    \"start_location_address\": \"<string>\",\n    \"start_location_address_id\": \"<long>\",\n    \"start_location_lat\": \"<double>\",\n    \"start_location_lng\": \"<double>\",\n    \"start_location_name\": \"<string>\",\n    \"trailer_id\": \"<long>\",\n    \"vehicle_id\": \"<long>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/dispatch/routes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"dispatch",
										"routes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"dispatch_jobs\": [\n  {\n   \"arrived_at_ms\": \"<long>\",\n   \"completed_at_ms\": \"<long>\",\n   \"dispatch_route_id\": \"<long>\",\n   \"documents\": [\n    {\n     \"driverId\": \"<integer>\",\n     \"id\": \"<string>\"\n    },\n    {\n     \"driverId\": \"<integer>\",\n     \"id\": \"<string>\"\n    }\n   ],\n   \"driver_id\": \"<long>\",\n   \"en_route_at_ms\": \"<long>\",\n   \"estimated_arrival_ms\": \"<long>\",\n   \"fleet_viewer_url\": \"<string>\",\n   \"group_id\": \"<long>\",\n   \"id\": \"<long>\",\n   \"job_state\": \"<string>\",\n   \"skipped_at_ms\": \"<long>\",\n   \"vehicle_id\": \"<long>\",\n   \"destination_address\": \"<string>\",\n   \"destination_address_id\": \"<long>\",\n   \"destination_lat\": \"<double>\",\n   \"destination_lng\": \"<double>\",\n   \"destination_name\": \"<string>\",\n   \"notes\": \"<string>\",\n   \"scheduled_arrival_time_ms\": \"<long>\",\n   \"scheduled_departure_time_ms\": \"<long>\"\n  },\n  {\n   \"arrived_at_ms\": \"<long>\",\n   \"completed_at_ms\": \"<long>\",\n   \"dispatch_route_id\": \"<long>\",\n   \"documents\": [\n    {\n     \"driverId\": \"<integer>\",\n     \"id\": \"<string>\"\n    },\n    {\n     \"driverId\": \"<integer>\",\n     \"id\": \"<string>\"\n    }\n   ],\n   \"driver_id\": \"<long>\",\n   \"en_route_at_ms\": \"<long>\",\n   \"estimated_arrival_ms\": \"<long>\",\n   \"fleet_viewer_url\": \"<string>\",\n   \"group_id\": \"<long>\",\n   \"id\": \"<long>\",\n   \"job_state\": \"<string>\",\n   \"skipped_at_ms\": \"<long>\",\n   \"vehicle_id\": \"<long>\",\n   \"destination_address\": \"<string>\",\n   \"destination_address_id\": \"<long>\",\n   \"destination_lat\": \"<double>\",\n   \"destination_lng\": \"<double>\",\n   \"destination_name\": \"<string>\",\n   \"notes\": \"<string>\",\n   \"scheduled_arrival_time_ms\": \"<long>\",\n   \"scheduled_departure_time_ms\": \"<long>\"\n  }\n ],\n \"id\": \"<long>\",\n \"actual_end_ms\": \"<long>\",\n \"actual_start_ms\": \"<long>\",\n \"driver_id\": \"<long>\",\n \"group_id\": \"<long>\",\n \"name\": \"<string>\",\n \"notes\": \"<string>\",\n \"odometer_end_meters\": \"<long>\",\n \"odometer_start_meters\": \"<long>\",\n \"scheduled_end_ms\": \"<long>\",\n \"scheduled_meters\": \"<long>\",\n \"scheduled_start_ms\": \"<long>\",\n \"start_location_address\": \"<string>\",\n \"start_location_address_id\": \"<long>\",\n \"start_location_lat\": \"<double>\",\n \"start_location_lng\": \"<double>\",\n \"start_location_name\": \"<string>\",\n \"trailer_id\": \"<long>\",\n \"vehicle_id\": \"<long>\"\n}"
						}
					]
				},
				{
					"name": "Get route updates",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/fleet/dispatch/routes/job_updates?sequence_id=<string>&include=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"fleet",
								"dispatch",
								"routes",
								"job_updates"
							],
							"query": [
								{
									"key": "sequence_id",
									"value": "<string>",
									"description": "Sequence ID from the response payload of the last request. Defaults to fetching updates from last 24 hours."
								},
								{
									"key": "include",
									"value": "<string>",
									"description": "Optionally set include=route to include route object in response payload."
								}
							]
						},
						"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch all updates to a job including route data in the last 24 hours or subsequent to an sequence ID. Returns a maximum of 500 job updates. If more than 500 job updates are available, another request made with the prior request's sequence_id will return the next set of available job updates."
					},
					"response": [
						{
							"name": "All job updates on routes.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/dispatch/routes/job_updates?sequence_id=<string>&include=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"dispatch",
										"routes",
										"job_updates"
									],
									"query": [
										{
											"key": "sequence_id",
											"value": "<string>"
										},
										{
											"key": "include",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"job_updates\": [\n  {\n   \"changed_at_ms\": \"<long>\",\n   \"job_id\": \"<long>\",\n   \"job_state\": \"<string>\",\n   \"prev_job_state\": \"<string>\",\n   \"route\": {\n    \"dispatch_jobs\": [\n     {\n      \"arrived_at_ms\": \"<long>\",\n      \"completed_at_ms\": \"<long>\",\n      \"dispatch_route_id\": \"<long>\",\n      \"documents\": [\n       {\n        \"driverId\": \"<integer>\",\n        \"id\": \"<string>\"\n       },\n       {\n        \"driverId\": \"<integer>\",\n        \"id\": \"<string>\"\n       }\n      ],\n      \"driver_id\": \"<long>\",\n      \"en_route_at_ms\": \"<long>\",\n      \"estimated_arrival_ms\": \"<long>\",\n      \"fleet_viewer_url\": \"<string>\",\n      \"group_id\": \"<long>\",\n      \"id\": \"<long>\",\n      \"job_state\": \"<string>\",\n      \"skipped_at_ms\": \"<long>\",\n      \"vehicle_id\": \"<long>\",\n      \"destination_address\": \"<string>\",\n      \"destination_address_id\": \"<long>\",\n      \"destination_lat\": \"<double>\",\n      \"destination_lng\": \"<double>\",\n      \"destination_name\": \"<string>\",\n      \"notes\": \"<string>\",\n      \"scheduled_arrival_time_ms\": \"<long>\",\n      \"scheduled_departure_time_ms\": \"<long>\"\n     },\n     {\n      \"arrived_at_ms\": \"<long>\",\n      \"completed_at_ms\": \"<long>\",\n      \"dispatch_route_id\": \"<long>\",\n      \"documents\": [\n       {\n        \"driverId\": \"<integer>\",\n        \"id\": \"<string>\"\n       },\n       {\n        \"driverId\": \"<integer>\",\n        \"id\": \"<string>\"\n       }\n      ],\n      \"driver_id\": \"<long>\",\n      \"en_route_at_ms\": \"<long>\",\n      \"estimated_arrival_ms\": \"<long>\",\n      \"fleet_viewer_url\": \"<string>\",\n      \"group_id\": \"<long>\",\n      \"id\": \"<long>\",\n      \"job_state\": \"<string>\",\n      \"skipped_at_ms\": \"<long>\",\n      \"vehicle_id\": \"<long>\",\n      \"destination_address\": \"<string>\",\n      \"destination_address_id\": \"<long>\",\n      \"destination_lat\": \"<double>\",\n      \"destination_lng\": \"<double>\",\n      \"destination_name\": \"<string>\",\n      \"notes\": \"<string>\",\n      \"scheduled_arrival_time_ms\": \"<long>\",\n      \"scheduled_departure_time_ms\": \"<long>\"\n     }\n    ],\n    \"id\": \"<long>\",\n    \"actual_end_ms\": \"<long>\",\n    \"actual_start_ms\": \"<long>\",\n    \"driver_id\": \"<long>\",\n    \"group_id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometer_end_meters\": \"<long>\",\n    \"odometer_start_meters\": \"<long>\",\n    \"scheduled_end_ms\": \"<long>\",\n    \"scheduled_meters\": \"<long>\",\n    \"scheduled_start_ms\": \"<long>\",\n    \"start_location_address\": \"<string>\",\n    \"start_location_address_id\": \"<long>\",\n    \"start_location_lat\": \"<double>\",\n    \"start_location_lng\": \"<double>\",\n    \"start_location_name\": \"<string>\",\n    \"trailer_id\": \"<long>\",\n    \"vehicle_id\": \"<long>\"\n   },\n   \"route_id\": \"<long>\"\n  },\n  {\n   \"changed_at_ms\": \"<long>\",\n   \"job_id\": \"<long>\",\n   \"job_state\": \"<string>\",\n   \"prev_job_state\": \"<string>\",\n   \"route\": {\n    \"dispatch_jobs\": [\n     {\n      \"arrived_at_ms\": \"<long>\",\n      \"completed_at_ms\": \"<long>\",\n      \"dispatch_route_id\": \"<long>\",\n      \"documents\": [\n       {\n        \"driverId\": \"<integer>\",\n        \"id\": \"<string>\"\n       },\n       {\n        \"driverId\": \"<integer>\",\n        \"id\": \"<string>\"\n       }\n      ],\n      \"driver_id\": \"<long>\",\n      \"en_route_at_ms\": \"<long>\",\n      \"estimated_arrival_ms\": \"<long>\",\n      \"fleet_viewer_url\": \"<string>\",\n      \"group_id\": \"<long>\",\n      \"id\": \"<long>\",\n      \"job_state\": \"<string>\",\n      \"skipped_at_ms\": \"<long>\",\n      \"vehicle_id\": \"<long>\",\n      \"destination_address\": \"<string>\",\n      \"destination_address_id\": \"<long>\",\n      \"destination_lat\": \"<double>\",\n      \"destination_lng\": \"<double>\",\n      \"destination_name\": \"<string>\",\n      \"notes\": \"<string>\",\n      \"scheduled_arrival_time_ms\": \"<long>\",\n      \"scheduled_departure_time_ms\": \"<long>\"\n     },\n     {\n      \"arrived_at_ms\": \"<long>\",\n      \"completed_at_ms\": \"<long>\",\n      \"dispatch_route_id\": \"<long>\",\n      \"documents\": [\n       {\n        \"driverId\": \"<integer>\",\n        \"id\": \"<string>\"\n       },\n       {\n        \"driverId\": \"<integer>\",\n        \"id\": \"<string>\"\n       }\n      ],\n      \"driver_id\": \"<long>\",\n      \"en_route_at_ms\": \"<long>\",\n      \"estimated_arrival_ms\": \"<long>\",\n      \"fleet_viewer_url\": \"<string>\",\n      \"group_id\": \"<long>\",\n      \"id\": \"<long>\",\n      \"job_state\": \"<string>\",\n      \"skipped_at_ms\": \"<long>\",\n      \"vehicle_id\": \"<long>\",\n      \"destination_address\": \"<string>\",\n      \"destination_address_id\": \"<long>\",\n      \"destination_lat\": \"<double>\",\n      \"destination_lng\": \"<double>\",\n      \"destination_name\": \"<string>\",\n      \"notes\": \"<string>\",\n      \"scheduled_arrival_time_ms\": \"<long>\",\n      \"scheduled_departure_time_ms\": \"<long>\"\n     }\n    ],\n    \"id\": \"<long>\",\n    \"actual_end_ms\": \"<long>\",\n    \"actual_start_ms\": \"<long>\",\n    \"driver_id\": \"<long>\",\n    \"group_id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometer_end_meters\": \"<long>\",\n    \"odometer_start_meters\": \"<long>\",\n    \"scheduled_end_ms\": \"<long>\",\n    \"scheduled_meters\": \"<long>\",\n    \"scheduled_start_ms\": \"<long>\",\n    \"start_location_address\": \"<string>\",\n    \"start_location_address_id\": \"<long>\",\n    \"start_location_lat\": \"<double>\",\n    \"start_location_lng\": \"<double>\",\n    \"start_location_name\": \"<string>\",\n    \"trailer_id\": \"<long>\",\n    \"vehicle_id\": \"<long>\"\n   },\n   \"route_id\": \"<long>\"\n  }\n ],\n \"sequence_id\": \"<string>\"\n}"
						},
						{
							"name": "Unexpected error.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/dispatch/routes/job_updates?sequence_id=<string>&include=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"dispatch",
										"routes",
										"job_updates"
									],
									"query": [
										{
											"key": "sequence_id",
											"value": "<string>"
										},
										{
											"key": "include",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						}
					]
				}
			],
			"description": "Dispatch routes include start and end times and locations and an array of jobs along the route. The jobs also include locations and scheduled arrival and departure times. As routes are completed, job skip, arrival, and completion times are made available in real-time. Routes can be associated with drivers, vehicles, and trailers, and jobs can be associated with documents.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Safety",
			"item": [
				{
					"name": "{driver id}",
					"item": [
						{
							"name": "Fetch driver safety score",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/drivers/:driverId/safety/score?startMs=<long>&endMs=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"drivers",
										":driverId",
										"safety",
										"score"
									],
									"query": [
										{
											"key": "startMs",
											"value": "<long>",
											"description": "Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs. Total duration (endMs - startMs) must be greater than or equal to 1 hour."
										},
										{
											"key": "endMs",
											"value": "<long>",
											"description": "Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs. Total duration (endMs - startMs) must be greater than or equal to 1 hour."
										}
									],
									"variable": [
										{
											"key": "driverId",
											"value": "<long>",
											"description": "ID of the driver. Must contain only digits 0-9."
										}
									]
								},
								"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch the safety score for the driver."
							},
							"response": [
								{
									"name": "Unexpected error.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/fleet/drivers/<long>/safety/score?startMs=<long>&endMs=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"fleet",
												"drivers",
												"<long>",
												"safety",
												"score"
											],
											"query": [
												{
													"key": "startMs",
													"value": "<long>"
												},
												{
													"key": "endMs",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<string>\""
								},
								{
									"name": "Safety score details.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/fleet/drivers/<long>/safety/score?startMs=<long>&endMs=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"fleet",
												"drivers",
												"<long>",
												"safety",
												"score"
											],
											"query": [
												{
													"key": "startMs",
													"value": "<long>"
												},
												{
													"key": "endMs",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"crashCount\": \"<integer>\",\n \"driverId\": \"<integer>\",\n \"harshAccelCount\": \"<integer>\",\n \"harshBrakingCount\": \"<integer>\",\n \"harshEvents\": [\n  {\n   \"harshEventType\": \"<string>\",\n   \"timestampMs\": \"<integer>\",\n   \"vehicleId\": \"<integer>\"\n  },\n  {\n   \"harshEventType\": \"<string>\",\n   \"timestampMs\": \"<integer>\",\n   \"vehicleId\": \"<integer>\"\n  }\n ],\n \"harshTurningCount\": \"<integer>\",\n \"safetyScore\": \"<integer>\",\n \"safetyScoreRank\": \"<string>\",\n \"timeOverSpeedLimitMs\": \"<integer>\",\n \"totalDistanceDrivenMeters\": \"<integer>\",\n \"totalHarshEventCount\": \"<integer>\",\n \"totalTimeDrivenMs\": \"<integer>\"\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "{vehicle id}",
					"item": [
						{
							"name": "Fetch vehicle safety scores",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/vehicles/:vehicleId/safety/score?startMs=<long>&endMs=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"vehicles",
										":vehicleId",
										"safety",
										"score"
									],
									"query": [
										{
											"key": "startMs",
											"value": "<long>",
											"description": "Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs. Total duration (endMs - startMs) must be greater than or equal to 1 hour."
										},
										{
											"key": "endMs",
											"value": "<long>",
											"description": "Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs. Total duration (endMs - startMs) must be greater than or equal to 1 hour."
										}
									],
									"variable": [
										{
											"key": "vehicleId",
											"value": "<long>",
											"description": "ID of the vehicle. Must contain only digits 0-9."
										}
									]
								},
								"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch the safety score for the vehicle."
							},
							"response": [
								{
									"name": "Unexpected error.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/fleet/vehicles/<long>/safety/score?startMs=<long>&endMs=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"fleet",
												"vehicles",
												"<long>",
												"safety",
												"score"
											],
											"query": [
												{
													"key": "startMs",
													"value": "<long>"
												},
												{
													"key": "endMs",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<string>\""
								},
								{
									"name": "Safety score details.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/fleet/vehicles/<long>/safety/score?startMs=<long>&endMs=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"fleet",
												"vehicles",
												"<long>",
												"safety",
												"score"
											],
											"query": [
												{
													"key": "startMs",
													"value": "<long>"
												},
												{
													"key": "endMs",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"crashCount\": \"<integer>\",\n \"harshAccelCount\": \"<integer>\",\n \"harshBrakingCount\": \"<integer>\",\n \"harshEvents\": [\n  {\n   \"harshEventType\": \"<string>\",\n   \"timestampMs\": \"<integer>\",\n   \"vehicleId\": \"<integer>\"\n  },\n  {\n   \"harshEventType\": \"<string>\",\n   \"timestampMs\": \"<integer>\",\n   \"vehicleId\": \"<integer>\"\n  }\n ],\n \"harshTurningCount\": \"<integer>\",\n \"safetyScore\": \"<integer>\",\n \"safetyScoreRank\": \"<string>\",\n \"timeOverSpeedLimitMs\": \"<integer>\",\n \"totalDistanceDrivenMeters\": \"<integer>\",\n \"totalHarshEventCount\": \"<integer>\",\n \"totalTimeDrivenMs\": \"<integer>\",\n \"vehicleId\": \"<integer>\"\n}"
								}
							]
						},
						{
							"name": "Fetch harsh events",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/vehicles/:vehicleId/safety/harsh_event?timestamp=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"vehicles",
										":vehicleId",
										"safety",
										"harsh_event"
									],
									"query": [
										{
											"key": "timestamp",
											"value": "<long>",
											"description": "Timestamp in milliseconds representing the timestamp of a harsh event."
										}
									],
									"variable": [
										{
											"key": "vehicleId",
											"value": "<long>",
											"description": "ID of the vehicle. Must contain only digits 0-9."
										}
									]
								},
								"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch harsh event details for a vehicle."
							},
							"response": [
								{
									"name": "Harsh event details.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/fleet/vehicles/<long>/safety/harsh_event?timestamp=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"fleet",
												"vehicles",
												"<long>",
												"safety",
												"harsh_event"
											],
											"query": [
												{
													"key": "timestamp",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"incidentReportUrl\": \"<string>\",\n \"harshEventType\": \"<string>\",\n \"downloadForwardVideoUrl\": \"<string>\",\n \"downloadInwardVideoUrl\": \"<string>\",\n \"downloadTrackedInwardVideoUrl\": \"<string>\",\n \"isDistracted\": \"<boolean>\",\n \"location\": {\n  \"address\": \"<string>\",\n  \"latitude\": \"<number>\",\n  \"longitude\": \"<number>\"\n }\n}"
								},
								{
									"name": "Unexpected error.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/fleet/vehicles/<long>/safety/harsh_event?timestamp=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"fleet",
												"vehicles",
												"<long>",
												"safety",
												"harsh_event"
											],
											"query": [
												{
													"key": "timestamp",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<string>\""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "Samsara provides you with more visibility on whether or not your fleets are being safe. With the collection of safety endpoints, you can get aggregate metrics around the performance of a particular driver or vehicle, as well as detailed logs of all the harsh events that take place in an organization.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Sensors",
			"item": [
				{
					"name": "Get all sensors",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/sensors/list",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"sensors",
								"list"
							]
						},
						"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet sensor objects. This method returns a list of the sensor objects in the Samsara Cloud and information about them."
					},
					"response": [
						{
							"name": "List of sensor objects.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/sensors/list",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"sensors",
										"list"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"sensors\": [\n  {\n   \"id\": \"<long>\",\n   \"macAddress\": \"<string>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"macAddress\": \"<string>\",\n   \"name\": \"<string>\"\n  }\n ]\n}"
						},
						{
							"name": "Unexpected error.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/sensors/list",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"sensors",
										"list"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						}
					]
				},
				{
					"name": "Get sensor history",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"startMs\": \"<integer>\",\n    \"endMs\": \"<integer>\",\n    \"stepMs\": \"<integer>\",\n    \"series\": [\n        {\n            \"widgetId\": \"<long>\",\n            \"field\": \"<string>\"\n        },\n        {\n            \"widgetId\": \"<long>\",\n            \"field\": \"<string>\"\n        }\n    ],\n    \"fillMissing\": \"withNull\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/sensors/history",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"sensors",
								"history"
							]
						},
						"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet historical data for specified sensors. This method returns a set of historical data for the specified sensors in the specified time range and at the specified time resolution."
					},
					"response": [
						{
							"name": "List of results objects, each containing a time and a datapoint for each requested sensor/field pair.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"startMs\": \"<integer>\",\n    \"endMs\": \"<integer>\",\n    \"stepMs\": \"<integer>\",\n    \"series\": [\n        {\n            \"widgetId\": \"<long>\",\n            \"field\": \"<string>\"\n        },\n        {\n            \"widgetId\": \"<long>\",\n            \"field\": \"<string>\"\n        }\n    ],\n    \"fillMissing\": \"withNull\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/sensors/history",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"sensors",
										"history"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"results\": [\n  {\n   \"series\": [\n    \"<long>\",\n    \"<long>\"\n   ],\n   \"timeMs\": \"<integer>\"\n  },\n  {\n   \"series\": [\n    \"<long>\",\n    \"<long>\"\n   ],\n   \"timeMs\": \"<integer>\"\n  }\n ]\n}"
						},
						{
							"name": "Unexpected error.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"startMs\": \"<integer>\",\n    \"endMs\": \"<integer>\",\n    \"stepMs\": \"<integer>\",\n    \"series\": [\n        {\n            \"widgetId\": \"<long>\",\n            \"field\": \"<string>\"\n        },\n        {\n            \"widgetId\": \"<long>\",\n            \"field\": \"<string>\"\n        }\n    ],\n    \"fillMissing\": \"withNull\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/sensors/history",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"sensors",
										"history"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						}
					]
				},
				{
					"name": "Get temperature",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/sensors/temperature",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"sensors",
								"temperature"
							]
						},
						"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet temperature for requested sensors. This method returns the current ambient temperature (and probe temperature if applicable) for the requested sensors."
					},
					"response": [
						{
							"name": "Unexpected error.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/sensors/temperature",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"sensors",
										"temperature"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						},
						{
							"name": "List of sensor objects containing the current temperature reported by each sensor.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/sensors/temperature",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"sensors",
										"temperature"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"groupId\": \"<long>\",\n \"sensors\": [\n  {\n   \"ambientTemperature\": \"<integer>\",\n   \"ambientTemperatureTime\": \"<string>\",\n   \"id\": \"<long>\",\n   \"name\": \"<string>\",\n   \"probeTemperature\": \"<integer>\",\n   \"probeTemperatureTime\": \"<string>\",\n   \"trailerId\": \"<integer>\",\n   \"vehicleId\": \"<integer>\"\n  },\n  {\n   \"ambientTemperature\": \"<integer>\",\n   \"ambientTemperatureTime\": \"<string>\",\n   \"id\": \"<long>\",\n   \"name\": \"<string>\",\n   \"probeTemperature\": \"<integer>\",\n   \"probeTemperatureTime\": \"<string>\",\n   \"trailerId\": \"<integer>\",\n   \"vehicleId\": \"<integer>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Get humidity",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/sensors/humidity",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"sensors",
								"humidity"
							]
						},
						"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet humidity for requested sensors. This method returns the current relative humidity for the requested sensors."
					},
					"response": [
						{
							"name": "Unexpected error.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/sensors/humidity",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"sensors",
										"humidity"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						},
						{
							"name": "List of sensor objects containing the current humidity reported by each sensor.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/sensors/humidity",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"sensors",
										"humidity"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"groupId\": \"<long>\",\n \"sensors\": [\n  {\n   \"humidity\": \"<integer>\",\n   \"humidityTime\": \"<string>\",\n   \"id\": \"<long>\",\n   \"name\": \"<string>\",\n   \"trailerId\": \"<integer>\",\n   \"vehicleId\": \"<integer>\"\n  },\n  {\n   \"humidity\": \"<integer>\",\n   \"humidityTime\": \"<string>\",\n   \"id\": \"<long>\",\n   \"name\": \"<string>\",\n   \"trailerId\": \"<integer>\",\n   \"vehicleId\": \"<integer>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Get door status",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/sensors/door",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"sensors",
								"door"
							]
						},
						"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet door monitor status (closed / open) for requested sensors."
					},
					"response": [
						{
							"name": "Unexpected error.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/sensors/door",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"sensors",
										"door"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						},
						{
							"name": "List of sensor objects containing the current door status reported by each sensor.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/sensors/door",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"sensors",
										"door"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"groupId\": \"<long>\",\n \"sensors\": [\n  {\n   \"doorClosed\": \"<boolean>\",\n   \"doorStatusTime\": \"<string>\",\n   \"id\": \"<long>\",\n   \"name\": \"<string>\",\n   \"trailerId\": \"<integer>\",\n   \"vehicleId\": \"<integer>\"\n  },\n  {\n   \"doorClosed\": \"<boolean>\",\n   \"doorStatusTime\": \"<string>\",\n   \"id\": \"<long>\",\n   \"name\": \"<string>\",\n   \"trailerId\": \"<integer>\",\n   \"vehicleId\": \"<integer>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Get cargo status",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/sensors/cargo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"sensors",
								"cargo"
							]
						},
						"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet cargo monitor status (empty / full) for requested sensors."
					},
					"response": [
						{
							"name": "List of sensor objects containing the current cargo status reported by each sensor.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/sensors/cargo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"sensors",
										"cargo"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"groupId\": \"<long>\",\n \"sensors\": [\n  {\n   \"cargoEmpty\": \"<boolean>\",\n   \"cargoStatusTime\": \"<string>\",\n   \"id\": \"<long>\",\n   \"name\": \"<string>\",\n   \"trailerId\": \"<integer>\",\n   \"vehicleId\": \"<integer>\"\n  },\n  {\n   \"cargoEmpty\": \"<boolean>\",\n   \"cargoStatusTime\": \"<string>\",\n   \"id\": \"<long>\",\n   \"name\": \"<string>\",\n   \"trailerId\": \"<integer>\",\n   \"vehicleId\": \"<integer>\"\n  }\n ]\n}"
						},
						{
							"name": "Unexpected error.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"sensors\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/sensors/cargo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"sensors",
										"cargo"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						}
					]
				}
			],
			"description": "The sensor object describes a sensor's attributes and settings within Samsara. Samsara has many different types of sensors, such as temperature and humidity monitors, door monitors, and more.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Tags",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Retrieve a tag",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tags/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "Unique identifier for the tag."
										}
									]
								},
								"description": "Fetch a tag by id."
							},
							"response": [
								{
									"name": "Error response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/tags/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"<string>"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
								},
								{
									"name": "The tag corresponding to request id.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/tags/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"<string>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": {\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"addresses\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"assets\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"drivers\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"machines\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"parentTag\": {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\"\n  },\n  \"sensors\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"vehicles\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   }\n  ]\n }\n}"
								}
							]
						},
						{
							"name": "Update a tag",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"addresses\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"assets\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"drivers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"machines\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"parentTagId\": \"<string>\",\n    \"sensors\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"vehicles\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tags/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "Unique identifier for the tag."
										}
									]
								},
								"description": "Update a tag with a new name and new members. This API call would replace all old members of a tag with new members specified in the request body."
							},
							"response": [
								{
									"name": "Error response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"addresses\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"assets\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"drivers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"machines\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"parentTagId\": \"<string>\",\n    \"sensors\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"vehicles\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/tags/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"<string>"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
								},
								{
									"name": "The updated tag data.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"addresses\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"assets\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"drivers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"machines\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"parentTagId\": \"<string>\",\n    \"sensors\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"vehicles\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/tags/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"<string>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": {\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"addresses\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"assets\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"drivers\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"machines\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"parentTag\": {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\"\n  },\n  \"sensors\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"vehicles\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   }\n  ]\n }\n}"
								}
							]
						},
						{
							"name": "Delete a tag",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tags/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "Unique identifier for the tag."
										}
									]
								},
								"description": "Permanently deletes a tag."
							},
							"response": [
								{
									"name": "Error response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/tags/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"<string>"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
								},
								{
									"name": "Successfully deleted the tag. No response body is returned.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/tags/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"<string>"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "List all tags",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tags?limit=512&after=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags"
							],
							"query": [
								{
									"key": "limit",
									"value": "512",
									"description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
								},
								{
									"key": "after",
									"value": "<string>",
									"description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
								}
							]
						},
						"description": "Return all of the tags for an organization."
					},
					"response": [
						{
							"name": "List of tags.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tags?limit=512&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									],
									"query": [
										{
											"key": "limit",
											"value": "512"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\",\n   \"addresses\": [\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    },\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    }\n   ],\n   \"assets\": [\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    },\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    }\n   ],\n   \"drivers\": [\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    },\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    }\n   ],\n   \"machines\": [\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    },\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    }\n   ],\n   \"parentTag\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   \"sensors\": [\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    },\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    }\n   ],\n   \"vehicles\": [\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    },\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    }\n   ]\n  },\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\",\n   \"addresses\": [\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    },\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    }\n   ],\n   \"assets\": [\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    },\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    }\n   ],\n   \"drivers\": [\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    },\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    }\n   ],\n   \"machines\": [\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    },\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    }\n   ],\n   \"parentTag\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   \"sensors\": [\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    },\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    }\n   ],\n   \"vehicles\": [\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    },\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    }\n   ]\n  }\n ],\n \"pagination\": {\n  \"endCursor\": \"<string>\",\n  \"hasNextPage\": \"<boolean>\"\n }\n}"
						},
						{
							"name": "Error response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tags?limit=512&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									],
									"query": [
										{
											"key": "limit",
											"value": "512"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Create a tag",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"addresses\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"assets\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"drivers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"machines\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"parentTagId\": \"<string>\",\n    \"sensors\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"vehicles\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags"
							]
						},
						"description": "Create a new tag for the organization."
					},
					"response": [
						{
							"name": "Newly created tag object, including the new tag ID.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"addresses\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"assets\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"drivers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"machines\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"parentTagId\": \"<string>\",\n    \"sensors\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"vehicles\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"addresses\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"assets\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"drivers\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"machines\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"parentTag\": {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\"\n  },\n  \"sensors\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"vehicles\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   }\n  ]\n }\n}"
						},
						{
							"name": "Error response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"addresses\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"assets\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"drivers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"machines\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"parentTagId\": \"<string>\",\n    \"sensors\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"vehicles\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "Tags are a simple way to organize vehicles, drivers, assets, and sensors into easily identifiable groups. You can add unlimited entities to each tag, and entities can have multiple different tags. You can also use tag hierarchies in order to create nested classes, such as parent tag 'Massachusetts' and child tag 'Boston'. They also allow you to restrict access to data through \"tag-level\" permissions. For more information on tags functionality, see this [article](https://kb.samsara.com/hc/en-us/articles/360026674631-Using-Tags-and-Tag-Nesting).",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "d7cbb331-bd38-485e-b797-9735ec1fe7ef",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "975f2190-e0f5-4899-b0f1-ecd2fde326f6",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Retrieve a user",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "Unique identifier for the user."
										}
									]
								},
								"description": "Get a specific user's information."
							},
							"response": [
								{
									"name": "Returns the specified user.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"<string>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": {\n  \"id\": \"<string>\",\n  \"authType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"roles\": [\n   {\n    \"role\": {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    },\n    \"tag\": {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    }\n   },\n   {\n    \"role\": {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    },\n    \"tag\": {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    }\n   }\n  ],\n  \"email\": \"<string>\"\n }\n}"
								},
								{
									"name": "Error response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"<string>"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Delete a user",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "Unique identifier for the user."
										}
									]
								},
								"description": "Delete the given user."
							},
							"response": [
								{
									"name": "Error response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"<string>"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
								},
								{
									"name": "Returns an empty success response.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"<string>"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update a user",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"authType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"roles\": [\n        {\n            \"roleId\": \"<string>\",\n            \"tagId\": \"<string>\"\n        },\n        {\n            \"roleId\": \"<string>\",\n            \"tagId\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "Unique identifier for the user."
										}
									]
								},
								"description": "Update a specific user's information."
							},
							"response": [
								{
									"name": "Error response",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"authType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"roles\": [\n        {\n            \"roleId\": \"<string>\",\n            \"tagId\": \"<string>\"\n        },\n        {\n            \"roleId\": \"<string>\",\n            \"tagId\": \"<string>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"<string>"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
								},
								{
									"name": "Updated user object with ID.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"authType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"roles\": [\n        {\n            \"roleId\": \"<string>\",\n            \"tagId\": \"<string>\"\n        },\n        {\n            \"roleId\": \"<string>\",\n            \"tagId\": \"<string>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"<string>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": {\n  \"id\": \"<string>\",\n  \"authType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"roles\": [\n   {\n    \"role\": {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    },\n    \"tag\": {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    }\n   },\n   {\n    \"role\": {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    },\n    \"tag\": {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    }\n   }\n  ],\n  \"email\": \"<string>\"\n }\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "List all users",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users?limit=512&after=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "limit",
									"value": "512",
									"description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
								},
								{
									"key": "after",
									"value": "<string>",
									"description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
								}
							]
						},
						"description": "Returns a list of all users in an organization."
					},
					"response": [
						{
							"name": "Error response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users?limit=512&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "limit",
											"value": "512"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
						},
						{
							"name": "List all users.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users?limit=512&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "limit",
											"value": "512"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"id\": \"<string>\",\n   \"authType\": \"<string>\",\n   \"name\": \"<string>\",\n   \"roles\": [\n    {\n     \"role\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n     },\n     \"tag\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n     }\n    },\n    {\n     \"role\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n     },\n     \"tag\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n     }\n    }\n   ],\n   \"email\": \"<string>\"\n  },\n  {\n   \"id\": \"<string>\",\n   \"authType\": \"<string>\",\n   \"name\": \"<string>\",\n   \"roles\": [\n    {\n     \"role\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n     },\n     \"tag\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n     }\n    },\n    {\n     \"role\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n     },\n     \"tag\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n     }\n    }\n   ],\n   \"email\": \"<string>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": \"<string>\",\n  \"hasNextPage\": \"<boolean>\"\n }\n}"
						}
					]
				},
				{
					"name": "Create a user",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"authType\": \"<string>\",\n    \"roles\": [\n        {\n            \"roleId\": \"<string>\",\n            \"tagId\": \"<string>\"\n        },\n        {\n            \"roleId\": \"<string>\",\n            \"tagId\": \"<string>\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Add a user to the organization."
					},
					"response": [
						{
							"name": "Newly created user object with ID.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"authType\": \"<string>\",\n    \"roles\": [\n        {\n            \"roleId\": \"<string>\",\n            \"tagId\": \"<string>\"\n        },\n        {\n            \"roleId\": \"<string>\",\n            \"tagId\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"id\": \"<string>\",\n  \"authType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"roles\": [\n   {\n    \"role\": {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    },\n    \"tag\": {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    }\n   },\n   {\n    \"role\": {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    },\n    \"tag\": {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    }\n   }\n  ],\n  \"email\": \"<string>\"\n }\n}"
						},
						{
							"name": "Error response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"authType\": \"<string>\",\n    \"roles\": [\n        {\n            \"roleId\": \"<string>\",\n            \"tagId\": \"<string>\"\n        },\n        {\n            \"roleId\": \"<string>\",\n            \"tagId\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "List all user roles",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user-roles?limit=512&after=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user-roles"
							],
							"query": [
								{
									"key": "limit",
									"value": "512",
									"description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
								},
								{
									"key": "after",
									"value": "<string>",
									"description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
								}
							]
						},
						"description": "Returns a list of all user roles in an organization."
					},
					"response": [
						{
							"name": "List all user roles.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user-roles?limit=512&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user-roles"
									],
									"query": [
										{
											"key": "limit",
											"value": "512"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": \"<string>\",\n  \"hasNextPage\": \"<boolean>\"\n }\n}"
						},
						{
							"name": "Error response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user-roles?limit=512&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user-roles"
									],
									"query": [
										{
											"key": "limit",
											"value": "512"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "The users API allows you to manage access to the Samsara dashboard. This can be particularly useful if you are looking to set up a connection with your identity provider to manage roles and permissions for certain types of users within your system.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "63cc624d-1c59-496d-bed7-49b1c132734f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "8331b62d-7810-405d-8d2f-3781c334ad1f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Vehicles",
			"item": [
				{
					"name": "locations",
					"item": [
						{
							"name": "List most recent vehicle locations",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/fleet/vehicles/locations?after=<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fleet",
										"vehicles",
										"locations"
									],
									"query": [
										{
											"key": "after",
											"value": "<string>",
											"description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
										},
										{
											"key": "tagIds",
											"value": "<string>,<string>",
											"description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
										},
										{
											"key": "vehicleIds",
											"value": "<string>,<string>",
											"description": "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`"
										}
									]
								},
								"description": "Returns last known location for all vehicles (Samsara Vehicle Gateways). This can be optionally filtered by tags or specific vehicle IDs."
							},
							"response": [
								{
									"name": "Error response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/fleet/vehicles/locations?after=<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fleet",
												"vehicles",
												"locations"
											],
											"query": [
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "tagIds",
													"value": "<string>,<string>"
												},
												{
													"key": "vehicleIds",
													"value": "<string>,<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
								},
								{
									"name": "List of all locations for the specified vehicles and time range.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/fleet/vehicles/locations?after=<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fleet",
												"vehicles",
												"locations"
											],
											"query": [
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "tagIds",
													"value": "<string>,<string>"
												},
												{
													"key": "vehicleIds",
													"value": "<string>,<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\",\n   \"location\": {\n    \"latitude\": \"<double>\",\n    \"longitude\": \"<double>\",\n    \"heading\": \"<double>\",\n    \"speed\": \"<double>\",\n    \"time\": \"<string>\"\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\",\n   \"location\": {\n    \"latitude\": \"<double>\",\n    \"longitude\": \"<double>\",\n    \"heading\": \"<double>\",\n    \"speed\": \"<double>\",\n    \"time\": \"<string>\"\n   }\n  }\n ],\n \"pagination\": {\n  \"endCursor\": \"<string>\",\n  \"hasNextPage\": \"<boolean>\"\n }\n}"
								}
							]
						},
						{
							"name": "Follow a real-time feed of vehicle locations",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/fleet/vehicles/locations/feed?after=<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fleet",
										"vehicles",
										"locations",
										"feed"
									],
									"query": [
										{
											"key": "after",
											"value": "<string>",
											"description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
										},
										{
											"key": "tagIds",
											"value": "<string>,<string>",
											"description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
										},
										{
											"key": "vehicleIds",
											"value": "<string>,<string>",
											"description": "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`"
										}
									]
								},
								"description": "Follow a continuous feed of all vehicle locations from Samsara Vehicle Gateways.\n\nYour first call to this endpoint will provide you with the most recent location for each vehicle and a `pagination` object that contains an `endCursor`.\n\nYou can provide the `endCursor` to the `after` parameter of this endpoint to get location updates since that `endCursor`. \n\nIf `hasNextPage` is `false`, no updates are readily available yet. Each stat type has a different refresh rate, but in general we'd suggest waiting a minimum of 5 seconds before requesting updates.\n\nSee [this guide](https://developers.samsara.com/docs/vehicle-locations#section-follow-a-real-time-feed-of-vehicle-locations) for more details."
							},
							"response": [
								{
									"name": "Error response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/fleet/vehicles/locations/feed?after=<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fleet",
												"vehicles",
												"locations",
												"feed"
											],
											"query": [
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "tagIds",
													"value": "<string>,<string>"
												},
												{
													"key": "vehicleIds",
													"value": "<string>,<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
								},
								{
									"name": "List of all locations for the specified vehicles.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/fleet/vehicles/locations/feed?after=<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fleet",
												"vehicles",
												"locations",
												"feed"
											],
											"query": [
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "tagIds",
													"value": "<string>,<string>"
												},
												{
													"key": "vehicleIds",
													"value": "<string>,<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\",\n   \"locations\": [\n    {\n     \"latitude\": \"<double>\",\n     \"longitude\": \"<double>\",\n     \"heading\": \"<double>\",\n     \"speed\": \"<double>\",\n     \"time\": \"<string>\"\n    },\n    {\n     \"latitude\": \"<double>\",\n     \"longitude\": \"<double>\",\n     \"heading\": \"<double>\",\n     \"speed\": \"<double>\",\n     \"time\": \"<string>\"\n    }\n   ]\n  },\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\",\n   \"locations\": [\n    {\n     \"latitude\": \"<double>\",\n     \"longitude\": \"<double>\",\n     \"heading\": \"<double>\",\n     \"speed\": \"<double>\",\n     \"time\": \"<string>\"\n    },\n    {\n     \"latitude\": \"<double>\",\n     \"longitude\": \"<double>\",\n     \"heading\": \"<double>\",\n     \"speed\": \"<double>\",\n     \"time\": \"<string>\"\n    }\n   ]\n  }\n ],\n \"pagination\": {\n  \"endCursor\": \"<string>\",\n  \"hasNextPage\": \"<boolean>\"\n }\n}"
								}
							]
						},
						{
							"name": "Get historical vehicle locations",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/fleet/vehicles/locations/history?after=<string>&startTime=<dateTime>&endTime=<dateTime>&tagIds=<string>,<string>&vehicleIds=<string>,<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fleet",
										"vehicles",
										"locations",
										"history"
									],
									"query": [
										{
											"key": "after",
											"value": "<string>",
											"description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
										},
										{
											"key": "startTime",
											"value": "<dateTime>",
											"description": "A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
										},
										{
											"key": "endTime",
											"value": "<dateTime>",
											"description": "An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
										},
										{
											"key": "tagIds",
											"value": "<string>,<string>",
											"description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
										},
										{
											"key": "vehicleIds",
											"value": "<string>,<string>",
											"description": "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`"
										}
									]
								},
								"description": "Returns all known vehicle location changes during the given time range for all vehicles (Samsara Vehicle Gateways). This can be optionally filtered by tags or specific vehicle IDs."
							},
							"response": [
								{
									"name": "Error response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/fleet/vehicles/locations/history?after=<string>&startTime=<dateTime>&endTime=<dateTime>&tagIds=<string>,<string>&vehicleIds=<string>,<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fleet",
												"vehicles",
												"locations",
												"history"
											],
											"query": [
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "startTime",
													"value": "<dateTime>"
												},
												{
													"key": "endTime",
													"value": "<dateTime>"
												},
												{
													"key": "tagIds",
													"value": "<string>,<string>"
												},
												{
													"key": "vehicleIds",
													"value": "<string>,<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
								},
								{
									"name": "List of all locations for the specified vehicles and time range.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/fleet/vehicles/locations/history?after=<string>&startTime=<dateTime>&endTime=<dateTime>&tagIds=<string>,<string>&vehicleIds=<string>,<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fleet",
												"vehicles",
												"locations",
												"history"
											],
											"query": [
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "startTime",
													"value": "<dateTime>"
												},
												{
													"key": "endTime",
													"value": "<dateTime>"
												},
												{
													"key": "tagIds",
													"value": "<string>,<string>"
												},
												{
													"key": "vehicleIds",
													"value": "<string>,<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\",\n   \"locations\": [\n    {\n     \"latitude\": \"<double>\",\n     \"longitude\": \"<double>\",\n     \"heading\": \"<double>\",\n     \"speed\": \"<double>\",\n     \"time\": \"<string>\"\n    },\n    {\n     \"latitude\": \"<double>\",\n     \"longitude\": \"<double>\",\n     \"heading\": \"<double>\",\n     \"speed\": \"<double>\",\n     \"time\": \"<string>\"\n    }\n   ]\n  },\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\",\n   \"locations\": [\n    {\n     \"latitude\": \"<double>\",\n     \"longitude\": \"<double>\",\n     \"heading\": \"<double>\",\n     \"speed\": \"<double>\",\n     \"time\": \"<string>\"\n    },\n    {\n     \"latitude\": \"<double>\",\n     \"longitude\": \"<double>\",\n     \"heading\": \"<double>\",\n     \"speed\": \"<double>\",\n     \"time\": \"<string>\"\n    }\n   ]\n  }\n ],\n \"pagination\": {\n  \"endCursor\": \"<string>\",\n  \"hasNextPage\": \"<boolean>\"\n }\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "stats",
					"item": [
						{
							"name": "List most recent vehicle stats",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/fleet/vehicles/stats?after=<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>&types=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fleet",
										"vehicles",
										"stats"
									],
									"query": [
										{
											"key": "after",
											"value": "<string>",
											"description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
										},
										{
											"key": "tagIds",
											"value": "<string>,<string>",
											"description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
										},
										{
											"key": "vehicleIds",
											"value": "<string>,<string>",
											"description": "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`"
										},
										{
											"key": "types",
											"value": "<string>",
											"description": "The stat type you want this endpoint to return information on. Currently only one stat type is accepted per request.\n\n- `engineStates`: The state of the engine (`Off`, `On`, `Idle`).\n- `fuelPercents`: The engine fuel level in percentage points (e.g. `99`, `50`, etc).\n- `obdOdometerMeters`: The odometer reading according to on-board diagnostics. If Samsara does not have diagnostic coverage for a particular vehicle, the value for this stat type will be omitted. In these cases, we recommend using `gpsOdometerMeters`.\n- `gpsOdometerMeters`: The odometer reading according to GPS calculations. This calculation is based off GPS distance traveled and a manual odometer offset for a given vehicle, specified by the user in Samsara's dashboard UI or through the `odometerMeters` field in the [PATCH /fleet/vehicles/{id}](#operation/updateVehicleById) endpoint. `gpsOdometerMeters` is equal to the manual offset plus the GPS distance traveled since the offset was set. The value for this stat type will be omitted if a manual offset is not provided for a given vehicle. *A manual offset can only be provided when we do not have diagnostic coverage for a particular vehicle.*\n- `obdEngineSeconds`: The cumulative number of seconds the engine has run according to on-board diagnostics.\n- `gpsDistanceMeters`: The distance the vehicle has traveled since the gateway was installed based on GPS calculations."
										}
									]
								},
								"description": "Returns last known stats for all vehicles. This can be optionally filtered by tags or specific vehicle IDs."
							},
							"response": [
								{
									"name": "List of all vehicle stat objects and pagination parameters",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/fleet/vehicles/stats?after=<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>&types=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fleet",
												"vehicles",
												"stats"
											],
											"query": [
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "tagIds",
													"value": "<string>,<string>"
												},
												{
													"key": "vehicleIds",
													"value": "<string>,<string>"
												},
												{
													"key": "types",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\",\n   \"engineState\": {\n    \"time\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"fuelPercent\": {\n    \"time\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"gpsDistanceMeters\": {\n    \"time\": \"<string>\",\n    \"value\": \"<double>\"\n   },\n   \"gpsOdometerMeters\": {\n    \"time\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"obdEngineSeconds\": {\n    \"time\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"obdOdometerMeters\": {\n    \"time\": \"<string>\",\n    \"value\": \"<integer>\"\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\",\n   \"engineState\": {\n    \"time\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"fuelPercent\": {\n    \"time\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"gpsDistanceMeters\": {\n    \"time\": \"<string>\",\n    \"value\": \"<double>\"\n   },\n   \"gpsOdometerMeters\": {\n    \"time\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"obdEngineSeconds\": {\n    \"time\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"obdOdometerMeters\": {\n    \"time\": \"<string>\",\n    \"value\": \"<integer>\"\n   }\n  }\n ],\n \"pagination\": {\n  \"endCursor\": \"<string>\",\n  \"hasNextPage\": \"<boolean>\"\n }\n}"
								},
								{
									"name": "Error response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/fleet/vehicles/stats?after=<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>&types=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fleet",
												"vehicles",
												"stats"
											],
											"query": [
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "tagIds",
													"value": "<string>,<string>"
												},
												{
													"key": "vehicleIds",
													"value": "<string>,<string>"
												},
												{
													"key": "types",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Follow a real-time feed of vehicle stats",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/fleet/vehicles/stats/feed?after=<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>&types=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fleet",
										"vehicles",
										"stats",
										"feed"
									],
									"query": [
										{
											"key": "after",
											"value": "<string>",
											"description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
										},
										{
											"key": "tagIds",
											"value": "<string>,<string>",
											"description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
										},
										{
											"key": "vehicleIds",
											"value": "<string>,<string>",
											"description": "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`"
										},
										{
											"key": "types",
											"value": "<string>",
											"description": "The stat type you want this endpoint to return information on. Currently only one stat type is accepted per request.\n\n- `engineStates`: The state of the engine (`Off`, `On`, `Idle`).\n- `fuelPercents`: The engine fuel level in percentage points (e.g. `99`, `50`, etc).\n- `obdOdometerMeters`: The odometer reading according to on-board diagnostics. If Samsara does not have diagnostic coverage for a particular vehicle, the value for this stat type will be omitted. In these cases, we recommend using `gpsOdometerMeters`.\n- `gpsOdometerMeters`: The odometer reading according to GPS calculations. This calculation is based off GPS distance traveled and a manual odometer offset for a given vehicle, specified by the user in Samsara's dashboard UI or through the `odometerMeters` field in the [PATCH /fleet/vehicles/{id}](#operation/updateVehicleById) endpoint. `gpsOdometerMeters` is equal to the manual offset plus the GPS distance traveled since the offset was set. The value for this stat type will be omitted if a manual offset is not provided for a given vehicle. *A manual offset can only be provided when we do not have diagnostic coverage for a particular vehicle.*\n- `obdEngineSeconds`: The cumulative number of seconds the engine has run according to on-board diagnostics.\n- `gpsDistanceMeters`: The distance the vehicle has traveled since the gateway was installed based on GPS calculations."
										}
									]
								},
								"description": "Follow a continuous feed of all vehicle stats from Samsara Vehicle Gateways.\n\nYour first call to this endpoint will provide you with the most recent stats for each vehicle and a `pagination` object that contains an `endCursor`.\n\nYou can provide the `endCursor` to the `after` parameter of this endpoint to get vehicle stat updates since that `endCursor`.\n\nIf `hasNextPage` is `false`, no updates are readily available yet. Each stat type has a different refresh rate, but in general we'd suggest waiting a minimum of 5 seconds before requesting updates."
							},
							"response": [
								{
									"name": "Error response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/fleet/vehicles/stats/feed?after=<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>&types=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fleet",
												"vehicles",
												"stats",
												"feed"
											],
											"query": [
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "tagIds",
													"value": "<string>,<string>"
												},
												{
													"key": "vehicleIds",
													"value": "<string>,<string>"
												},
												{
													"key": "types",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
								},
								{
									"name": "List of all vehicle stats for the specified vehicles.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/fleet/vehicles/stats/feed?after=<string>&tagIds=<string>,<string>&vehicleIds=<string>,<string>&types=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fleet",
												"vehicles",
												"stats",
												"feed"
											],
											"query": [
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "tagIds",
													"value": "<string>,<string>"
												},
												{
													"key": "vehicleIds",
													"value": "<string>,<string>"
												},
												{
													"key": "types",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\",\n   \"engineStates\": [\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<string>\"\n    },\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<string>\"\n    }\n   ],\n   \"fuelPercents\": [\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    },\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    }\n   ],\n   \"obdOdometerMeters\": [\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    },\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    }\n   ],\n   \"gpsOdometerMeters\": [\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    },\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    }\n   ],\n   \"obdEngineSeconds\": [\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    },\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    }\n   ],\n   \"gpsDistanceMeters\": [\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<double>\"\n    },\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<double>\"\n    }\n   ]\n  },\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\",\n   \"engineStates\": [\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<string>\"\n    },\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<string>\"\n    }\n   ],\n   \"fuelPercents\": [\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    },\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    }\n   ],\n   \"obdOdometerMeters\": [\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    },\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    }\n   ],\n   \"gpsOdometerMeters\": [\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    },\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    }\n   ],\n   \"obdEngineSeconds\": [\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    },\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    }\n   ],\n   \"gpsDistanceMeters\": [\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<double>\"\n    },\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<double>\"\n    }\n   ]\n  }\n ],\n \"pagination\": {\n  \"endCursor\": \"<string>\",\n  \"hasNextPage\": \"<boolean>\"\n }\n}"
								}
							]
						},
						{
							"name": "Get historical vehicle stats",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/fleet/vehicles/stats/history?after=<string>&startTime=<dateTime>&endTime=<dateTime>&tagIds=<string>,<string>&vehicleIds=<string>,<string>&types=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fleet",
										"vehicles",
										"stats",
										"history"
									],
									"query": [
										{
											"key": "after",
											"value": "<string>",
											"description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
										},
										{
											"key": "startTime",
											"value": "<dateTime>",
											"description": "A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
										},
										{
											"key": "endTime",
											"value": "<dateTime>",
											"description": "An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."
										},
										{
											"key": "tagIds",
											"value": "<string>,<string>",
											"description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
										},
										{
											"key": "vehicleIds",
											"value": "<string>,<string>",
											"description": "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`"
										},
										{
											"key": "types",
											"value": "<string>",
											"description": "The stat type you want this endpoint to return information on. Currently only one stat type is accepted per request.\n\n- `engineStates`: The state of the engine (`Off`, `On`, `Idle`).\n- `fuelPercents`: The engine fuel level in percentage points (e.g. `99`, `50`, etc).\n- `obdOdometerMeters`: The odometer reading according to on-board diagnostics. If Samsara does not have diagnostic coverage for a particular vehicle, the value for this stat type will be omitted. In these cases, we recommend using `gpsOdometerMeters`.\n- `gpsOdometerMeters`: The odometer reading according to GPS calculations. This calculation is based off GPS distance traveled and a manual odometer offset for a given vehicle, specified by the user in Samsara's dashboard UI or through the `odometerMeters` field in the [PATCH /fleet/vehicles/{id}](#operation/updateVehicleById) endpoint. `gpsOdometerMeters` is equal to the manual offset plus the GPS distance traveled since the offset was set. The value for this stat type will be omitted if a manual offset is not provided for a given vehicle. *A manual offset can only be provided when we do not have diagnostic coverage for a particular vehicle.*\n- `obdEngineSeconds`: The cumulative number of seconds the engine has run according to on-board diagnostics.\n- `gpsDistanceMeters`: The distance the vehicle has traveled since the gateway was installed based on GPS calculations."
										}
									]
								},
								"description": "Returns all known vehicle stats changes during the given time range for all vehicles (Samsara Vehicle Gateways). This can be optionally filtered by tags or specific vehicle IDs."
							},
							"response": [
								{
									"name": "List of all vehicle stats for the specified vehicles and time range.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/fleet/vehicles/stats/history?after=<string>&startTime=<dateTime>&endTime=<dateTime>&tagIds=<string>,<string>&vehicleIds=<string>,<string>&types=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fleet",
												"vehicles",
												"stats",
												"history"
											],
											"query": [
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "startTime",
													"value": "<dateTime>"
												},
												{
													"key": "endTime",
													"value": "<dateTime>"
												},
												{
													"key": "tagIds",
													"value": "<string>,<string>"
												},
												{
													"key": "vehicleIds",
													"value": "<string>,<string>"
												},
												{
													"key": "types",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\",\n   \"engineStates\": [\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<string>\"\n    },\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<string>\"\n    }\n   ],\n   \"fuelPercents\": [\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    },\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    }\n   ],\n   \"obdOdometerMeters\": [\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    },\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    }\n   ],\n   \"gpsOdometerMeters\": [\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    },\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    }\n   ],\n   \"obdEngineSeconds\": [\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    },\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    }\n   ],\n   \"gpsDistanceMeters\": [\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<double>\"\n    },\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<double>\"\n    }\n   ]\n  },\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\",\n   \"engineStates\": [\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<string>\"\n    },\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<string>\"\n    }\n   ],\n   \"fuelPercents\": [\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    },\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    }\n   ],\n   \"obdOdometerMeters\": [\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    },\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    }\n   ],\n   \"gpsOdometerMeters\": [\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    },\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    }\n   ],\n   \"obdEngineSeconds\": [\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    },\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<integer>\"\n    }\n   ],\n   \"gpsDistanceMeters\": [\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<double>\"\n    },\n    {\n     \"time\": \"<string>\",\n     \"value\": \"<double>\"\n    }\n   ]\n  }\n ],\n \"pagination\": {\n  \"endCursor\": \"<string>\",\n  \"hasNextPage\": \"<boolean>\"\n }\n}"
								},
								{
									"name": "Error response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/fleet/vehicles/stats/history?after=<string>&startTime=<dateTime>&endTime=<dateTime>&tagIds=<string>,<string>&vehicleIds=<string>,<string>&types=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fleet",
												"vehicles",
												"stats",
												"history"
											],
											"query": [
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "startTime",
													"value": "<dateTime>"
												},
												{
													"key": "endTime",
													"value": "<dateTime>"
												},
												{
													"key": "tagIds",
													"value": "<string>,<string>"
												},
												{
													"key": "vehicleIds",
													"value": "<string>,<string>"
												},
												{
													"key": "types",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "Retrieve a vehicle",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/fleet/vehicles/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fleet",
										"vehicles",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "ID of the vehicle. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `maintenanceId:250020`"
										}
									]
								},
								"description": "Get information about a specific vehicle."
							},
							"response": [
								{
									"name": "Returns the specified vehicle object.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/fleet/vehicles/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fleet",
												"vehicles",
												"<string>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": {\n  \"id\": \"<string>\",\n  \"auxInputType1\": \"<string>\",\n  \"auxInputType2\": \"<string>\",\n  \"externalIds\": \"<object>\",\n  \"harshAccelerationSettingType\": \"<string>\",\n  \"licensePlate\": \"<string>\",\n  \"make\": \"<string>\",\n  \"model\": \"<string>\",\n  \"name\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"staticAssignedDriver\": {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"vin\": \"<string>\",\n  \"year\": \"<string>\"\n }\n}"
								},
								{
									"name": "Error response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/fleet/vehicles/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fleet",
												"vehicles",
												"<string>"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Update a vehicle",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"auxInputType1\": \"<string>\",\n    \"auxInputType2\": \"<string>\",\n    \"engineHours\": \"<integer>\",\n    \"externalIds\": \"<object>\",\n    \"harshAccelerationSettingType\": \"<string>\",\n    \"licensePlate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"staticAssignedDriverId\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"vin\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/fleet/vehicles/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fleet",
										"vehicles",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "ID of the vehicle. This can either be the Samsara-specified ID, or an external ID."
										}
									]
								},
								"description": "Patches the given vehicle object."
							},
							"response": [
								{
									"name": "Returns the specified vehicle object.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"auxInputType1\": \"<string>\",\n    \"auxInputType2\": \"<string>\",\n    \"engineHours\": \"<integer>\",\n    \"externalIds\": \"<object>\",\n    \"harshAccelerationSettingType\": \"<string>\",\n    \"licensePlate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"staticAssignedDriverId\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"vin\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/fleet/vehicles/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fleet",
												"vehicles",
												"<string>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": {\n  \"id\": \"<string>\",\n  \"auxInputType1\": \"<string>\",\n  \"auxInputType2\": \"<string>\",\n  \"externalIds\": \"<object>\",\n  \"harshAccelerationSettingType\": \"<string>\",\n  \"licensePlate\": \"<string>\",\n  \"make\": \"<string>\",\n  \"model\": \"<string>\",\n  \"name\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"staticAssignedDriver\": {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"vin\": \"<string>\",\n  \"year\": \"<string>\"\n }\n}"
								},
								{
									"name": "Error response",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"auxInputType1\": \"<string>\",\n    \"auxInputType2\": \"<string>\",\n    \"engineHours\": \"<integer>\",\n    \"externalIds\": \"<object>\",\n    \"harshAccelerationSettingType\": \"<string>\",\n    \"licensePlate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"odometerMeters\": \"<integer>\",\n    \"staticAssignedDriverId\": \"<string>\",\n    \"tagIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"vin\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/fleet/vehicles/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fleet",
												"vehicles",
												"<string>"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "List all vehicles",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/fleet/vehicles?limit=512&after=<string>&tagIds=<string>,<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"fleet",
								"vehicles"
							],
							"query": [
								{
									"key": "limit",
									"value": "512",
									"description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects."
								},
								{
									"key": "after",
									"value": "<string>",
									"description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."
								},
								{
									"key": "tagIds",
									"value": "<string>,<string>",
									"description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"
								}
							]
						},
						"description": "Returns a list of all vehicles in an organization, ordered by vehicle ID."
					},
					"response": [
						{
							"name": "Error response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/fleet/vehicles?limit=512&after=<string>&tagIds=<string>,<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fleet",
										"vehicles"
									],
									"query": [
										{
											"key": "limit",
											"value": "512"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "tagIds",
											"value": "<string>,<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"requestId\": \"<string>\"\n}"
						},
						{
							"name": "List of all vehicle objects, and pagination parameters.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/fleet/vehicles?limit=512&after=<string>&tagIds=<string>,<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fleet",
										"vehicles"
									],
									"query": [
										{
											"key": "limit",
											"value": "512"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "tagIds",
											"value": "<string>,<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"id\": \"<string>\",\n   \"auxInputType1\": \"<string>\",\n   \"auxInputType2\": \"<string>\",\n   \"externalIds\": \"<object>\",\n   \"harshAccelerationSettingType\": \"<string>\",\n   \"licensePlate\": \"<string>\",\n   \"make\": \"<string>\",\n   \"model\": \"<string>\",\n   \"name\": \"<string>\",\n   \"notes\": \"<string>\",\n   \"staticAssignedDriver\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   \"tags\": [\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    },\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    }\n   ],\n   \"vin\": \"<string>\",\n   \"year\": \"<string>\"\n  },\n  {\n   \"id\": \"<string>\",\n   \"auxInputType1\": \"<string>\",\n   \"auxInputType2\": \"<string>\",\n   \"externalIds\": \"<object>\",\n   \"harshAccelerationSettingType\": \"<string>\",\n   \"licensePlate\": \"<string>\",\n   \"make\": \"<string>\",\n   \"model\": \"<string>\",\n   \"name\": \"<string>\",\n   \"notes\": \"<string>\",\n   \"staticAssignedDriver\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n   },\n   \"tags\": [\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    },\n    {\n     \"id\": \"<string>\",\n     \"name\": \"<string>\"\n    }\n   ],\n   \"vin\": \"<string>\",\n   \"year\": \"<string>\"\n  }\n ],\n \"pagination\": {\n  \"endCursor\": \"<string>\",\n  \"hasNextPage\": \"<boolean>\"\n }\n}"
						}
					]
				},
				{
					"name": "Get vehicle trips",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/fleet/trips?vehicleId=<long>&startMs=<integer>&endMs=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"fleet",
								"trips"
							],
							"query": [
								{
									"key": "vehicleId",
									"value": "<long>",
									"description": "Vehicle ID to query."
								},
								{
									"key": "startMs",
									"value": "<integer>",
									"description": "Beginning of the time range, specified in milliseconds UNIX time. Limited to a 90 day window with respect to startMs and endMs"
								},
								{
									"key": "endMs",
									"value": "<integer>",
									"description": "End of the time range, specified in milliseconds UNIX time."
								}
							]
						},
						"description": "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nDriving activity is segmented into trips (travel between a start and a stop). Vehicle movement is broken down into trips along the following lines: a trip begins when a previously inactive vehicle achieves a speed of 5mph; the trip ends when the vehicle's speed remains below 5mph for 5 minutes, or when a vehicle crosses a state or national boundary. Trips contain start and stop times, locations, and addresses. Trips also contain distance and odometer information as well as fuel consumption.\n\nThis method returns a set of historical trips data for the specified vehicle in the specified time range."
					},
					"response": [
						{
							"name": "List of trips taken by the requested vehicle within the specified timeframe. Ongoing trips will be returned with 9223372036854775807 as their endMs.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/trips?vehicleId=<long>&startMs=<integer>&endMs=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"trips"
									],
									"query": [
										{
											"key": "vehicleId",
											"value": "<long>"
										},
										{
											"key": "startMs",
											"value": "<integer>"
										},
										{
											"key": "endMs",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"trips\": [\n  {\n   \"assetIds\": [\n    \"<long>\",\n    \"<long>\"\n   ],\n   \"codriverIds\": [\n    \"<long>\",\n    \"<long>\"\n   ],\n   \"distanceMeters\": \"<integer>\",\n   \"driverId\": \"<integer>\",\n   \"endAddress\": {\n    \"address\": \"<string>\",\n    \"id\": \"<int64>\",\n    \"name\": \"<string>\"\n   },\n   \"endCoordinates\": {\n    \"latitude\": \"<double>\",\n    \"longitude\": \"<double>\"\n   },\n   \"endLocation\": \"<string>\",\n   \"endMs\": \"<integer>\",\n   \"endOdometer\": \"<integer>\",\n   \"fuelConsumedMl\": \"<integer>\",\n   \"startAddress\": {\n    \"address\": \"<string>\",\n    \"id\": \"<int64>\",\n    \"name\": \"<string>\"\n   },\n   \"startCoordinates\": {\n    \"latitude\": \"<double>\",\n    \"longitude\": \"<double>\"\n   },\n   \"startLocation\": \"<string>\",\n   \"startMs\": \"<integer>\",\n   \"startOdometer\": \"<integer>\",\n   \"tollMeters\": \"<integer>\"\n  },\n  {\n   \"assetIds\": [\n    \"<long>\",\n    \"<long>\"\n   ],\n   \"codriverIds\": [\n    \"<long>\",\n    \"<long>\"\n   ],\n   \"distanceMeters\": \"<integer>\",\n   \"driverId\": \"<integer>\",\n   \"endAddress\": {\n    \"address\": \"<string>\",\n    \"id\": \"<int64>\",\n    \"name\": \"<string>\"\n   },\n   \"endCoordinates\": {\n    \"latitude\": \"<double>\",\n    \"longitude\": \"<double>\"\n   },\n   \"endLocation\": \"<string>\",\n   \"endMs\": \"<integer>\",\n   \"endOdometer\": \"<integer>\",\n   \"fuelConsumedMl\": \"<integer>\",\n   \"startAddress\": {\n    \"address\": \"<string>\",\n    \"id\": \"<int64>\",\n    \"name\": \"<string>\"\n   },\n   \"startCoordinates\": {\n    \"latitude\": \"<double>\",\n    \"longitude\": \"<double>\"\n   },\n   \"startLocation\": \"<string>\",\n   \"startMs\": \"<integer>\",\n   \"startOdometer\": \"<integer>\",\n   \"tollMeters\": \"<integer>\"\n  }\n ]\n}"
						},
						{
							"name": "Unexpected error.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/fleet/trips?vehicleId=<long>&startMs=<integer>&endMs=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fleet",
										"trips"
									],
									"query": [
										{
											"key": "vehicleId",
											"value": "<long>"
										},
										{
											"key": "startMs",
											"value": "<integer>"
										},
										{
											"key": "endMs",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						}
					]
				}
			],
			"description": "The vehicle object describes a vehicle's attributes and settings within Samsara. A vehicle is generated in the Samsara platform when a vehicle gateway is installed. The gateway often auto-populates information such as the VIN, make, model, and year. The vehicle object is often referenced in other objects. For these references, you will see a mini-object of the vehicle, rather than the full vehicle information. The mini-object encompasses a smaller subset of commonly-referenced field, such as the Samsara ID, name, and external ID. GPS and on-board diagnotics are available for vehicles in real-time.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "22cae5c7-9e76-4198-acb8-62290fde3024",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "460de9ee-0ab1-45ec-987b-9c193cc6cce2",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "f79e9b8a-11b5-4c21-9673-c941ae4ba767",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "32b2a641-b77b-470b-a682-3ba16049cc87",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "4db8d10a-77f5-4733-9dd0-4b1ddc76aa9a",
			"key": "baseUrl",
			"value": "https://api.samsara.com",
			"type": "string"
		},
		{
			"id": "32e0f2e4-1633-4189-a5f0-9f7e26832860",
			"key": "token",
			"value": "",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}