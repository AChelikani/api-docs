{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Samsara API",
    "description" : "<style type=\"text/css\">\nn {\n    padding: 1em;\n    width: 100%;\n    display: block;\n    margin: 28px 0;\n}\nn.info {\n    background-color: rgba(0, 51, 160, 0.1);\n}\nn.warning {\n    background-color: #fdf6e3;\n}\ni:before {\n    margin-right: 6px;\n}\nnh {\n    font-size: 1.5rem;\n    font-weight: 700;\n    line-height: 1.1;\n    display: block;\n}\nnb {\n    margin-top: 10px;\n    padding-left: 22px;\n    display: block;\n}\n</style>\n\n# Overview\n\n<n class=\"info\">\n<nh>\n<i class=\"fa fa-info-circle\"></i>\nSomething new!\n</nh>\n<nb>\nWelcome Samsara's new and improved API. Check out our FAQ [here](https://developers.samsara.com/docs/introducing-our-next-generation-api) to see what's changed and learn how to get started.<br>\n<br>\nWant to access the legacy API docs? You can find them [here](https://www.samsara.com/api-legacy).<br>\n<br>\n*Note: Because this is a new set of APIs, we have not transitioned all endpoints over to this standard. Endpoints that still use the legacy standards are indicated in the reference documentation. If you can't find an API that you're looking for, we encourage you to look for it in our [legacy API docs](https://www.samsara.com/api-legacy) as we continue to transition all endpoints over. Check back here for updates!*<br>\n<br>\nSubmit your feedback [here](https://forms.gle/r4bs6HQshQAvBuwv6)!\n</nb>\n</n>\n\nSamsara provides API endpoints so that you can build powerful applications and custom solutions with sensor data. Samsara has endpoints available to track and analyze sensors, vehicles, and entire fleets.\n\nThe Samsara API is a [RESTful API](https://en.wikipedia.org/wiki/Representational_state_transfer). It uses standard [HTTP](https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol) authentication, verbs, and response codes, and it returns [JSON](http://www.json.org/) response bodies. If you're familiar with what you can build with a REST API, then this will be your go-to API reference.\n\nVisit [developers.samsara.com](https://developers.samsara.com) to find getting started guides and an API overview.\n\nIf you have any questions, please visit https://samsara.com/help.\n\n## Endpoints\n\nAll our APIs can be accessed through HTTP requests to URLs like:\n\n```\nhttps://api.samsara.com/<endpoint>\n```\n\nFor EU customers, this URL will be:\n\n```\nhttps://api.eu.samsara.com/<endpoint>\n```\n\n<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nNote\n</nh>\n<nb>\nLegacy endpoints will have the URL: `https://api.samsara.com/v1/<endpoint>` or `https://api.eu.samsara.com/v1/<endpoint>`\n</nb>\n</n>\n\n## Authentication\n\nTo authenticate your API request you will need to include your secret token. You can manage your API tokens in the [Dashboard](https://cloud.samsara.com). They are visible under `Settings->Organization->API Tokens`.\n\nYour API tokens carry many privileges, so be sure to keep them secure. Do not share your secret API tokens in publicly accessible areas such as GitHub, client-side code, and so on.\n\nAuthentication to the API is performed via Bearer Token in the HTTP Authorization header. Provide your API token as the `access_token` value in an `Authorization: Bearer` header. You do not need to provide a password:\n\n```curl\nAuthorization: Bearer {access_token}\n```\n\nAll API requests must be made over [HTTPS](https://en.wikipedia.org/wiki/HTTPS). Calls made over plain HTTP or without authentication will fail.\n\n## Common Patterns\n\nYou can find more info about request methods, response codes, error codes, versioning, pagination, timestamps, and mini-objects [here](https://developers.samsara.com/docs/common-structures).\n",
    "version" : "2020-06-15"
  },
  "servers" : [ {
    "url" : "https://api.samsara.com/"
  } ],
  "tags" : [ {
    "name" : "Addresses",
    "description" : "Address book entries in Samsara can be used to collect useful data about operations within a particular address's geofence area. Once an address book entry is established, this address can then subsequently be used in order to create routes, set geofence arrival alerts, or detect trips that begin or end within a given geofence area."
  }, {
    "name" : "Assets",
    "description" : "Assets refer to objects that are tracked with Samsara Asset Gateways. These include: trailers, reefers, equipment (construction, etc.), containers, and anything else you'd like to track with a Samsara Asset Gateway. This is different than Vehicles, which specifically have a Samsara Vehicle Gateway. Depending on the asset, different data is available. For all assets, GPS data is available. For powered assets like trailers, reefers, and equipment, other engine or on-board diagnostic data is available."
  }, {
    "name" : "Camera Media"
  }, {
    "name" : "Carrier Proposed Assignments",
    "description" : "Carriers (fleet managers) can propose vehicle, trailer, and shipping assignments to Drivers through the Carrier Proposed Assignments API. This set of APIs will allow you to define an assignment proposal to a Driver. The proposed assignment will be presented to the Driver in the Samsara Driver App. The Driver may accept or reject the assignment. Retrieving a list of existing proposed assignments will tell you whether the Driver accepted or rejected the proposal."
  }, {
    "name" : "Contacts",
    "description" : "Contacts are an easy way to manage which users receive alerts (via sms or email)."
  }, {
    "name" : "Documents",
    "description" : "The documents feature allows you to manage driver-submitted documents from the Samsara app. Submitted documents are grouped by document types, and back office users can create new types of documents. For more information on the driver workflow around documents, see this [KB article](https://kb.samsara.com/hc/en-us/articles/360006911551-Using-Documents-in-the-Dashboard)."
  }, {
    "name" : "Drivers",
    "description" : "Driver objects allow you to track your driver-vehicle assignments, manage driver profiles, and update mobile app credential logins. You can retrieve a list of all drivers, or you can fetch each driver object individually.\nDrivers can be either active or inactive. You should inactivate a driver if you wish to keep the driver's driving history and HOS logs. If your driver is inactive, you can still get information about a driver summary."
  }, {
    "name" : "Driver Vehicle Assignments"
  }, {
    "name" : "Equipment",
    "description" : "Equipment objects represent powered assets connected to a [Samsara AG24](https://www.samsara.com/products/models/ag24) device via an APWR, CAT, or J1939 cable. They are automatically created with a unique Samsara Equipment ID whenever a Samsara AG24 is activated in your organization."
  }, {
    "name" : "Hours of Service",
    "description" : "Driver logs containing duty status, certification details, and associated vehicles and trailers are available. You can also retrieve summarized total active time logs. Signin/Signout logs are also available. Drivers can track hours of service via the Samsara Driver mobile app.\n\n**Note:** If data is still being uploaded from the Samsara Driver App, it may not be completely reflected by the API. The best practice is to wait a couple of days before querying the API to make sure that all data from the Samsara Driver App has been uploaded."
  }, {
    "name" : "Industrial",
    "description" : "Access to industrial data."
  }, {
    "name" : "Maintenance",
    "description" : "Maintenance refers to both DVIRs and reports on vehicle fault codes."
  }, {
    "name" : "Messages",
    "description" : "Fleet Admins can send direct free-form messages to drivers. This will send a message to the driver's Samsara driver app, in which you can track whether or not a message has been read by a given driver. For sending structured messages, see the Documents API."
  }, {
    "name" : "Organization Info",
    "description" : "Information about the organization."
  }, {
    "name" : "Routes",
    "description" : "Dispatch routes include start and end times and locations and an array of jobs along the route. The jobs also include locations and scheduled arrival and departure times. As routes are completed, job skip, arrival, and completion times are made available in real-time. Routes can be associated with drivers, vehicles, and trailers, and jobs can be associated with documents."
  }, {
    "name" : "Safety",
    "description" : "Samsara provides you with more visibility on whether or not your fleets are being safe. With the collection of safety endpoints, you can get aggregate metrics around the performance of a particular driver or vehicle, as well as detailed logs of all the harsh events that take place in an organization."
  }, {
    "name" : "Sensors",
    "description" : "The sensor object describes a sensor's attributes and settings within Samsara. Samsara has many different types of sensors, such as temperature and humidity monitors, door monitors, and more."
  }, {
    "name" : "Tags",
    "description" : "Tags are a simple way to organize vehicles, drivers, assets, and sensors into easily identifiable groups. You can add unlimited entities to each tag, and entities can have multiple different tags. You can also use tag hierarchies in order to create nested classes, such as parent tag 'Massachusetts' and child tag 'Boston'. They also allow you to restrict access to data through \"tag-level\" permissions. For more information on tags functionality, see [this Knowledge Base article](https://kb.samsara.com/hc/en-us/articles/360026674631-Using-Tags-and-Tag-Nesting)."
  }, {
    "name" : "Trailer Assignments",
    "description" : "List trailer assignments over a given time period for all trailers or a given one. Trailer assignments include which driver the trailer was assigned to and for which time period."
  }, {
    "name" : "Trips",
    "description" : "Driving activity is segmented into trips (travel between a start and a stop). Vehicle movement is broken down into trips along the following lines: a trip begins when a previously inactive vehicle achieves a speed of 5mph; the trip ends when the vehicle's speed remains below 5mph for 5 minutes, or when a vehicle crosses a state or national boundary. Trips contain start and stop times, locations, and addresses. Trips also contain distance and odometer information as well as fuel consumption."
  }, {
    "name" : "Users",
    "description" : "The users API allows you to manage access to the Samsara dashboard. This can be particularly useful if you are looking to set up a connection with your identity provider to manage roles and permissions for certain types of users within your system."
  }, {
    "name" : "Vehicles",
    "description" : "A Vehicle object is created when a [Samsara Vehicle Gateway](https://www.samsara.com/products/models/vg34) is first activated. The Vehicle object will be assigned a unique ID that does not change. Samsara will associate all the telematics data from the gateway with the given Vehicle object. If a gateway is [moved from one vehicle to another](https://kb.samsara.com/hc/en-us/articles/360042699732-Moving-a-Vehicle-Gateway-from-One-Vehicle-to-Another), then a new Vehicle object will be created with a new ID. The old Vehicle object will still have its original ID and its historical data will still be accessible, however the gateway will no longer be associated with that vehicle object. You can manage a Vehicle's attributes (such as `name`, `licensePlate`, etc.) both through the API and the Samsara [cloud dashboard](https://cloud.samsara.com)."
  }, {
    "name" : "Vehicle Driver Assignments"
  }, {
    "name" : "Vehicle Stats",
    "description" : "Get real-time or historical GPS and onboard diagnostic data.\n\nRelated guide: [Telematics](https://developers.samsara.com/docs/vehicle-stats)"
  }, {
    "name" : "Vehicle Locations",
    "description" : "***NOTE: The Vehicle Locations API is an older API that does not combine GPS data with onboard diagnostics. Try our new [Vehicle Stats API](#tag/Vehicle-Stats) instead.***\n\nGet real-time or historical GPS data.\n\nRelated guide: [Vehicle Locations](https://developers.samsara.com/docs/vehicle-locations)"
  }, {
    "name" : "Beta APIs",
    "description" : "Endpoints in this section are in beta. This means that developers should **NOT** rely on these APIs to build business critical applications. The goal is to be able to release these APIs in the near future but, before doing so, ensure that we can collect feedback on the structure of their interfaces and their functionality.\n\n- Samsara may change the structure of a beta API’s interface without versioning this endpoint or any notice to beta users.\n\n- To submit feedback on these beta APIs, please fill out [this form](https://forms.gle/up7uFmJ8f2EKq8xm7).\n\n- When an endpoint becomes generally available, it will be announced in the API [changelog](https://developers.samsara.com/changelog).\n\n- If an issue or bug is experienced with any of these APIs, please submit an entry in the [feedback form](https://forms.gle/up7uFmJ8f2EKq8xm7)."
  }, {
    "name" : "Preview APIs",
    "description" : "Endpoints in this section are in Preview. These APIs are not functional and are instead for soliciting feedback from our API users on the intended design of this API. Additionally, it is not guaranteed that we will be releasing an endpoint included in this section to production. This means that developers should **NOT** rely on these APIs to build business critical applications\n\n- Samsara may change the structure of a preview API's interface without versioning or any notice to API users.\n\n- To submit feedback on these preview APIs, please fill out [this form](https://forms.gle/up7uFmJ8f2EKq8xm7).\n\n- When an endpoint becomes generally available, it will be announced in the API [changelog](https://developers.samsara.com/changelog).\n\n- If an issue or bug is experienced with any of these APIs, please submit an entry in the [feedback form](https://forms.gle/up7uFmJ8f2EKq8xm7)."
  } ],
  "paths" : {
    "/addresses" : {
      "get" : {
        "tags" : [ "Addresses" ],
        "summary" : "List all addresses",
        "description" : "Returns a list of all addresses in an organization",
        "operationId" : "listAddresses",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 512,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "createdAfterTime",
          "in" : "query",
          "description" : "A filter on data to have a created at time after or equal to this specified time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of all addresses in the organization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListAddressesResponse"
                },
                "example" : {
                  "data" : [ {
                    "addressTypes" : [ "yard" ],
                    "contacts" : [ {
                      "firstName" : "Jane",
                      "id" : "22408",
                      "lastName" : "Jones"
                    } ],
                    "createdAtTime" : "2019-05-18T20:27:35Z",
                    "externalIds" : {
                      "maintenanceId" : "250020",
                      "payrollId" : "ABFS18600"
                    },
                    "formattedAddress" : "350 Rhode Island St, San Francisco, CA",
                    "geofence" : {
                      "circle" : {
                        "latitude" : 37.765363,
                        "longitude" : -122.4029238,
                        "radiusMeters" : 25
                      },
                      "polygon" : {
                        "vertices" : [ {
                          "latitude" : 37.765363,
                          "longitude" : -122.403098
                        }, {
                          "latitude" : 38.765363,
                          "longitude" : -122.403098
                        }, {
                          "latitude" : 37.765363,
                          "longitude" : -123.403098
                        } ]
                      }
                    },
                    "id" : "22408",
                    "latitude" : 37.765363,
                    "longitude" : -122.4029238,
                    "name" : "Samsara HQ",
                    "notes" : "Hours of operation: 8am - 6pm; Truck entrance on the Rhode Island street side.",
                    "tags" : [ {
                      "id" : "3914",
                      "name" : "East Coast",
                      "parentTagId" : "4815"
                    } ]
                  } ],
                  "pagination" : {
                    "endCursor" : "MjkY",
                    "hasNextPage" : true
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Addresses" ],
        "summary" : "Create an address",
        "description" : "Creates a new address in the organization",
        "operationId" : "createAddress",
        "requestBody" : {
          "description" : "The address to create.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateAddressRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Newly created address object with ID.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "address"
      }
    },
    "/addresses/{id}" : {
      "get" : {
        "tags" : [ "Addresses" ],
        "summary" : "Retrieve an address",
        "description" : "Returns a specific address.",
        "operationId" : "getAddress",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Address. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An Address.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Addresses" ],
        "summary" : "Delete an address",
        "description" : "Delete a specific address.",
        "operationId" : "deleteAddress",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Address. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "A successful DELETE response is a 204 with no content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardDeleteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Addresses" ],
        "summary" : "Update an address",
        "description" : "Update a specific address.",
        "operationId" : "updateAddress",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Address. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The address fields to update.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateAddressRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Updated address object with ID.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "address"
      }
    },
    "/attributes" : {
      "get" : {
        "tags" : [ "Beta APIs" ],
        "summary" : "[beta] List all attributes by entity type",
        "description" : "Fetch all attributes in an organization associated with either drivers or vehicles.",
        "operationId" : "getAttributesByEntityType",
        "parameters" : [ {
          "name" : "entityType",
          "in" : "query",
          "description" : "Denotes the type of entity, driver or vehicle.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "driver", "vehicle" ]
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 512,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "All attributes in an organization for an entity type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetAttributesByEntityTypeResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Beta APIs" ],
        "summary" : "[beta] Create an attribute",
        "description" : "Creates a new attribute in the organization.",
        "operationId" : "createAttribute",
        "requestBody" : {
          "description" : "The attribute to create.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateAttributeRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Newly created attribute object with ID.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttributeExpandedResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "attribute"
      }
    },
    "/attributes/{id}" : {
      "get" : {
        "tags" : [ "Beta APIs" ],
        "summary" : "[beta] Retrieve an attribute",
        "description" : "Fetch an attribute by id, including all of its applications",
        "operationId" : "getAttribute",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Samsara-provided UUID of the attribute.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityType",
          "in" : "query",
          "description" : "Denotes the type of entity, driver or vehicle.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "driver", "vehicle" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The attribute corresponding to request id.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttributeExpandedResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Beta APIs" ],
        "summary" : "[beta] Deleting an attribute",
        "description" : "Delete an attribute by id, including all of its applications",
        "operationId" : "deleteAttribute",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Samsara-provided UUID of the attribute.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityType",
          "in" : "query",
          "description" : "Denotes the type of entity, driver or vehicle.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "driver", "vehicle" ]
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "A successful DELETE response is a 204 with no content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardDeleteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Beta APIs" ],
        "summary" : "[beta] Update an attribute",
        "description" : "Updates an attribute in the organization.",
        "operationId" : "updateAttribute",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Samsara-provided UUID of the attribute.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The attribute to update.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateAttributeRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Newly created attribute object with ID.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttributeExpandedResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "attribute"
      }
    },
    "/contacts" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "List all contacts",
        "description" : "Returns a list of all contacts in an organization.",
        "operationId" : "listContacts",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 512,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of all contacts",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListContactsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Contacts" ],
        "summary" : "Create a contact",
        "description" : "Add a contact to the organization",
        "operationId" : "createContact",
        "requestBody" : {
          "description" : "The contact create parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateContactRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Contact was successfully added.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "contact"
      }
    },
    "/contacts/{id}" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "Retrieve a contact",
        "description" : "Get a specific contact's information.",
        "operationId" : "getContact",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier for the contact.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the specified contact.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Contacts" ],
        "summary" : "Delete a contact",
        "description" : "Delete the given contact.",
        "operationId" : "deleteContact",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier for the contact.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "A successful DELETE response is a 204 with no content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardDeleteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Contacts" ],
        "summary" : "Update a contact",
        "description" : "Update a specific contact's information.",
        "operationId" : "updateContact",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier for the contact.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Updates to the contact.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateContactRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Updated contact object with given ID.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "contact"
      }
    },
    "/fleet/carrier-proposed-assignments" : {
      "get" : {
        "tags" : [ "Carrier Proposed Assignments" ],
        "summary" : "Retrieve assignments",
        "description" : "Show the assignments that are active for drivers and that would currently be visible to them in the driver app.",
        "operationId" : "listCarrierProposedAssignments",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 512,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "driverIds",
          "in" : "query",
          "description" : "If specified, limits the results to those for these drivers. e.g. `driverIds=1,2,3`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "activeTime",
          "in" : "query",
          "description" : "If specified, shows assignments that will be active at this time. Defaults to now, which would show current active assignments. In RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the assignments that drivers would see in the future, if any.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListCarrierProposedAssignmentResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Carrier Proposed Assignments" ],
        "summary" : "Create an assignment",
        "description" : "Creates a new assignment that a driver can later use. Each driver can only have one future assignment.",
        "operationId" : "createCarrierProposedAssignment",
        "requestBody" : {
          "description" : "The assignment to create.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateCarrierProposedAssignmentRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Return the created assignment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CarrierProposedAssignmentResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "carrierProposedAssignment"
      }
    },
    "/fleet/carrier-proposed-assignments/{id}" : {
      "delete" : {
        "tags" : [ "Carrier Proposed Assignments" ],
        "summary" : "Delete an assignment",
        "description" : "Permanently delete an assignment. You can only delete assignments that are not yet active. To override a currently active assignment, create a new empty one, instead.",
        "operationId" : "deleteCarrierProposedAssignment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the assignment.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "A successful DELETE response is a 204 with no content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardDeleteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/defects/history" : {
      "get" : {
        "tags" : [ "Maintenance" ],
        "summary" : "Get all defects",
        "description" : "Returns a list of DVIR defects in an organization, filtered by creation time. The maximum time period you can query for is 30 days.",
        "operationId" : "getDvirDefects",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 512,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00). *The maximum time period you can query for is 30 days.*",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00). *The maximum time period you can query for is 30 days.*",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "isResolved",
          "in" : "query",
          "description" : "A filter on the data based on resolution status. Example: `isResolved=true`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of all DVIR defects in the organization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DefectsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/defects/{id}" : {
      "patch" : {
        "tags" : [ "Maintenance" ],
        "summary" : "Update a defect",
        "description" : "Updates a given defect. Can be used to resolve a defect by marking its `isResolved` field to `true`.",
        "operationId" : "updateDvirDefect",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the defect.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The DVIR defect fields to update.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DefectPatch"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Return the modified defect entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DefectResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "defect"
      }
    },
    "/fleet/document-types" : {
      "get" : {
        "tags" : [ "Beta APIs" ],
        "summary" : "[beta] Fetch document types ",
        "description" : "Returns a list of the organization document types",
        "operationId" : "getDocumentTypes",
        "responses" : {
          "200" : {
            "description" : "OK response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentTypesGetDocumentTypesResponseBody"
                },
                "example" : {
                  "data" : [ {
                    "conditionalFieldSections" : [ {
                      "conditionalFieldFirstIndex" : 1,
                      "conditionalFieldLastIndex" : 2,
                      "triggeringFieldIndex" : 0,
                      "triggeringFieldValue" : "Yes"
                    } ],
                    "fieldTypes" : [ {
                      "fieldType" : "multipleChoice",
                      "label" : "Was there damage?",
                      "multipleChoiceFieldTypeMetaData" : [ {
                        "label" : "Yes"
                      }, {
                        "label" : "No"
                      } ],
                      "requiredField" : true
                    }, {
                      "fieldType" : "photo",
                      "label" : "Damage Photos",
                      "requiredField" : false
                    }, {
                      "fieldType" : "number",
                      "label" : "Number of vehicles impacted",
                      "numberFieldTypeMetaData" : {
                        "numberOfDecimalPlaces" : 2
                      },
                      "requiredField" : false
                    }, {
                      "fieldType" : "dateTime",
                      "label" : "Date and time",
                      "requiredField" : true
                    }, {
                      "fieldType" : "signature",
                      "label" : "Sign",
                      "requiredField" : true,
                      "signatureFieldTypeMetaData" : {
                        "legalText" : "Legal Text"
                      }
                    } ],
                    "id" : "4aff772c-a7bb-45e6-8e41-6a53e34feb83",
                    "name" : "Accident Report",
                    "orgId" : 12345
                  } ],
                  "pagination" : {
                    "endCursor" : "MjkY",
                    "hasNextPage" : true
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentTypesGetDocumentTypesInternalErrorResponseBody"
                },
                "example" : {
                  "message" : "Failed to execute GraphQL query.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          },
          "default" : {
            "description" : "Bad Request response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentTypesGetDocumentTypesBadRequestResponseBody"
                },
                "example" : {
                  "message" : "Invalid value for parameter.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/documents" : {
      "get" : {
        "tags" : [ "Preview APIs" ],
        "summary" : "[preview] Fetch all documents",
        "description" : "Get all documents for the given time range",
        "operationId" : "getDocuments",
        "parameters" : [ {
          "name" : "startTime",
          "in" : "query",
          "description" : " A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : " An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "documentTypeId",
          "in" : "query",
          "description" : "ID of the document template type.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentsGetDocumentsResponseBody"
                },
                "example" : {
                  "data" : [ {
                    "conditionalFieldSections" : [ {
                      "conditionalFieldFirstIndex" : 2949691048040286700,
                      "conditionalFieldLastIndex" : 5188021910068834000,
                      "triggeringFieldIndex" : 6312989348082117000,
                      "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
                    }, {
                      "conditionalFieldFirstIndex" : 2949691048040286700,
                      "conditionalFieldLastIndex" : 5188021910068834000,
                      "triggeringFieldIndex" : 6312989348082117000,
                      "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
                    }, {
                      "conditionalFieldFirstIndex" : 2949691048040286700,
                      "conditionalFieldLastIndex" : 5188021910068834000,
                      "triggeringFieldIndex" : 6312989348082117000,
                      "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
                    } ],
                    "createdAtTime" : "1993-05-23T22:05:38Z",
                    "documentType" : {
                      "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                      "name" : "Fleet Truck List"
                    },
                    "driver" : {
                      "externalIds" : {
                        "maintenanceId" : "250020",
                        "payrollId" : "ABFS18600"
                      },
                      "id" : "45646",
                      "name" : "Driver Bob"
                    },
                    "fields" : [ {
                      "label" : "Load weight",
                      "type" : "scannedDocument",
                      "value" : {
                        "barcodeValue" : {
                          "barcodeType" : "org.gs1.EAN-13",
                          "barcodeValue" : "0853883003114"
                        },
                        "dateTimeValue" : {
                          "dateTime" : "1988-11-10T02:42:05Z"
                        },
                        "multipleChoiceValue" : {
                          "selected" : false,
                          "value" : "Yes"
                        },
                        "numberValue" : 123,
                        "photoValue" : {
                          "id" : "f5271458-21f9-4a9f-a290-780c6d8840ff",
                          "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                        },
                        "signatureValue" : {
                          "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                          "name" : "John Smith",
                          "signedAtTime" : "1996-02-21T06:57:25Z",
                          "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                        },
                        "stringValue" : "Red Truck"
                      }
                    }, {
                      "label" : "Load weight",
                      "type" : "scannedDocument",
                      "value" : {
                        "barcodeValue" : {
                          "barcodeType" : "org.gs1.EAN-13",
                          "barcodeValue" : "0853883003114"
                        },
                        "dateTimeValue" : {
                          "dateTime" : "1988-11-10T02:42:05Z"
                        },
                        "multipleChoiceValue" : {
                          "selected" : false,
                          "value" : "Yes"
                        },
                        "numberValue" : 123,
                        "photoValue" : {
                          "id" : "f5271458-21f9-4a9f-a290-780c6d8840ff",
                          "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                        },
                        "signatureValue" : {
                          "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                          "name" : "John Smith",
                          "signedAtTime" : "1996-02-21T06:57:25Z",
                          "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                        },
                        "stringValue" : "Red Truck"
                      }
                    } ],
                    "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                    "name" : "Dropoff Slip 123",
                    "notes" : "Missing a crate",
                    "routeStop" : {
                      "externalIds" : {
                        "maintenanceId" : "250020",
                        "payrollId" : "ABFS18600"
                      },
                      "id" : "494123",
                      "name" : "Company Warehouse #1"
                    },
                    "state" : "submitted",
                    "updatedAtTime" : "1985-01-12T07:25:57Z",
                    "vehicle" : {
                      "externalIds" : {
                        "maintenanceId" : "250020",
                        "payrollId" : "ABFS18600"
                      },
                      "id" : "494123",
                      "name" : "Fleet Truck #1"
                    }
                  }, {
                    "conditionalFieldSections" : [ {
                      "conditionalFieldFirstIndex" : 2949691048040286700,
                      "conditionalFieldLastIndex" : 5188021910068834000,
                      "triggeringFieldIndex" : 6312989348082117000,
                      "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
                    }, {
                      "conditionalFieldFirstIndex" : 2949691048040286700,
                      "conditionalFieldLastIndex" : 5188021910068834000,
                      "triggeringFieldIndex" : 6312989348082117000,
                      "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
                    }, {
                      "conditionalFieldFirstIndex" : 2949691048040286700,
                      "conditionalFieldLastIndex" : 5188021910068834000,
                      "triggeringFieldIndex" : 6312989348082117000,
                      "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
                    } ],
                    "createdAtTime" : "1993-05-23T22:05:38Z",
                    "documentType" : {
                      "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                      "name" : "Fleet Truck List"
                    },
                    "driver" : {
                      "externalIds" : {
                        "maintenanceId" : "250020",
                        "payrollId" : "ABFS18600"
                      },
                      "id" : "45646",
                      "name" : "Driver Bob"
                    },
                    "fields" : [ {
                      "label" : "Load weight",
                      "type" : "scannedDocument",
                      "value" : {
                        "barcodeValue" : {
                          "barcodeType" : "org.gs1.EAN-13",
                          "barcodeValue" : "0853883003114"
                        },
                        "dateTimeValue" : {
                          "dateTime" : "1988-11-10T02:42:05Z"
                        },
                        "multipleChoiceValue" : {
                          "selected" : false,
                          "value" : "Yes"
                        },
                        "numberValue" : 123,
                        "photoValue" : {
                          "id" : "f5271458-21f9-4a9f-a290-780c6d8840ff",
                          "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                        },
                        "signatureValue" : {
                          "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                          "name" : "John Smith",
                          "signedAtTime" : "1996-02-21T06:57:25Z",
                          "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                        },
                        "stringValue" : "Red Truck"
                      }
                    }, {
                      "label" : "Load weight",
                      "type" : "scannedDocument",
                      "value" : {
                        "barcodeValue" : {
                          "barcodeType" : "org.gs1.EAN-13",
                          "barcodeValue" : "0853883003114"
                        },
                        "dateTimeValue" : {
                          "dateTime" : "1988-11-10T02:42:05Z"
                        },
                        "multipleChoiceValue" : {
                          "selected" : false,
                          "value" : "Yes"
                        },
                        "numberValue" : 123,
                        "photoValue" : {
                          "id" : "f5271458-21f9-4a9f-a290-780c6d8840ff",
                          "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                        },
                        "signatureValue" : {
                          "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                          "name" : "John Smith",
                          "signedAtTime" : "1996-02-21T06:57:25Z",
                          "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                        },
                        "stringValue" : "Red Truck"
                      }
                    } ],
                    "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                    "name" : "Dropoff Slip 123",
                    "notes" : "Missing a crate",
                    "routeStop" : {
                      "externalIds" : {
                        "maintenanceId" : "250020",
                        "payrollId" : "ABFS18600"
                      },
                      "id" : "494123",
                      "name" : "Company Warehouse #1"
                    },
                    "state" : "submitted",
                    "updatedAtTime" : "1985-01-12T07:25:57Z",
                    "vehicle" : {
                      "externalIds" : {
                        "maintenanceId" : "250020",
                        "payrollId" : "ABFS18600"
                      },
                      "id" : "494123",
                      "name" : "Fleet Truck #1"
                    }
                  } ],
                  "pagination" : {
                    "endCursor" : "MjkY",
                    "hasNextPage" : true
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentsGetDocumentsInternalErrorResponseBody"
                },
                "example" : {
                  "message" : "Failed to execute GraphQL query.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          },
          "default" : {
            "description" : "Bad Request response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentsGetDocumentsBadRequestResponseBody"
                },
                "example" : {
                  "message" : "Invalid value for parameter.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/documents/pdfs" : {
      "post" : {
        "tags" : [ "Documents" ],
        "summary" : "Create a document PDF",
        "description" : "Request creation of a document PDF.",
        "operationId" : "generateDocumentPdf",
        "requestBody" : {
          "description" : "Specifies the document for which to generate a PDF.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DocumentPdfGenerationRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Newly created PDF generation job.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentPdfGenerationResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "document"
      }
    },
    "/fleet/documents/pdfs/{id}" : {
      "get" : {
        "tags" : [ "Documents" ],
        "summary" : "Query a document PDF",
        "description" : "Returns generation job status and download URL for a PDF.",
        "operationId" : "getDocumentPdf",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the pdf.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Document PDF job status and download URL.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentPdfQueryResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/documents/{id}" : {
      "get" : {
        "tags" : [ "Preview APIs" ],
        "summary" : "[preview] Fetch document",
        "description" : "Returns a single document",
        "operationId" : "getDocument",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the document",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DocumentsGetDocumentRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentsGetDocumentResponseBody"
                },
                "example" : {
                  "data" : {
                    "conditionalFieldSections" : [ {
                      "conditionalFieldFirstIndex" : 2949691048040286700,
                      "conditionalFieldLastIndex" : 5188021910068834000,
                      "triggeringFieldIndex" : 6312989348082117000,
                      "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
                    }, {
                      "conditionalFieldFirstIndex" : 2949691048040286700,
                      "conditionalFieldLastIndex" : 5188021910068834000,
                      "triggeringFieldIndex" : 6312989348082117000,
                      "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
                    }, {
                      "conditionalFieldFirstIndex" : 2949691048040286700,
                      "conditionalFieldLastIndex" : 5188021910068834000,
                      "triggeringFieldIndex" : 6312989348082117000,
                      "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
                    } ],
                    "createdAtTime" : "1993-05-23T22:05:38Z",
                    "documentType" : {
                      "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                      "name" : "Fleet Truck List"
                    },
                    "driver" : {
                      "externalIds" : {
                        "maintenanceId" : "250020",
                        "payrollId" : "ABFS18600"
                      },
                      "id" : "45646",
                      "name" : "Driver Bob"
                    },
                    "fields" : [ {
                      "label" : "Load weight",
                      "type" : "scannedDocument",
                      "value" : {
                        "barcodeValue" : {
                          "barcodeType" : "org.gs1.EAN-13",
                          "barcodeValue" : "0853883003114"
                        },
                        "dateTimeValue" : {
                          "dateTime" : "1988-11-10T02:42:05Z"
                        },
                        "multipleChoiceValue" : {
                          "selected" : false,
                          "value" : "Yes"
                        },
                        "numberValue" : 123,
                        "photoValue" : {
                          "id" : "f5271458-21f9-4a9f-a290-780c6d8840ff",
                          "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                        },
                        "signatureValue" : {
                          "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                          "name" : "John Smith",
                          "signedAtTime" : "1996-02-21T06:57:25Z",
                          "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                        },
                        "stringValue" : "Red Truck"
                      }
                    }, {
                      "label" : "Load weight",
                      "type" : "scannedDocument",
                      "value" : {
                        "barcodeValue" : {
                          "barcodeType" : "org.gs1.EAN-13",
                          "barcodeValue" : "0853883003114"
                        },
                        "dateTimeValue" : {
                          "dateTime" : "1988-11-10T02:42:05Z"
                        },
                        "multipleChoiceValue" : {
                          "selected" : false,
                          "value" : "Yes"
                        },
                        "numberValue" : 123,
                        "photoValue" : {
                          "id" : "f5271458-21f9-4a9f-a290-780c6d8840ff",
                          "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                        },
                        "signatureValue" : {
                          "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                          "name" : "John Smith",
                          "signedAtTime" : "1996-02-21T06:57:25Z",
                          "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                        },
                        "stringValue" : "Red Truck"
                      }
                    } ],
                    "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                    "name" : "Dropoff Slip 123",
                    "notes" : "Missing a crate",
                    "routeStop" : {
                      "externalIds" : {
                        "maintenanceId" : "250020",
                        "payrollId" : "ABFS18600"
                      },
                      "id" : "494123",
                      "name" : "Company Warehouse #1"
                    },
                    "state" : "submitted",
                    "updatedAtTime" : "1985-01-12T07:25:57Z",
                    "vehicle" : {
                      "externalIds" : {
                        "maintenanceId" : "250020",
                        "payrollId" : "ABFS18600"
                      },
                      "id" : "494123",
                      "name" : "Fleet Truck #1"
                    }
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentsGetDocumentInternalErrorResponseBody"
                },
                "example" : {
                  "message" : "Failed to execute GraphQL query.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          },
          "default" : {
            "description" : "Bad Request response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentsGetDocumentBadRequestResponseBody"
                },
                "example" : {
                  "message" : "Invalid value for parameter.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "GetDocumentRequestBody"
      }
    },
    "/fleet/drivers" : {
      "get" : {
        "tags" : [ "Drivers" ],
        "summary" : "List all drivers",
        "description" : "Get all drivers in organization.",
        "operationId" : "listDrivers",
        "parameters" : [ {
          "name" : "driverActivationStatus",
          "in" : "query",
          "description" : "If value is `deactivated`, only drivers that are deactivated will appear in the response. This parameter will default to `active` if not provided (fetching only active drivers).",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "active", "deactivated" ]
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 512,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "updatedAfterTime",
          "in" : "query",
          "description" : "A filter on data to have an updated at time after or equal to this specified time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdAfterTime",
          "in" : "query",
          "description" : "A filter on data to have a created at time after or equal to this specified time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of all driver objects.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListDriversResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Drivers" ],
        "summary" : "Create a driver",
        "description" : "Add a driver to the organization.",
        "operationId" : "createDriver",
        "requestBody" : {
          "description" : "The driver to create.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateDriverRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Newly created driver object, with Samsara-generated ID.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DriverResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "driver"
      }
    },
    "/fleet/drivers/efficiency" : {
      "get" : {
        "tags" : [ "Beta APIs" ],
        "summary" : "[beta] List driver efficiency",
        "description" : "Get all drivers' efficiencies.",
        "operationId" : "getDriverEfficiency",
        "parameters" : [ {
          "name" : "driverActivationStatus",
          "in" : "query",
          "description" : "If value is `deactivated`, only drivers that are deactivated will appear in the response. This parameter will default to `active` if not provided (fetching only active drivers).",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "active", "deactivated" ]
          }
        }, {
          "name" : "driverIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of driver IDs. Cannot be used with tag filtering or driver status. Example: `driverIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "driverTagIds",
          "in" : "query",
          "description" : "Filters summary to drivers based on this comma-separated list of tag IDs. Data from all the drivers' respective vehicles will be included in the summary, regardless of which tag the vehicle is associated with. Should not be provided in addition to `driverIds`. Example: driverTagIds=1234,5678",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "driverParentTagIds",
          "in" : "query",
          "description" : "Filters like `driverTagIds` but includes descendants of all the given parent tags. Should not be provided in addition to `driverIds`. Example: `driverParentTagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "A start time in RFC 3339 format. The results will be truncated to the hour mark for the provided time. For example, if `startTime` is 2020-03-17T12:06:19Z then the results will include data starting from 2020-03-17T12:00:00Z. The provided start time cannot be in the future. Start time can be at most 31 days before the end time. If the start time is within the last hour, the results will be empty. Default: 24 hours prior to endTime.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "An end time in RFC 3339 format. The results will be truncated to the hour mark for the provided time. For example, if `endTime` is 2020-03-17T12:06:19Z then the results will include data up until 2020-03-17T12:00:00Z. The provided end time cannot be in the future. End time can be at most 31 days after the start time.   Default: The current time truncated to the hour mark.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of all drivers' efficiencies",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DriverEfficienciesResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/drivers/tachograph-activity/history" : {
      "get" : {
        "tags" : [ "Drivers" ],
        "summary" : "Get driver tachograph activity",
        "description" : "Returns all known tachograph activity for all specified drivers in the time range.",
        "operationId" : "getDriverTachographActivity",
        "parameters" : [ {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "An end time in RFC 3339 format. It can't be more than 30 days past startTime. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "driverIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of driver IDs. Example: `driverIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of all driver tachograph activities in a specified time range.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DriverTachographActivityResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/drivers/tachograph-files/history" : {
      "get" : {
        "tags" : [ "Drivers" ],
        "summary" : "Get tachograph driver files",
        "description" : "Returns all known tachograph files for all specified drivers in the time range.",
        "operationId" : "getDriverTachographFiles",
        "parameters" : [ {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "driverIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of driver IDs. Example: `driverIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of all driver tachograph files in a specified time range.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TachographDriverFilesResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/drivers/vehicle-assignments" : {
      "get" : {
        "tags" : [ "Driver Vehicle Assignments" ],
        "summary" : "Get all driver vehicle assignments.",
        "description" : "Get all driver assignments for the requested vehicles in the requested time range. The only type of assignment supported right now are assignments created through the driver app.",
        "operationId" : "getDriversVehicleAssignments",
        "parameters" : [ {
          "name" : "startTime",
          "in" : "query",
          "description" : " A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00). The maximum allowed startTime-endTime range is 7 days.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : " An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00). The maximum allowed startTime-endTime range is 7 days.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "driverIds",
          "in" : "query",
          "description" : " A filter on the data based on this comma-separated list of driver IDs and externalIds. Example: `driverIds=1234,5678,payroll:4841`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tagIds",
          "in" : "query",
          "description" : " A filter on the data based on this comma-separated list of driver tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : " A filter on the data based on this comma-separated list of driver parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "driverActivationStatus",
          "in" : "query",
          "description" : "If value is `deactivated`, only drivers that are deactivated will appear in the response. This parameter will default to `active` if not provided (fetching only active drivers).",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "active", "deactivated" ],
            "default" : "active"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DriversVehicleAssignmentsGetDriversVehicleAssignmentsResponseBody"
                },
                "example" : {
                  "data" : [ {
                    "driverActivationStatus" : "active",
                    "externalIds" : {
                      "maintenanceId" : "250020",
                      "payrollId" : "ABFS18600"
                    },
                    "id" : "494123",
                    "name" : "Joe Driver",
                    "vehicleAssignments" : [ {
                      "assignmentType" : "driverApp",
                      "endTime" : "2019-06-13T19:08:25Z",
                      "isPassenger" : false,
                      "startTime" : "2019-06-13T19:08:25Z",
                      "vehicle" : {
                        "externalIds" : {
                          "maintenanceId" : "250020",
                          "payrollId" : "ABFS18600"
                        },
                        "id" : "494123",
                        "name" : "Fleet Truck #1"
                      }
                    }, {
                      "assignmentType" : "driverApp",
                      "endTime" : "2019-06-13T19:08:25Z",
                      "isPassenger" : false,
                      "startTime" : "2019-06-13T19:08:25Z",
                      "vehicle" : {
                        "externalIds" : {
                          "maintenanceId" : "250020",
                          "payrollId" : "ABFS18600"
                        },
                        "id" : "494123",
                        "name" : "Fleet Truck #1"
                      }
                    }, {
                      "assignmentType" : "driverApp",
                      "endTime" : "2019-06-13T19:08:25Z",
                      "isPassenger" : false,
                      "startTime" : "2019-06-13T19:08:25Z",
                      "vehicle" : {
                        "externalIds" : {
                          "maintenanceId" : "250020",
                          "payrollId" : "ABFS18600"
                        },
                        "id" : "494123",
                        "name" : "Fleet Truck #1"
                      }
                    } ]
                  }, {
                    "driverActivationStatus" : "active",
                    "externalIds" : {
                      "maintenanceId" : "250020",
                      "payrollId" : "ABFS18600"
                    },
                    "id" : "494123",
                    "name" : "Joe Driver",
                    "vehicleAssignments" : [ {
                      "assignmentType" : "driverApp",
                      "endTime" : "2019-06-13T19:08:25Z",
                      "isPassenger" : false,
                      "startTime" : "2019-06-13T19:08:25Z",
                      "vehicle" : {
                        "externalIds" : {
                          "maintenanceId" : "250020",
                          "payrollId" : "ABFS18600"
                        },
                        "id" : "494123",
                        "name" : "Fleet Truck #1"
                      }
                    }, {
                      "assignmentType" : "driverApp",
                      "endTime" : "2019-06-13T19:08:25Z",
                      "isPassenger" : false,
                      "startTime" : "2019-06-13T19:08:25Z",
                      "vehicle" : {
                        "externalIds" : {
                          "maintenanceId" : "250020",
                          "payrollId" : "ABFS18600"
                        },
                        "id" : "494123",
                        "name" : "Fleet Truck #1"
                      }
                    }, {
                      "assignmentType" : "driverApp",
                      "endTime" : "2019-06-13T19:08:25Z",
                      "isPassenger" : false,
                      "startTime" : "2019-06-13T19:08:25Z",
                      "vehicle" : {
                        "externalIds" : {
                          "maintenanceId" : "250020",
                          "payrollId" : "ABFS18600"
                        },
                        "id" : "494123",
                        "name" : "Fleet Truck #1"
                      }
                    } ]
                  }, {
                    "driverActivationStatus" : "active",
                    "externalIds" : {
                      "maintenanceId" : "250020",
                      "payrollId" : "ABFS18600"
                    },
                    "id" : "494123",
                    "name" : "Joe Driver",
                    "vehicleAssignments" : [ {
                      "assignmentType" : "driverApp",
                      "endTime" : "2019-06-13T19:08:25Z",
                      "isPassenger" : false,
                      "startTime" : "2019-06-13T19:08:25Z",
                      "vehicle" : {
                        "externalIds" : {
                          "maintenanceId" : "250020",
                          "payrollId" : "ABFS18600"
                        },
                        "id" : "494123",
                        "name" : "Fleet Truck #1"
                      }
                    }, {
                      "assignmentType" : "driverApp",
                      "endTime" : "2019-06-13T19:08:25Z",
                      "isPassenger" : false,
                      "startTime" : "2019-06-13T19:08:25Z",
                      "vehicle" : {
                        "externalIds" : {
                          "maintenanceId" : "250020",
                          "payrollId" : "ABFS18600"
                        },
                        "id" : "494123",
                        "name" : "Fleet Truck #1"
                      }
                    }, {
                      "assignmentType" : "driverApp",
                      "endTime" : "2019-06-13T19:08:25Z",
                      "isPassenger" : false,
                      "startTime" : "2019-06-13T19:08:25Z",
                      "vehicle" : {
                        "externalIds" : {
                          "maintenanceId" : "250020",
                          "payrollId" : "ABFS18600"
                        },
                        "id" : "494123",
                        "name" : "Fleet Truck #1"
                      }
                    } ]
                  } ],
                  "pagination" : {
                    "endCursor" : "MjkY",
                    "hasNextPage" : true
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DriversVehicleAssignmentsGetDriversVehicleAssignmentsNotFoundResponseBody"
                },
                "example" : {
                  "message" : "Object not found.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DriversVehicleAssignmentsGetDriversVehicleAssignmentsInternalErrorResponseBody"
                },
                "example" : {
                  "message" : "Failed to execute GraphQL query.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DriversVehicleAssignmentsGetDriversVehicleAssignmentsNotImplementedResponseBody"
                },
                "example" : {
                  "message" : "Not implemented.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          },
          "default" : {
            "description" : "Bad Request response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DriversVehicleAssignmentsGetDriversVehicleAssignmentsBadRequestResponseBody"
                },
                "example" : {
                  "message" : "Invalid value for parameter.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/drivers/{id}" : {
      "get" : {
        "tags" : [ "Drivers" ],
        "summary" : "Retrieve a driver",
        "description" : "Get information about a driver.",
        "operationId" : "getDriver",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the driver. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the specified driver.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DriverResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Drivers" ],
        "summary" : "Update a driver",
        "description" : "Update a specific driver's information. This can also be used to activate or de-activate a given driver by setting the driverActivationStatus field. If the driverActivationStatus field is 'deactivated' then the user can also specify the deactivatedAtTime. The deactivatedAtTime cannot be more than 6 months in the past and must not come before the dirver's latest active HOS log. It will be considered an error if deactivatedAtTime is provided with a driverActivationStatus of active",
        "operationId" : "updateDriver",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the driver. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Updates to the driver properties.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateDriverRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Updated driver object, with ID.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DriverResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "driver"
      }
    },
    "/fleet/dvirs" : {
      "post" : {
        "tags" : [ "Maintenance" ],
        "summary" : "Create a mechanic DVIR",
        "description" : "Creates a new mechanic DVIR in the organization.",
        "operationId" : "createDvir",
        "requestBody" : {
          "description" : "The DVIR to create.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateDvirRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Newly created DVIR.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DvirResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "dvir"
      }
    },
    "/fleet/dvirs/history" : {
      "get" : {
        "tags" : [ "Maintenance" ],
        "summary" : "Get all DVIRs",
        "description" : "Returns a list of all DVIRs in an organization",
        "operationId" : "getDvirHistory",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 512,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of all DVIRs in the organization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DvirsListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/dvirs/{id}" : {
      "patch" : {
        "tags" : [ "Maintenance" ],
        "summary" : "Resolve a DVIR",
        "description" : "Resolves a given DVIR by marking its `isResolved` field to `true`.",
        "operationId" : "updateDvir",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the DVIR.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The dvir fields to update.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateDvirRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Updated dvir object with ID.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DvirResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "dvir"
      }
    },
    "/fleet/equipment" : {
      "get" : {
        "tags" : [ "Equipment" ],
        "summary" : "List all equipment",
        "description" : "Returns a list of all equipment in an organization. Equipment objects represent powered assets connected to a [Samsara AG24](https://www.samsara.com/products/models/ag24) via an APWR, CAT, or J1939 cable. They are automatically created with a unique Samsara Equipment ID whenever an AG24 is activated in your organization.",
        "operationId" : "listEquipment",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 512,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of all equipment objects, and pagination information",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EquipmentListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/equipment/locations" : {
      "get" : {
        "tags" : [ "Equipment" ],
        "summary" : "Get most recent locations for all equipment",
        "description" : "Returns last known locations for all equipment. This can be optionally filtered by tags or specific equipment IDs.",
        "operationId" : "getEquipmentLocations",
        "parameters" : [ {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "equipmentIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of equipment IDs. Example: `equipmentIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The most recent equipment locations and pagination information",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EquipmentLocationsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/equipment/locations/feed" : {
      "get" : {
        "tags" : [ "Equipment" ],
        "summary" : "Follow feed of equipment locations",
        "description" : "Follow a continuous feed of all equipment locations from Samsara AG24s.\n\nYour first call to this endpoint will provide you with the most recent location for each unit of equipment and a `pagination` object that contains an `endCursor`.\n\nYou can provide the `endCursor` to subsequent calls via the `after` parameter. The response will contain any equipment location updates since that `endCursor`.\n\nIf `hasNextPage` is `false`, no updates are readily available yet. We'd suggest waiting a minimum of 5 seconds before requesting updates.",
        "operationId" : "getEquipmentLocationsFeed",
        "parameters" : [ {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "equipmentIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of equipment IDs. Example: `equipmentIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The feed of equipment locations and pagination information",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EquipmentLocationsListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/equipment/locations/history" : {
      "get" : {
        "tags" : [ "Equipment" ],
        "summary" : "Get historical equipment locations",
        "description" : "Returns historical equipment locations during the given time range. This can be optionally filtered by tags or specific equipment IDs.",
        "operationId" : "getEquipmentLocationsHistory",
        "parameters" : [ {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "equipmentIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of equipment IDs. Example: `equipmentIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Historical equipment locations and pagination information",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EquipmentLocationsListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/equipment/stats" : {
      "get" : {
        "tags" : [ "Equipment" ],
        "summary" : "Get most recent stats for all equipment",
        "description" : "Returns the last known stats for all equipment. This can be optionally filtered by tags or specific equipment IDs.",
        "operationId" : "getEquipmentStats",
        "parameters" : [ {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "equipmentIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of equipment IDs. Example: `equipmentIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "types",
          "in" : "query",
          "description" : "The type of equipment stat you want to query. Currently, you may only submit one type.\n\n- `engineRpm`: The revolutions per minute of the engine.\n- `fuelPercents`: The percent of fuel in the unit of equipment.\n- `obdEngineSeconds`: The number of seconds the engine has been running since it was new. This value is provided directly from on-board diagnostics.\n- `gatewayEngineSeconds`: An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG24 device is receiving power via APWR/AOPEN cable and an offset provided manually through the Samsara cloud dashboard.\n- `gatewayJ1939EngineSeconds`: An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG24 device is receiving power via J1939/CAT cable and an offset provided manually through the Samsara cloud dashboard.\n- `obdEngineStates`: The state of the engine read from on-board diagnostics. Can be `Off`, `On`, or `Idle`.\n- `gatewayEngineStates`: An approximation of engine state based on readings the AG24 receives from the aux/digio cable. Can be `Off` or `On`.\n- `gpsOdometerMeters`: An approximation of odometer reading based on GPS calculations since the AG24 was activated, and a manual odometer offset provided in the Samsara cloud dashboard.",
          "required" : true,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "string",
              "enum" : [ "gatewayEngineStates", "obdEngineStates", "fuelPercents", "engineRpm", "gatewayEngineSeconds", "obdEngineSeconds", "gatewayJ1939EngineSeconds", "gpsOdometerMeters" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The most recent equipment stats and pagination information",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EquipmentStatsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/equipment/stats/feed" : {
      "get" : {
        "tags" : [ "Equipment" ],
        "summary" : "Follow a feed of equipment stats",
        "description" : "Follow a continuous feed of all equipment stats from Samsara AG24s.\n\nYour first call to this endpoint will provide you with the most recent stats for each unit of equipment and a `pagination` object that contains an `endCursor`.\n\nYou can provide the `endCursor` to subsequent calls via the `after` parameter. The response will contain any equipment stats updates since that `endCursor`.\n\nIf `hasNextPage` is `false`, no updates are readily available yet. Each stat type has a different refresh rate, but in general we'd suggest waiting a minimum of 5 seconds before requesting updates.",
        "operationId" : "getEquipmentStatsFeed",
        "parameters" : [ {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "equipmentIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of equipment IDs. Example: `equipmentIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "types",
          "in" : "query",
          "description" : "The type of equipment stat you want to query. Currently, you may only submit one type.\n\n- `engineRpm`: The revolutions per minute of the engine.\n- `fuelPercents`: The percent of fuel in the unit of equipment.\n- `obdEngineSeconds`: The number of seconds the engine has been running since it was new. This value is provided directly from on-board diagnostics.\n- `gatewayEngineSeconds`: An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG24 device is receiving power via APWR/AOPEN cable and an offset provided manually through the Samsara cloud dashboard.\n- `gatewayJ1939EngineSeconds`: An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG24 device is receiving power via J1939/CAT cable and an offset provided manually through the Samsara cloud dashboard.\n- `obdEngineStates`: The state of the engine read from on-board diagnostics. Can be `Off`, `On`, or `Idle`.\n- `gatewayEngineStates`: An approximation of engine state based on readings the AG24 receives from the aux/digio cable. Can be `Off` or `On`.\n- `gpsOdometerMeters`: An approximation of odometer reading based on GPS calculations since the AG24 was activated, and a manual odometer offset provided in the Samsara cloud dashboard.",
          "required" : true,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "string",
              "enum" : [ "gatewayEngineStates", "obdEngineStates", "fuelPercents", "engineRpm", "gatewayEngineSeconds", "obdEngineSeconds", "gatewayJ1939EngineSeconds", "gpsOdometerMeters" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The feed of equipment stats and pagination information",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EquipmentStatsListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/equipment/stats/history" : {
      "get" : {
        "tags" : [ "Equipment" ],
        "summary" : "Get historical equipment stats",
        "description" : "Returns historical equipment status during the given time range. This can be optionally filtered by tags or specific equipment IDs.",
        "operationId" : "getEquipmentStatsHistory",
        "parameters" : [ {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "equipmentIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of equipment IDs. Example: `equipmentIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "types",
          "in" : "query",
          "description" : "The type of equipment stat you want to query. Currently, you may only submit one type.\n\n- `engineRpm`: The revolutions per minute of the engine.\n- `fuelPercents`: The percent of fuel in the unit of equipment.\n- `obdEngineSeconds`: The number of seconds the engine has been running since it was new. This value is provided directly from on-board diagnostics.\n- `gatewayEngineSeconds`: An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG24 device is receiving power via APWR/AOPEN cable and an offset provided manually through the Samsara cloud dashboard.\n- `gatewayJ1939EngineSeconds`: An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG24 device is receiving power via J1939/CAT cable and an offset provided manually through the Samsara cloud dashboard.\n- `obdEngineStates`: The state of the engine read from on-board diagnostics. Can be `Off`, `On`, or `Idle`.\n- `gatewayEngineStates`: An approximation of engine state based on readings the AG24 receives from the aux/digio cable. Can be `Off` or `On`.\n- `gpsOdometerMeters`: An approximation of odometer reading based on GPS calculations since the AG24 was activated, and a manual odometer offset provided in the Samsara cloud dashboard.",
          "required" : true,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "string",
              "enum" : [ "gatewayEngineStates", "obdEngineStates", "fuelPercents", "engineRpm", "gatewayEngineSeconds", "obdEngineSeconds", "gatewayJ1939EngineSeconds", "gpsOdometerMeters" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Historical equipment stats and pagination information",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EquipmentStatsListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/equipment/{id}" : {
      "get" : {
        "tags" : [ "Equipment" ],
        "summary" : "Retrieve a unit of equipment",
        "description" : "Retrieves the unit of equipment with the given Samsara ID.",
        "operationId" : "getEquipment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Samsara ID of the Equipment.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The specified equipment object",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EquipmentResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/hos/clocks" : {
      "get" : {
        "tags" : [ "Hours of Service" ],
        "summary" : "Get HOS clocks",
        "description" : "Get the current HOS status for all drivers. Note that this includes inactive as well as active drivers. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/getFleetHosLogsSummary).",
        "operationId" : "getHosClocks",
        "parameters" : [ {
          "name" : "tagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "driverIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of driver IDs. Example: `driverIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 512,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of current HOS clock information for the specified drivers.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HosClocksResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/hos/daily-logs" : {
      "get" : {
        "tags" : [ "Preview APIs" ],
        "summary" : "[preview] Get all driver HOS daily logs.",
        "description" : "Get summarized daily Hours of Service charts for the specified drivers.\n\nThe time range for a log is defined by the `driver`'s `eldDayStartHour`. This value is configurable per driver.\n\nThe `startDate` and `endDate` parameters indicate the date range you'd like to retrieve daily logs for. A daily log will be returned if its `startTime` is on any of the days within in this date range (inclusive of `startDate` and `endDate`).\n\n**Note:** If data is still being uploaded from the Samsara Driver App, it may not be completely reflected in the response from this endpoint. The best practice is to wait a couple of days before querying this endpoint to make sure that all data from the Samsara Driver App has been uploaded.\n\nIf an issue or bug is experienced with any of these APIs, please submit an entry in the [feedback form](https://forms.gle/up7uFmJ8f2EKq8xm7).",
        "operationId" : "getHosDailyLogs",
        "parameters" : [ {
          "name" : "startDate",
          "in" : "query",
          "description" : " A start date in RFC 3339 format. This is a date only without an associated time. (Example: `2019-06-13`)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : " An end date in RFC 3339 format. This is a date only without an associated time. Must be greater than or equal to the start date. (Example: `2019-07-21`)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "driverIds",
          "in" : "query",
          "description" : " A filter on the data based on this comma-separated list of driver IDs and externalIds. Example: `driverIds=1234,5678,payroll:4841`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tagIds",
          "in" : "query",
          "description" : " A filter on the data based on this comma-separated list of driver tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : " A filter on the data based on this comma-separated list of driver parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "driverActivationStatus",
          "in" : "query",
          "description" : "If value is `deactivated`, only drivers that are deactivated will appear in the response. This parameter will default to `active` if not provided (fetching only active drivers).",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "active", "deactivated" ],
            "default" : "active"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HosDailyLogsGetHosDailyLogsResponseBody"
                },
                "example" : {
                  "data" : [ {
                    "distanceTraveled" : {
                      "driveDistanceMeters" : 796625.28,
                      "personalConveyanceDistanceMeters" : 27358.85,
                      "yardMoveDistanceMeters" : 1287.48
                    },
                    "driver" : {
                      "eldSettings" : {
                        "rulesets" : [ {
                          "break" : "Explosives/HazMat (on-duty)",
                          "cycle" : "Canada South Cycle 1 (70 hour / 7 day)",
                          "jurisdiction" : "AR",
                          "restart" : "36-hour Restart",
                          "shift" : "US Interstate Passenger"
                        }, {
                          "break" : "Explosives/HazMat (on-duty)",
                          "cycle" : "Canada South Cycle 1 (70 hour / 7 day)",
                          "jurisdiction" : "AR",
                          "restart" : "36-hour Restart",
                          "shift" : "US Interstate Passenger"
                        } ]
                      },
                      "externalIds" : {
                        "maintenanceId" : "250020",
                        "payrollId" : "ABFS18600"
                      },
                      "id" : "45646",
                      "name" : "Driver Bob",
                      "timezone" : "America/Los_Angeles"
                    },
                    "dutyStatusDurations" : {
                      "activeDurationMs" : 38825000,
                      "driveDurationMs" : 31970000,
                      "offDutyDurationMs" : 20555000,
                      "onDutyDurationMs" : 5423000,
                      "personalConveyanceDurationMs" : 4358000,
                      "sleeperBerthDurationMs" : 27020000,
                      "waitingTimeDurationMs" : 1560000,
                      "yardMoveDurationMs" : 1432000
                    },
                    "endTime" : "2019-06-20T19:08:25Z",
                    "logMetaData" : {
                      "certifiedAtTime" : "2020-01-01T06:00:00Z",
                      "isCertified" : false,
                      "shippingDocs" : "Delivery 123, chips and soda",
                      "trailerNames" : [ "10293", "Trailer ID 1" ],
                      "vehicles" : [ {
                        "externalIds" : {
                          "maintenanceId" : "250020",
                          "payrollId" : "ABFS18600"
                        },
                        "id" : "494123",
                        "name" : "Fleet Truck #1"
                      }, {
                        "externalIds" : {
                          "maintenanceId" : "250020",
                          "payrollId" : "ABFS18600"
                        },
                        "id" : "494123",
                        "name" : "Fleet Truck #1"
                      }, {
                        "externalIds" : {
                          "maintenanceId" : "250020",
                          "payrollId" : "ABFS18600"
                        },
                        "id" : "494123",
                        "name" : "Fleet Truck #1"
                      } ]
                    },
                    "pendingDutyStatusDurations" : {
                      "activeDurationMs" : 38825000,
                      "driveDurationMs" : 31970000,
                      "offDutyDurationMs" : 20555000,
                      "onDutyDurationMs" : 5423000,
                      "personalConveyanceDurationMs" : 4358000,
                      "sleeperBerthDurationMs" : 27020000,
                      "waitingTimeDurationMs" : 1560000,
                      "yardMoveDurationMs" : 1432000
                    },
                    "startTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "distanceTraveled" : {
                      "driveDistanceMeters" : 796625.28,
                      "personalConveyanceDistanceMeters" : 27358.85,
                      "yardMoveDistanceMeters" : 1287.48
                    },
                    "driver" : {
                      "eldSettings" : {
                        "rulesets" : [ {
                          "break" : "Explosives/HazMat (on-duty)",
                          "cycle" : "Canada South Cycle 1 (70 hour / 7 day)",
                          "jurisdiction" : "AR",
                          "restart" : "36-hour Restart",
                          "shift" : "US Interstate Passenger"
                        }, {
                          "break" : "Explosives/HazMat (on-duty)",
                          "cycle" : "Canada South Cycle 1 (70 hour / 7 day)",
                          "jurisdiction" : "AR",
                          "restart" : "36-hour Restart",
                          "shift" : "US Interstate Passenger"
                        } ]
                      },
                      "externalIds" : {
                        "maintenanceId" : "250020",
                        "payrollId" : "ABFS18600"
                      },
                      "id" : "45646",
                      "name" : "Driver Bob",
                      "timezone" : "America/Los_Angeles"
                    },
                    "dutyStatusDurations" : {
                      "activeDurationMs" : 38825000,
                      "driveDurationMs" : 31970000,
                      "offDutyDurationMs" : 20555000,
                      "onDutyDurationMs" : 5423000,
                      "personalConveyanceDurationMs" : 4358000,
                      "sleeperBerthDurationMs" : 27020000,
                      "waitingTimeDurationMs" : 1560000,
                      "yardMoveDurationMs" : 1432000
                    },
                    "endTime" : "2019-06-20T19:08:25Z",
                    "logMetaData" : {
                      "certifiedAtTime" : "2020-01-01T06:00:00Z",
                      "isCertified" : false,
                      "shippingDocs" : "Delivery 123, chips and soda",
                      "trailerNames" : [ "10293", "Trailer ID 1" ],
                      "vehicles" : [ {
                        "externalIds" : {
                          "maintenanceId" : "250020",
                          "payrollId" : "ABFS18600"
                        },
                        "id" : "494123",
                        "name" : "Fleet Truck #1"
                      }, {
                        "externalIds" : {
                          "maintenanceId" : "250020",
                          "payrollId" : "ABFS18600"
                        },
                        "id" : "494123",
                        "name" : "Fleet Truck #1"
                      }, {
                        "externalIds" : {
                          "maintenanceId" : "250020",
                          "payrollId" : "ABFS18600"
                        },
                        "id" : "494123",
                        "name" : "Fleet Truck #1"
                      } ]
                    },
                    "pendingDutyStatusDurations" : {
                      "activeDurationMs" : 38825000,
                      "driveDurationMs" : 31970000,
                      "offDutyDurationMs" : 20555000,
                      "onDutyDurationMs" : 5423000,
                      "personalConveyanceDurationMs" : 4358000,
                      "sleeperBerthDurationMs" : 27020000,
                      "waitingTimeDurationMs" : 1560000,
                      "yardMoveDurationMs" : 1432000
                    },
                    "startTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "distanceTraveled" : {
                      "driveDistanceMeters" : 796625.28,
                      "personalConveyanceDistanceMeters" : 27358.85,
                      "yardMoveDistanceMeters" : 1287.48
                    },
                    "driver" : {
                      "eldSettings" : {
                        "rulesets" : [ {
                          "break" : "Explosives/HazMat (on-duty)",
                          "cycle" : "Canada South Cycle 1 (70 hour / 7 day)",
                          "jurisdiction" : "AR",
                          "restart" : "36-hour Restart",
                          "shift" : "US Interstate Passenger"
                        }, {
                          "break" : "Explosives/HazMat (on-duty)",
                          "cycle" : "Canada South Cycle 1 (70 hour / 7 day)",
                          "jurisdiction" : "AR",
                          "restart" : "36-hour Restart",
                          "shift" : "US Interstate Passenger"
                        } ]
                      },
                      "externalIds" : {
                        "maintenanceId" : "250020",
                        "payrollId" : "ABFS18600"
                      },
                      "id" : "45646",
                      "name" : "Driver Bob",
                      "timezone" : "America/Los_Angeles"
                    },
                    "dutyStatusDurations" : {
                      "activeDurationMs" : 38825000,
                      "driveDurationMs" : 31970000,
                      "offDutyDurationMs" : 20555000,
                      "onDutyDurationMs" : 5423000,
                      "personalConveyanceDurationMs" : 4358000,
                      "sleeperBerthDurationMs" : 27020000,
                      "waitingTimeDurationMs" : 1560000,
                      "yardMoveDurationMs" : 1432000
                    },
                    "endTime" : "2019-06-20T19:08:25Z",
                    "logMetaData" : {
                      "certifiedAtTime" : "2020-01-01T06:00:00Z",
                      "isCertified" : false,
                      "shippingDocs" : "Delivery 123, chips and soda",
                      "trailerNames" : [ "10293", "Trailer ID 1" ],
                      "vehicles" : [ {
                        "externalIds" : {
                          "maintenanceId" : "250020",
                          "payrollId" : "ABFS18600"
                        },
                        "id" : "494123",
                        "name" : "Fleet Truck #1"
                      }, {
                        "externalIds" : {
                          "maintenanceId" : "250020",
                          "payrollId" : "ABFS18600"
                        },
                        "id" : "494123",
                        "name" : "Fleet Truck #1"
                      }, {
                        "externalIds" : {
                          "maintenanceId" : "250020",
                          "payrollId" : "ABFS18600"
                        },
                        "id" : "494123",
                        "name" : "Fleet Truck #1"
                      } ]
                    },
                    "pendingDutyStatusDurations" : {
                      "activeDurationMs" : 38825000,
                      "driveDurationMs" : 31970000,
                      "offDutyDurationMs" : 20555000,
                      "onDutyDurationMs" : 5423000,
                      "personalConveyanceDurationMs" : 4358000,
                      "sleeperBerthDurationMs" : 27020000,
                      "waitingTimeDurationMs" : 1560000,
                      "yardMoveDurationMs" : 1432000
                    },
                    "startTime" : "2019-06-13T19:08:25Z"
                  } ],
                  "pagination" : {
                    "endCursor" : "MjkY",
                    "hasNextPage" : true
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HosDailyLogsGetHosDailyLogsNotFoundResponseBody"
                },
                "example" : {
                  "message" : "Object not found.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HosDailyLogsGetHosDailyLogsInternalErrorResponseBody"
                },
                "example" : {
                  "message" : "Failed to execute GraphQL query.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HosDailyLogsGetHosDailyLogsNotImplementedResponseBody"
                },
                "example" : {
                  "message" : "Not implemented.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          },
          "default" : {
            "description" : "Bad Request response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HosDailyLogsGetHosDailyLogsBadRequestResponseBody"
                },
                "example" : {
                  "message" : "Invalid value for parameter.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/hos/logs" : {
      "get" : {
        "tags" : [ "Hours of Service" ],
        "summary" : "Get HOS logs",
        "description" : "Returns HOS logs between a given `startTime` and `endTime`. The logs can be further filtered using tags or by providing a list of driver IDs (including external IDs). The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/getFleetHosLogs).\n\n**Note:** If data is still being uploaded from the Samsara Driver App, it may not be completely reflected in the response from this endpoint. The best practice is to wait a couple of days before querying this endpoint to make sure that all data from the Samsara Driver App has been uploaded.",
        "operationId" : "getHosLogs",
        "parameters" : [ {
          "name" : "tagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "driverIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of driver IDs. Example: `driverIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of the last known HOS log entries for the specified drivers.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HosLogsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/routes" : {
      "post" : {
        "tags" : [ "Beta APIs" ],
        "summary" : "[beta] Create a route",
        "description" : "Create a route",
        "operationId" : "createRoute",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RoutesCreateRouteRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoutesCreateRouteResponseBody"
                },
                "example" : {
                  "driver" : {
                    "externalIds" : {
                      "maintenanceId" : "250020",
                      "payrollId" : "ABFS18600"
                    },
                    "id" : "45646",
                    "name" : "Driver Bob"
                  },
                  "externalIds" : {
                    "maintenanceId" : "250020",
                    "payrollId" : "ABFS18600"
                  },
                  "id" : "342341",
                  "name" : "Bid 123",
                  "notes" : "These are my notes",
                  "scheduledRouteEndTime" : "2019-06-13T19:08:25Z",
                  "scheduledRouteStartTime" : "2019-06-13T19:08:25Z",
                  "settings" : {
                    "routeCompletionCondition" : "arriveLastStop",
                    "routeStartingCondition" : "departFirstStop"
                  },
                  "stops" : [ {
                    "address" : {
                      "externalIds" : {
                        "maintenanceId" : "250020",
                        "payrollId" : "ABFS18600"
                      },
                      "id" : "494123",
                      "name" : "Company Office #1"
                    },
                    "externalIds" : {
                      "maintenanceId" : "250020",
                      "payrollId" : "ABFS18600"
                    },
                    "id" : "324231",
                    "name" : "Stop #1",
                    "notes" : "These are my notes",
                    "scheduledArrivalTime" : "2019-06-13T19:08:25Z",
                    "scheduledDepartureTime" : "2019-06-13T19:08:25Z",
                    "singleUseLocation" : {
                      "address" : "1234 Main St, San Jose, CA",
                      "latitude" : 123.456,
                      "longitude" : 37.459
                    }
                  }, {
                    "address" : {
                      "externalIds" : {
                        "maintenanceId" : "250020",
                        "payrollId" : "ABFS18600"
                      },
                      "id" : "494123",
                      "name" : "Company Office #1"
                    },
                    "externalIds" : {
                      "maintenanceId" : "250020",
                      "payrollId" : "ABFS18600"
                    },
                    "id" : "324231",
                    "name" : "Stop #1",
                    "notes" : "These are my notes",
                    "scheduledArrivalTime" : "2019-06-13T19:08:25Z",
                    "scheduledDepartureTime" : "2019-06-13T19:08:25Z",
                    "singleUseLocation" : {
                      "address" : "1234 Main St, San Jose, CA",
                      "latitude" : 123.456,
                      "longitude" : 37.459
                    }
                  }, {
                    "address" : {
                      "externalIds" : {
                        "maintenanceId" : "250020",
                        "payrollId" : "ABFS18600"
                      },
                      "id" : "494123",
                      "name" : "Company Office #1"
                    },
                    "externalIds" : {
                      "maintenanceId" : "250020",
                      "payrollId" : "ABFS18600"
                    },
                    "id" : "324231",
                    "name" : "Stop #1",
                    "notes" : "These are my notes",
                    "scheduledArrivalTime" : "2019-06-13T19:08:25Z",
                    "scheduledDepartureTime" : "2019-06-13T19:08:25Z",
                    "singleUseLocation" : {
                      "address" : "1234 Main St, San Jose, CA",
                      "latitude" : 123.456,
                      "longitude" : 37.459
                    }
                  } ],
                  "vehicle" : {
                    "externalIds" : {
                      "maintenanceId" : "250020",
                      "payrollId" : "ABFS18600"
                    },
                    "id" : "494123",
                    "name" : "Fleet Truck #1"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoutesCreateRouteNotFoundResponseBody"
                },
                "example" : {
                  "message" : "Object not found.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoutesCreateRouteInternalErrorResponseBody"
                },
                "example" : {
                  "message" : "Failed to execute GraphQL query.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoutesCreateRouteNotImplementedResponseBody"
                },
                "example" : {
                  "message" : "Not implemented.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          },
          "default" : {
            "description" : "Bad Request response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoutesCreateRouteBadRequestResponseBody"
                },
                "example" : {
                  "message" : "Invalid value for parameter.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "CreateRouteRequestBody"
      }
    },
    "/fleet/routes/audit-logs/feed" : {
      "get" : {
        "tags" : [ "Beta APIs" ],
        "summary" : "[beta] Get route updates",
        "description" : "Subscribes to a feed of immutable, append-only updates for routes. The initial request to this feed endpoint returns a cursor, which can be used on the next request to fetch updated routes that have had state changes since that request.",
        "operationId" : "getRouteFeed",
        "parameters" : [ {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the route updates that have occurred since the previous cursor.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/routes/{id}" : {
      "patch" : {
        "tags" : [ "Beta APIs" ],
        "summary" : "[beta] Update a route.",
        "description" : "Update a route.  **Note** this implementation of patch uses [the JSON merge patch](https://tools.ietf.org/html/rfc7396) proposed standard.\n This means that any fields included in the patch request will _overwrite_ fields which exist on the target resource.\n For arrays, this means any array included in the request will _replace_ the array that exists at the specified path, it will not _add_ to the existing array",
        "operationId" : "patchRoute",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the route to update",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RoutesPatchRouteRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoutesPatchRouteResponseBody"
                },
                "example" : {
                  "driver" : {
                    "externalIds" : {
                      "maintenanceId" : "250020",
                      "payrollId" : "ABFS18600"
                    },
                    "id" : "45646",
                    "name" : "Driver Bob"
                  },
                  "externalIds" : {
                    "maintenanceId" : "250020",
                    "payrollId" : "ABFS18600"
                  },
                  "id" : "342341",
                  "name" : "Bid 123",
                  "notes" : "These are my notes",
                  "scheduledRouteEndTime" : "2019-06-13T19:08:25Z",
                  "scheduledRouteStartTime" : "2019-06-13T19:08:25Z",
                  "settings" : {
                    "routeCompletionCondition" : "arriveLastStop",
                    "routeStartingCondition" : "departFirstStop"
                  },
                  "stops" : [ {
                    "address" : {
                      "externalIds" : {
                        "maintenanceId" : "250020",
                        "payrollId" : "ABFS18600"
                      },
                      "id" : "494123",
                      "name" : "Company Office #1"
                    },
                    "externalIds" : {
                      "maintenanceId" : "250020",
                      "payrollId" : "ABFS18600"
                    },
                    "id" : "324231",
                    "name" : "Stop #1",
                    "notes" : "These are my notes",
                    "scheduledArrivalTime" : "2019-06-13T19:08:25Z",
                    "scheduledDepartureTime" : "2019-06-13T19:08:25Z",
                    "singleUseLocation" : {
                      "address" : "1234 Main St, San Jose, CA",
                      "latitude" : 123.456,
                      "longitude" : 37.459
                    }
                  }, {
                    "address" : {
                      "externalIds" : {
                        "maintenanceId" : "250020",
                        "payrollId" : "ABFS18600"
                      },
                      "id" : "494123",
                      "name" : "Company Office #1"
                    },
                    "externalIds" : {
                      "maintenanceId" : "250020",
                      "payrollId" : "ABFS18600"
                    },
                    "id" : "324231",
                    "name" : "Stop #1",
                    "notes" : "These are my notes",
                    "scheduledArrivalTime" : "2019-06-13T19:08:25Z",
                    "scheduledDepartureTime" : "2019-06-13T19:08:25Z",
                    "singleUseLocation" : {
                      "address" : "1234 Main St, San Jose, CA",
                      "latitude" : 123.456,
                      "longitude" : 37.459
                    }
                  } ],
                  "vehicle" : {
                    "externalIds" : {
                      "maintenanceId" : "250020",
                      "payrollId" : "ABFS18600"
                    },
                    "id" : "494123",
                    "name" : "Fleet Truck #1"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoutesPatchRouteNotFoundResponseBody"
                },
                "example" : {
                  "message" : "Object not found.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoutesPatchRouteInternalErrorResponseBody"
                },
                "example" : {
                  "message" : "Failed to execute GraphQL query.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoutesPatchRouteNotImplementedResponseBody"
                },
                "example" : {
                  "message" : "Not implemented.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          },
          "default" : {
            "description" : "Bad Request response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoutesPatchRouteBadRequestResponseBody"
                },
                "example" : {
                  "message" : "Invalid value for parameter.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "PatchRouteRequestBody"
      }
    },
    "/fleet/safety-events" : {
      "get" : {
        "tags" : [ "Safety" ],
        "summary" : "List all safety events.",
        "description" : "Fetch safety events for the organization in a given time period.",
        "operationId" : "getSafetyEvents",
        "parameters" : [ {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "vehicleIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of safety events from given time period.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SafetyEventsListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/trailers" : {
      "get" : {
        "tags" : [ "Beta APIs" ],
        "summary" : "[beta] List all trailers.",
        "description" : "[beta] List all trailers.",
        "operationId" : "listTrailers",
        "parameters" : [ {
          "name" : "tagIds",
          "in" : "query",
          "description" : " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The limit for how many objects will be in the response.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 512,
            "minimum" : 1,
            "type" : "integer",
            "default" : 512
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrailersListTrailersResponseBody"
                },
                "example" : {
                  "data" : [ {
                    "enabledForMobile" : true,
                    "externalIds" : {
                      "maintenanceId" : "250020",
                      "payrollId" : "ABFS18600"
                    },
                    "id" : "494123",
                    "installedGateway" : {
                      "model" : "VG34",
                      "serial" : "GFRV-43N-VGX"
                    },
                    "licensePlate" : "7TYP290",
                    "name" : "Trailer-123",
                    "notes" : "These are my trailer notes",
                    "tags" : [ {
                      "id" : "3914",
                      "name" : "East Coast",
                      "parentTagId" : "4815"
                    }, {
                      "id" : "3914",
                      "name" : "East Coast",
                      "parentTagId" : "4815"
                    }, {
                      "id" : "3914",
                      "name" : "East Coast",
                      "parentTagId" : "4815"
                    }, {
                      "id" : "3914",
                      "name" : "East Coast",
                      "parentTagId" : "4815"
                    } ],
                    "trailerSerialNumber" : "8V8WD530FLN016251"
                  }, {
                    "enabledForMobile" : true,
                    "externalIds" : {
                      "maintenanceId" : "250020",
                      "payrollId" : "ABFS18600"
                    },
                    "id" : "494123",
                    "installedGateway" : {
                      "model" : "VG34",
                      "serial" : "GFRV-43N-VGX"
                    },
                    "licensePlate" : "7TYP290",
                    "name" : "Trailer-123",
                    "notes" : "These are my trailer notes",
                    "tags" : [ {
                      "id" : "3914",
                      "name" : "East Coast",
                      "parentTagId" : "4815"
                    }, {
                      "id" : "3914",
                      "name" : "East Coast",
                      "parentTagId" : "4815"
                    }, {
                      "id" : "3914",
                      "name" : "East Coast",
                      "parentTagId" : "4815"
                    }, {
                      "id" : "3914",
                      "name" : "East Coast",
                      "parentTagId" : "4815"
                    } ],
                    "trailerSerialNumber" : "8V8WD530FLN016251"
                  } ],
                  "pagination" : {
                    "endCursor" : "MjkY",
                    "hasNextPage" : true
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrailersListTrailersNotFoundResponseBody"
                },
                "example" : {
                  "message" : "Object not found.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrailersListTrailersInternalErrorResponseBody"
                },
                "example" : {
                  "message" : "Failed to execute GraphQL query.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrailersListTrailersNotImplementedResponseBody"
                },
                "example" : {
                  "message" : "Not implemented.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          },
          "default" : {
            "description" : "Bad Request response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrailersListTrailersBadRequestResponseBody"
                },
                "example" : {
                  "message" : "Invalid value for parameter.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/vehicles" : {
      "get" : {
        "tags" : [ "Vehicles" ],
        "summary" : "List all vehicles",
        "description" : "Returns a list of all vehicles.",
        "operationId" : "listVehicles",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 512,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of all vehicle objects, and pagination parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListVehiclesResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/vehicles/cameras/media/history" : {
      "get" : {
        "tags" : [ "Camera Media" ],
        "summary" : "Get all camera media",
        "description" : "Get all camera media",
        "operationId" : "getCameraMedia",
        "parameters" : [ {
          "name" : "startTime",
          "in" : "query",
          "description" : " A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : " An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vehicleIds",
          "in" : "query",
          "description" : " A filter on the data based on this comma-separated list of vehicle IDs and externalIds. Example: `vehicleIds=1234,5678,samsara.vin:1HGBH41JXMN109186`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tagIds",
          "in" : "query",
          "description" : " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CameraMediaGetCameraMediaResponseBody"
                },
                "example" : {
                  "data" : [ {
                    "cameras" : [ {
                      "id" : "230942",
                      "images" : [ {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      }, {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      }, {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      } ],
                      "name" : "GTTU-ASS-UXD",
                      "serial" : "CSS6-23A-HJF"
                    }, {
                      "id" : "230942",
                      "images" : [ {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      }, {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      }, {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      } ],
                      "name" : "GTTU-ASS-UXD",
                      "serial" : "CSS6-23A-HJF"
                    }, {
                      "id" : "230942",
                      "images" : [ {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      }, {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      }, {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      } ],
                      "name" : "GTTU-ASS-UXD",
                      "serial" : "CSS6-23A-HJF"
                    } ],
                    "externalIds" : {
                      "maintenanceId" : "250020",
                      "payrollId" : "ABFS18600"
                    },
                    "id" : "494123",
                    "name" : "H055494"
                  }, {
                    "cameras" : [ {
                      "id" : "230942",
                      "images" : [ {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      }, {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      }, {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      } ],
                      "name" : "GTTU-ASS-UXD",
                      "serial" : "CSS6-23A-HJF"
                    }, {
                      "id" : "230942",
                      "images" : [ {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      }, {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      }, {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      } ],
                      "name" : "GTTU-ASS-UXD",
                      "serial" : "CSS6-23A-HJF"
                    }, {
                      "id" : "230942",
                      "images" : [ {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      }, {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      }, {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      } ],
                      "name" : "GTTU-ASS-UXD",
                      "serial" : "CSS6-23A-HJF"
                    } ],
                    "externalIds" : {
                      "maintenanceId" : "250020",
                      "payrollId" : "ABFS18600"
                    },
                    "id" : "494123",
                    "name" : "H055494"
                  }, {
                    "cameras" : [ {
                      "id" : "230942",
                      "images" : [ {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      }, {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      }, {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      } ],
                      "name" : "GTTU-ASS-UXD",
                      "serial" : "CSS6-23A-HJF"
                    }, {
                      "id" : "230942",
                      "images" : [ {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      }, {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      }, {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      } ],
                      "name" : "GTTU-ASS-UXD",
                      "serial" : "CSS6-23A-HJF"
                    }, {
                      "id" : "230942",
                      "images" : [ {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      }, {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      }, {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      } ],
                      "name" : "GTTU-ASS-UXD",
                      "serial" : "CSS6-23A-HJF"
                    } ],
                    "externalIds" : {
                      "maintenanceId" : "250020",
                      "payrollId" : "ABFS18600"
                    },
                    "id" : "494123",
                    "name" : "H055494"
                  }, {
                    "cameras" : [ {
                      "id" : "230942",
                      "images" : [ {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      }, {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      }, {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      } ],
                      "name" : "GTTU-ASS-UXD",
                      "serial" : "CSS6-23A-HJF"
                    }, {
                      "id" : "230942",
                      "images" : [ {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      }, {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      }, {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      } ],
                      "name" : "GTTU-ASS-UXD",
                      "serial" : "CSS6-23A-HJF"
                    }, {
                      "id" : "230942",
                      "images" : [ {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      }, {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      }, {
                        "captureTime" : "2015-09-15T14:00:12-04:00",
                        "imageData" : [ {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        }, {
                          "cameraView" : "`frontFacing`",
                          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                          "urlExpiryTime" : "2019-06-13T19:08:25Z"
                        } ]
                      } ],
                      "name" : "GTTU-ASS-UXD",
                      "serial" : "CSS6-23A-HJF"
                    } ],
                    "externalIds" : {
                      "maintenanceId" : "250020",
                      "payrollId" : "ABFS18600"
                    },
                    "id" : "494123",
                    "name" : "H055494"
                  } ],
                  "pagination" : {
                    "endCursor" : "MjkY",
                    "hasNextPage" : true
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CameraMediaGetCameraMediaNotFoundResponseBody"
                },
                "example" : {
                  "message" : "Object not found.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CameraMediaGetCameraMediaInternalErrorResponseBody"
                },
                "example" : {
                  "message" : "Failed to execute GraphQL query.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CameraMediaGetCameraMediaNotImplementedResponseBody"
                },
                "example" : {
                  "message" : "Not implemented.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          },
          "default" : {
            "description" : "Bad Request response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CameraMediaGetCameraMediaBadRequestResponseBody"
                },
                "example" : {
                  "message" : "Invalid value for parameter.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/vehicles/driver-assignments" : {
      "get" : {
        "tags" : [ "Vehicle Driver Assignments" ],
        "summary" : "Get all vehicle driver assignments.",
        "description" : "Get all vehicle assignments for the requested drivers in the requested time range. The only type of assignment supported right now are assignments created through the driver app.",
        "operationId" : "getVehiclesDriverAssignments",
        "parameters" : [ {
          "name" : "startTime",
          "in" : "query",
          "description" : " A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00). The maximum allowed startTime-endTime range is 7 days.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : " An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00). The maximum allowed startTime-endTime range is 7 days.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vehicleIds",
          "in" : "query",
          "description" : " A filter on the data based on this comma-separated list of vehicle IDs and externalIds. Example: `vehicleIds=1234,5678,samsara.vin:1HGBH41JXMN109186`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tagIds",
          "in" : "query",
          "description" : " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsResponseBody"
                },
                "example" : {
                  "data" : [ {
                    "driverAssignments" : [ {
                      "assignmentType" : "driverApp",
                      "driver" : {
                        "externalIds" : {
                          "maintenanceId" : "250020",
                          "payrollId" : "ABFS18600"
                        },
                        "id" : "45646",
                        "name" : "Driver Bob"
                      },
                      "endTime" : "2019-06-13T19:08:25Z",
                      "isPassenger" : false,
                      "startTime" : "2019-06-13T19:08:25Z"
                    }, {
                      "assignmentType" : "driverApp",
                      "driver" : {
                        "externalIds" : {
                          "maintenanceId" : "250020",
                          "payrollId" : "ABFS18600"
                        },
                        "id" : "45646",
                        "name" : "Driver Bob"
                      },
                      "endTime" : "2019-06-13T19:08:25Z",
                      "isPassenger" : false,
                      "startTime" : "2019-06-13T19:08:25Z"
                    } ],
                    "externalIds" : {
                      "maintenanceId" : "250020",
                      "payrollId" : "ABFS18600"
                    },
                    "id" : "494123",
                    "name" : "Bus-123"
                  }, {
                    "driverAssignments" : [ {
                      "assignmentType" : "driverApp",
                      "driver" : {
                        "externalIds" : {
                          "maintenanceId" : "250020",
                          "payrollId" : "ABFS18600"
                        },
                        "id" : "45646",
                        "name" : "Driver Bob"
                      },
                      "endTime" : "2019-06-13T19:08:25Z",
                      "isPassenger" : false,
                      "startTime" : "2019-06-13T19:08:25Z"
                    }, {
                      "assignmentType" : "driverApp",
                      "driver" : {
                        "externalIds" : {
                          "maintenanceId" : "250020",
                          "payrollId" : "ABFS18600"
                        },
                        "id" : "45646",
                        "name" : "Driver Bob"
                      },
                      "endTime" : "2019-06-13T19:08:25Z",
                      "isPassenger" : false,
                      "startTime" : "2019-06-13T19:08:25Z"
                    } ],
                    "externalIds" : {
                      "maintenanceId" : "250020",
                      "payrollId" : "ABFS18600"
                    },
                    "id" : "494123",
                    "name" : "Bus-123"
                  } ],
                  "pagination" : {
                    "endCursor" : "MjkY",
                    "hasNextPage" : true
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsNotFoundResponseBody"
                },
                "example" : {
                  "message" : "Object not found.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsInternalErrorResponseBody"
                },
                "example" : {
                  "message" : "Failed to execute GraphQL query.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsNotImplementedResponseBody"
                },
                "example" : {
                  "message" : "Not implemented.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          },
          "default" : {
            "description" : "Bad Request response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsBadRequestResponseBody"
                },
                "example" : {
                  "message" : "Invalid value for parameter.",
                  "requestId" : "8916e1c1"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/vehicles/locations" : {
      "get" : {
        "tags" : [ "Vehicle Locations" ],
        "summary" : "Locations snapshot",
        "description" : "***NOTE: The Vehicle Locations API is an older API that does not combine GPS data with onboard diagnostics. Try our new [Vehicle Stats API](#operation/getVehicleStats) instead.***\n\nReturns the last known location of all vehicles at the given `time`. If no `time` is specified, the current time is used. This can be optionally filtered by tags or specific vehicle IDs.\n\nRelated guide: [Vehicle Locations](https://developers.samsara.com/docs/vehicle-locations)",
        "operationId" : "getVehicleLocations",
        "parameters" : [ {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "time",
          "in" : "query",
          "description" : "A filter on the data that returns the last known data points with timestamps less than or equal to this value. Defaults to now if not provided. Must be a string in RFC 3339 format. Millisecond precision and timezones are supported. (Example: `2020-01-27T07:06:25Z`).",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "vehicleIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of the most recent locations for the specified vehicles.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VehicleLocationsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/vehicles/locations/feed" : {
      "get" : {
        "tags" : [ "Vehicle Locations" ],
        "summary" : "Locations feed",
        "description" : "***NOTE: The Vehicle Locations API is an older API that does not combine GPS data with onboard diagnostics. Try our new [Vehicle Stats API](#operation/getVehicleStatsFeed) instead.***\n\nFollow a continuous feed of all vehicle locations from Samsara Vehicle Gateways.\n\nYour first call to this endpoint will provide you with the most recent location for each vehicle and a `pagination` object that contains an `endCursor`.\n\nYou can provide the `endCursor` to the `after` parameter of this endpoint to get location updates since that `endCursor`. \n\nIf `hasNextPage` is `false`, no updates are readily available yet. We'd suggest waiting a minimum of 5 seconds before requesting updates.\n\nRelated guide: [Vehicle Locations](https://developers.samsara.com/docs/vehicle-locations)",
        "operationId" : "getVehicleLocationsFeed",
        "parameters" : [ {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "vehicleIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of locations events for the specified vehicles.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VehicleLocationsListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/vehicles/locations/history" : {
      "get" : {
        "tags" : [ "Vehicle Locations" ],
        "summary" : "Historical locations",
        "description" : "***NOTE: The Vehicle Locations API is an older API that does not combine GPS data with onboard diagnostics. Try our new [Vehicle Stats API](#operation/getVehicleStatsHistory) instead.***\n\nReturns all known vehicle locations during the given time range. This can be optionally filtered by tags or specific vehicle IDs.\n\nRelated guide: [Vehicle Locations](https://developers.samsara.com/docs/vehicle-locations)",
        "operationId" : "getVehicleLocationsHistory",
        "parameters" : [ {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "vehicleIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of all locations for the specified vehicles and time range.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VehicleLocationsListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/vehicles/stats" : {
      "get" : {
        "tags" : [ "Vehicle Stats" ],
        "summary" : "Stats snapshot",
        "description" : "Returns the last known stats of all vehicles at the given `time`. If no `time` is specified, the current time is used.\n\nRelated guide: [Telematics](https://developers.samsara.com/docs/vehicle-stats)",
        "operationId" : "getVehicleStats",
        "parameters" : [ {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "time",
          "in" : "query",
          "description" : "A filter on the data that returns the last known data points with timestamps less than or equal to this value. Defaults to now if not provided. Must be a string in RFC 3339 format. Millisecond precision and timezones are supported. (Example: `2020-01-27T07:06:25Z`).",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "vehicleIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "types",
          "in" : "query",
          "description" : "The stat types you want this endpoint to return information on. See also the [Vehicle Stats](https://developers.samsara.com/docs/vehicle-stats#query-parameters) guide for more details.\n\nYou may list ***up to 3*** types using comma-separated format. For example: `types=gps,engineStates,obdOdometerMeters`.\n\n*Note:* `auxInput3`-`auxInput10` count as a single type against the limit of 3. For example, you could list `types=engineStates,obdOdometerMeters,auxInput3,auxInput4` because `auxInput3` and `auxInput4` count as a single stat type. `auxInput1` and `auxInput2` still count as their own individual types.\n\n- `ambientAirTemperatureMilliC`: The ambient air temperature reading in millidegree Celsius.\n- `auxInput1`-`auxInput10`: Stat events from the [auxiliary inputs](https://kb.samsara.com/hc/en-us/articles/232232368-Auxiliary-Inputs) for the vehicle.\n- `barometricPressurePa`: The barometric pressure reading in pascals.\n- `batteryMilliVolts`: The vehicle battery voltage reading.\n- `defLevelMilliPercent`: The Diesel Exhaust Fluid (DEF) level in milli percentage points (e.g. `99001`, `49999`, etc).\n- `ecuSpeedMph`: The speed of the engine in miles per hour according to the ECU.\n- `engineCoolantTemperatureMilliC`: The engine coolant temperature reading in millidegree Celsius.\n- `engineLoadPercent`: The engine load in percentage points (e.g. `99`, `50`, etc).\n- `engineOilPressureKPa`: The engine oil pressure reading in kilopascals.\n- `engineRpm`: The revolutions per minute of the engine.\n- `engineStates`: The state of the engine (`Off`, `On`, `Idle`).\n- `faultCodes`: The diagnostic fault codes for the vehicle.\n- `fuelPercents`: The engine fuel level in percentage points (e.g. `99`, `50`, etc).\n- `gps`: GPS data including lat/long, heading, speed, and a reverse geocoded address.\n- `gpsDistanceMeters`: The distance the vehicle has traveled since the gateway was installed based on GPS calculations.\n- `gpsOdometerMeters`: Odometer reading provided by GPS calculations when OBD odometer cannot be pulled automatically. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the [PATCH /fleet/vehicles/{id}](#operation/updateVehicle) endpoint or through the [cloud dasbhoard](https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading). Odometer readings that are manually set will update as GPS trip data is gathered. Try combining with `obdOdometerMeters`.\n- `intakeManifoldTemperatureMilliC`: The intake manifold temperature reading in millidegree Celsius.\n- `nfcCardScans`: ID card scans.\n- `obdEngineSeconds`: The cumulative number of seconds the engine has run according to onboard diagnostics.\n- `obdOdometerMeters`: The odometer reading according to onboard diagnostics. If Samsara does not have diagnostic coverage for a particular vehicle, the value for this stat type will be omitted. Try combining with `gpsOdometerMeters`. \n- `syntheticEngineSeconds`: Data for the synthetic engine seconds for the vehicle.",
          "required" : true,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ambientAirTemperatureMilliC", "auxInput1", "auxInput2", "auxInput3", "auxInput4", "auxInput5", "auxInput6", "auxInput7", "auxInput8", "auxInput9", "auxInput10", "barometricPressurePa", "batteryMilliVolts", "defLevelMilliPercent", "ecuSpeedMph", "engineCoolantTemperatureMilliC", "engineLoadPercent", "engineOilPressureKPa", "engineRpm", "engineStates", "faultCodes", "fuelPercents", "gps", "gpsDistanceMeters", "gpsOdometerMeters", "intakeManifoldTemperatureMilliC", "nfcCardScans", "obdEngineSeconds", "obdOdometerMeters", "syntheticEngineSeconds" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Vehicle stats snapshot",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VehicleStatsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/vehicles/stats/feed" : {
      "get" : {
        "tags" : [ "Vehicle Stats" ],
        "summary" : "Stats feed",
        "description" : "Follow a feed of vehicle stats. \n\nYour first call to this endpoint will provide you with the most recent stats for each vehicle and an `endCursor`.\n\nYou can the provide the `endCursor` value to the `after` query parameter to get all updates since the last call you made.\n\nIf `hasNextPage` is `false`, no new data is immediately available. You should wait a minimum of 5 seconds making a subsequent request.\n\nRelated guide: [Vehicle Stats](https://developers.samsara.com/docs/vehicle-stats)",
        "operationId" : "getVehicleStatsFeed",
        "parameters" : [ {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "vehicleIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "types",
          "in" : "query",
          "description" : "The stat types you want this endpoint to return information on. See also the [Vehicle Stats](https://developers.samsara.com/docs/vehicle-stats#query-parameters) guide for more details.\n\nYou may list ***up to 3*** types using comma-separated format. For example: `types=gps,engineStates,obdOdometerMeters`.\n\n*Note:* `auxInput3`-`auxInput10` count as a single type against the limit of 3. For example, you could list `types=engineStates,obdOdometerMeters,auxInput3,auxInput4` because `auxInput3` and `auxInput4` count as a single stat type. `auxInput1` and `auxInput2` still count as their own individual types.\n\n- `ambientAirTemperatureMilliC`: The ambient air temperature reading in millidegree Celsius.\n- `auxInput1`-`auxInput10`: Stat events from the [auxiliary inputs](https://kb.samsara.com/hc/en-us/articles/232232368-Auxiliary-Inputs) for the vehicle.\n- `barometricPressurePa`: The barometric pressure reading in pascals.\n- `batteryMilliVolts`: The vehicle battery voltage reading.\n- `defLevelMilliPercent`: The Diesel Exhaust Fluid (DEF) level in milli percentage points (e.g. `99001`, `49999`, etc).\n- `ecuSpeedMph`: The speed of the engine in miles per hour according to the ECU.\n- `engineCoolantTemperatureMilliC`: The engine coolant temperature reading in millidegree Celsius.\n- `engineLoadPercent`: The engine load in percentage points (e.g. `99`, `50`, etc).\n- `engineOilPressureKPa`: The engine oil pressure reading in kilopascals.\n- `engineRpm`: The revolutions per minute of the engine.\n- `engineStates`: The state of the engine (`Off`, `On`, `Idle`).\n- `faultCodes`: The diagnostic fault codes for the vehicle.\n- `fuelPercents`: The engine fuel level in percentage points (e.g. `99`, `50`, etc).\n- `gps`: GPS data including lat/long, heading, speed, and a reverse geocoded address.\n- `gpsDistanceMeters`: The distance the vehicle has traveled since the gateway was installed based on GPS calculations.\n- `gpsOdometerMeters`: Odometer reading provided by GPS calculations when OBD odometer cannot be pulled automatically. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the [PATCH /fleet/vehicles/{id}](#operation/updateVehicle) endpoint or through the [cloud dasbhoard](https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading). Odometer readings that are manually set will update as GPS trip data is gathered. Try combining with `obdOdometerMeters`.\n- `intakeManifoldTemperatureMilliC`: The intake manifold temperature reading in millidegree Celsius.\n- `nfcCardScans`: ID card scans.\n- `obdEngineSeconds`: The cumulative number of seconds the engine has run according to onboard diagnostics.\n- `obdOdometerMeters`: The odometer reading according to onboard diagnostics. If Samsara does not have diagnostic coverage for a particular vehicle, the value for this stat type will be omitted. Try combining with `gpsOdometerMeters`. \n- `syntheticEngineSeconds`: Data for the synthetic engine seconds for the vehicle.",
          "required" : true,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ambientAirTemperatureMilliC", "auxInput1", "auxInput2", "auxInput3", "auxInput4", "auxInput5", "auxInput6", "auxInput7", "auxInput8", "auxInput9", "auxInput10", "barometricPressurePa", "batteryMilliVolts", "defLevelMilliPercent", "ecuSpeedMph", "engineCoolantTemperatureMilliC", "engineLoadPercent", "engineOilPressureKPa", "engineRpm", "engineStates", "faultCodes", "fuelPercents", "gps", "gpsDistanceMeters", "gpsOdometerMeters", "intakeManifoldTemperatureMilliC", "nfcCardScans", "obdEngineSeconds", "obdOdometerMeters", "syntheticEngineSeconds" ]
            }
          }
        }, {
          "name" : "decorations",
          "in" : "query",
          "description" : "Decorations to add to the primary stats listed in the `types` parameter. For example, if you wish to know the vehicle's location whenever the engine changes state, you may set `types=engineStates&decorations=gps`.\n\nYou may list ***up to 2*** decorations using comma-separated format. If multiple stats are listed in the `types` parameter, the decorations will be added to each one. For example: `types=engineStates,obdOdometerMeters,faultCodes&decorations=gps,fuelPercents` will list GPS and fuel decorations for each engine state change, each odometer reading, and each fault code. See the [Vehicle Stats](https://developers.samsara.com/docs/vehicle-stats#query-parameters) guide for more details.\n\nNote that decorations may significantly increase the response payload size.\n\n- `ambientAirTemperatureMilliC`: The ambient air temperature reading in millidegree Celsius.\n- `auxInput1`-`auxInput10`: Stat events from the [auxiliary inputs](https://kb.samsara.com/hc/en-us/articles/232232368-Auxiliary-Inputs) for the vehicle.\n- `batteryMilliVolts`: The vehicle battery voltage reading.\n- `barometricPressurePa`: The barometric pressure reading in pascals.\n- `ecuSpeedMph`: The speed of the engine in miles per hour according to the ECU.\n- `engineCoolantTemperatureMilliC`: The engine coolant temperature reading in millidegree Celsius.\n- `engineOilPressureKPa`: The engine oil pressure reading in kilopascals.\n- `engineLoadPercent`: The engine load in percentage points (e.g. `99`, `50`, etc).\n- `engineRpm`: The revolutions per minute of the engine.\n- `engineStates`: The state of the engine (`Off`, `On`, `Idle`).\n- `faultCodes`: The diagnostic fault codes for the vehicle.\n- `fuelPercents`: The engine fuel level in percentage points (e.g. `99`, `50`, etc).\n- `gps`: GPS data including lat/long, heading, speed, and a reverse geocoded address.\n- `gpsDistanceMeters`: The distance the vehicle has traveled since the gateway was installed based on GPS calculations.\n- `intakeManifoldTemperatureMilliC`: The intake manifold temperature reading in millidegree Celsius.\n- `nfcCardScans`: ID card scans.\n- `obdEngineSeconds`: The cumulative number of seconds the engine has run according to onboard diagnostics.\n- `obdOdometerMeters`: The odometer reading according to onboard diagnostics. If Samsara does not have diagnostic coverage for a particular vehicle, the value for this stat type will be omitted.\n- `syntheticEngineSeconds`: Data for the synthetic engine seconds for the vehicle.  ",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ambientAirTemperatureMilliC", "auxInput1", "auxInput2", "auxInput3", "auxInput4", "auxInput5", "auxInput6", "auxInput7", "auxInput8", "auxInput9", "auxInput10", "batteryMilliVolts", "barometricPressurePa", "defLevelMilliPercent", "ecuSpeedMph", "engineCoolantTemperatureMilliC", "engineLoadPercent", "engineOilPressureKPa", "engineRpm", "engineStates", "faultCodes", "fuelPercents", "gps", "gpsDistanceMeters", "intakeManifoldTemperatureMilliC", "nfcCardScans", "obdEngineSeconds", "obdOdometerMeters" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of stat events for the specified vehicles and stat types.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VehicleStatsListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/vehicles/stats/history" : {
      "get" : {
        "tags" : [ "Vehicle Stats" ],
        "summary" : "Historical stats",
        "description" : "Returns vehicle stats during the given time range for all vehicles. This can be optionally filtered by tags or specific vehicle IDs.\n\nRelated guide: [Vehicle Stats](https://developers.samsara.com/docs/vehicle-stats)",
        "operationId" : "getVehicleStatsHistory",
        "parameters" : [ {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "vehicleIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "types",
          "in" : "query",
          "description" : "The stat types you want this endpoint to return information on. See also the [Vehicle Stats](https://developers.samsara.com/docs/vehicle-stats#query-parameters) guide for more details.\n\nYou may list ***up to 3*** types using comma-separated format. For example: `types=gps,engineStates,obdOdometerMeters`.\n\n*Note:* `auxInput3`-`auxInput10` count as a single type against the limit of 3. For example, you could list `types=engineStates,obdOdometerMeters,auxInput3,auxInput4` because `auxInput3` and `auxInput4` count as a single stat type. `auxInput1` and `auxInput2` still count as their own individual types.\n\n- `ambientAirTemperatureMilliC`: The ambient air temperature reading in millidegree Celsius.\n- `auxInput1`-`auxInput10`: Stat events from the [auxiliary inputs](https://kb.samsara.com/hc/en-us/articles/232232368-Auxiliary-Inputs) for the vehicle.\n- `barometricPressurePa`: The barometric pressure reading in pascals.\n- `batteryMilliVolts`: The vehicle battery voltage reading.\n- `defLevelMilliPercent`: The Diesel Exhaust Fluid (DEF) level in milli percentage points (e.g. `99001`, `49999`, etc).\n- `ecuSpeedMph`: The speed of the engine in miles per hour according to the ECU.\n- `engineCoolantTemperatureMilliC`: The engine coolant temperature reading in millidegree Celsius.\n- `engineLoadPercent`: The engine load in percentage points (e.g. `99`, `50`, etc).\n- `engineOilPressureKPa`: The engine oil pressure reading in kilopascals.\n- `engineRpm`: The revolutions per minute of the engine.\n- `engineStates`: The state of the engine (`Off`, `On`, `Idle`).\n- `faultCodes`: The diagnostic fault codes for the vehicle.\n- `fuelPercents`: The engine fuel level in percentage points (e.g. `99`, `50`, etc).\n- `gps`: GPS data including lat/long, heading, speed, and a reverse geocoded address.\n- `gpsDistanceMeters`: The distance the vehicle has traveled since the gateway was installed based on GPS calculations.\n- `gpsOdometerMeters`: Odometer reading provided by GPS calculations when OBD odometer cannot be pulled automatically. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the [PATCH /fleet/vehicles/{id}](#operation/updateVehicle) endpoint or through the [cloud dasbhoard](https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading). Odometer readings that are manually set will update as GPS trip data is gathered. Try combining with `obdOdometerMeters`.\n- `intakeManifoldTemperatureMilliC`: The intake manifold temperature reading in millidegree Celsius.\n- `nfcCardScans`: ID card scans.\n- `obdEngineSeconds`: The cumulative number of seconds the engine has run according to onboard diagnostics.\n- `obdOdometerMeters`: The odometer reading according to onboard diagnostics. If Samsara does not have diagnostic coverage for a particular vehicle, the value for this stat type will be omitted. Try combining with `gpsOdometerMeters`. \n- `syntheticEngineSeconds`: Data for the synthetic engine seconds for the vehicle.",
          "required" : true,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ambientAirTemperatureMilliC", "auxInput1", "auxInput2", "auxInput3", "auxInput4", "auxInput5", "auxInput6", "auxInput7", "auxInput8", "auxInput9", "auxInput10", "barometricPressurePa", "batteryMilliVolts", "defLevelMilliPercent", "ecuSpeedMph", "engineCoolantTemperatureMilliC", "engineLoadPercent", "engineOilPressureKPa", "engineRpm", "engineStates", "faultCodes", "fuelPercents", "gps", "gpsDistanceMeters", "gpsOdometerMeters", "intakeManifoldTemperatureMilliC", "nfcCardScans", "obdEngineSeconds", "obdOdometerMeters", "syntheticEngineSeconds" ]
            }
          }
        }, {
          "name" : "decorations",
          "in" : "query",
          "description" : "Decorations to add to the primary stats listed in the `types` parameter. For example, if you wish to know the vehicle's location whenever the engine changes state, you may set `types=engineStates&decorations=gps`.\n\nYou may list ***up to 2*** decorations using comma-separated format. If multiple stats are listed in the `types` parameter, the decorations will be added to each one. For example: `types=engineStates,obdOdometerMeters,faultCodes&decorations=gps,fuelPercents` will list GPS and fuel decorations for each engine state change, each odometer reading, and each fault code. See the [Vehicle Stats](https://developers.samsara.com/docs/vehicle-stats#query-parameters) guide for more details.\n\nNote that decorations may significantly increase the response payload size.\n\n- `ambientAirTemperatureMilliC`: The ambient air temperature reading in millidegree Celsius.\n- `auxInput1`-`auxInput10`: Stat events from the [auxiliary inputs](https://kb.samsara.com/hc/en-us/articles/232232368-Auxiliary-Inputs) for the vehicle.\n- `batteryMilliVolts`: The vehicle battery voltage reading.\n- `barometricPressurePa`: The barometric pressure reading in pascals.\n- `ecuSpeedMph`: The speed of the engine in miles per hour according to the ECU.\n- `engineCoolantTemperatureMilliC`: The engine coolant temperature reading in millidegree Celsius.\n- `engineOilPressureKPa`: The engine oil pressure reading in kilopascals.\n- `engineLoadPercent`: The engine load in percentage points (e.g. `99`, `50`, etc).\n- `engineRpm`: The revolutions per minute of the engine.\n- `engineStates`: The state of the engine (`Off`, `On`, `Idle`).\n- `faultCodes`: The diagnostic fault codes for the vehicle.\n- `fuelPercents`: The engine fuel level in percentage points (e.g. `99`, `50`, etc).\n- `gps`: GPS data including lat/long, heading, speed, and a reverse geocoded address.\n- `gpsDistanceMeters`: The distance the vehicle has traveled since the gateway was installed based on GPS calculations.\n- `intakeManifoldTemperatureMilliC`: The intake manifold temperature reading in millidegree Celsius.\n- `nfcCardScans`: ID card scans.\n- `obdEngineSeconds`: The cumulative number of seconds the engine has run according to onboard diagnostics.\n- `obdOdometerMeters`: The odometer reading according to onboard diagnostics. If Samsara does not have diagnostic coverage for a particular vehicle, the value for this stat type will be omitted.\n- `syntheticEngineSeconds`: Data for the synthetic engine seconds for the vehicle.  ",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ambientAirTemperatureMilliC", "auxInput1", "auxInput2", "auxInput3", "auxInput4", "auxInput5", "auxInput6", "auxInput7", "auxInput8", "auxInput9", "auxInput10", "batteryMilliVolts", "barometricPressurePa", "defLevelMilliPercent", "ecuSpeedMph", "engineCoolantTemperatureMilliC", "engineLoadPercent", "engineOilPressureKPa", "engineRpm", "engineStates", "faultCodes", "fuelPercents", "gps", "gpsDistanceMeters", "intakeManifoldTemperatureMilliC", "nfcCardScans", "obdEngineSeconds", "obdOdometerMeters" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of vehicle stats for the specified vehicles, stat type, and time range.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VehicleStatsListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/vehicles/tachograph-files/history" : {
      "get" : {
        "tags" : [ "Vehicles" ],
        "summary" : "Get tachograph vehicle files",
        "description" : "Returns all known tachograph files for all specified vehicles in the time range.",
        "operationId" : "getVehicleTachographFiles",
        "parameters" : [ {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vehicleIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of all vehicle tachograph files in a specified time range.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TachographVehicleFilesResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/fleet/vehicles/{id}" : {
      "get" : {
        "tags" : [ "Vehicles" ],
        "summary" : "Retrieve a vehicle",
        "description" : "Get information about a specific vehicle.",
        "operationId" : "getVehicle",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the vehicle. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource, or automatically populated by fields on the vehicle. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `maintenanceId:250020`. Automatically populated external IDs are prefixed with `samsara.`. For example, `samsara.vin:1HGBH41JXMN109186`.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the specified vehicle object.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VehicleResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Vehicles" ],
        "summary" : "Update a vehicle",
        "description" : "Updates the given Vehicle object.\n\n**Note:** Vehicle objects are automatically created when Samsara Vehicle Gateways are installed. You cannot create a Vehicle object via API.\n\nYou are able to *update* many of the fields of a Vehicle.\n\n**Note**: There are no required fields in the request body, and you only need to provide the fields you wish to update.",
        "operationId" : "updateVehicle",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the vehicle. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource, or automatically populated by fields on the vehicle. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `maintenanceId:250020`. Automatically populated external IDs are prefixed with `samsara.`. For example, `samsara.vin:1HGBH41JXMN109186`.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Fields that can be patched on a vehicle.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateVehicleRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Returns the specified vehicle object.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VehicleResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "vehicle"
      }
    },
    "/industrial/assets" : {
      "get" : {
        "tags" : [ "Industrial" ],
        "summary" : "List all assets",
        "description" : "List all assets in the organization",
        "operationId" : "getIndustrialAssets",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 512,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Assets in the organization.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListIndustrialAssetsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Industrial" ],
        "summary" : "Create an asset",
        "description" : "Create an asset with optional configuration parameters",
        "operationId" : "createIndustrialAsset",
        "requestBody" : {
          "description" : "The asset to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AssetCreate"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Newly created asset object",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "asset"
      }
    },
    "/industrial/assets/{id}" : {
      "delete" : {
        "tags" : [ "Industrial" ],
        "summary" : "Delete an existing asset",
        "description" : "Delete asset",
        "operationId" : "deleteIndustrialAsset",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the asset to be deleted.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "A successful DELETE response is a 204 with no content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardDeleteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Industrial" ],
        "summary" : "Update an asset",
        "description" : "Update an existing asset. Only the provided fields will be updated.",
        "operationId" : "patchIndustrialAsset",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the asset to be updated",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated asset fields",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AssetPatch"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "The updated asset",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "asset"
      }
    },
    "/industrial/data-inputs" : {
      "get" : {
        "tags" : [ "Industrial" ],
        "summary" : "List all data inputs",
        "description" : "Returns all data inputs, optionally filtered by tags or asset ids.",
        "operationId" : "getDataInputs",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 512,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "assetIds",
          "in" : "query",
          "description" : "A comma-separated list of industrial asset UUIDs. Example: `assetIds=076efac2-83b5-47aa-ba36-18428436dcac,6707b3f0-23b9-4fe3-b7be-11be34aea544`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of data inputs with names, ids, and other metadata.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataInputsTinyResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/industrial/data-inputs/data-points" : {
      "get" : {
        "tags" : [ "Industrial" ],
        "summary" : "List most recent data points for data inputs",
        "description" : "Returns last known data points for all data inputs. This can be filtered by optional tags, specific data input IDs or asset IDs.",
        "operationId" : "getDataInputDataSnapshot",
        "parameters" : [ {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "dataInputIds",
          "in" : "query",
          "description" : "A comma-separated list of data input IDs. Example: `dataInputIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "assetIds",
          "in" : "query",
          "description" : "A comma-separated list of industrial asset UUIDs. Example: `assetIds=076efac2-83b5-47aa-ba36-18428436dcac,6707b3f0-23b9-4fe3-b7be-11be34aea544`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of last known data input data points and pagination parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataInputSnapshotResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/industrial/data-inputs/data-points/feed" : {
      "get" : {
        "tags" : [ "Industrial" ],
        "summary" : "Follow a real-time feed of data points for data inputs",
        "description" : "Follow a continuous feed of all data input data points.\n\nYour first call to this endpoint will provide you with the most recent data points for each data input and a `pagination` object that contains an `endCursor`.\n\nYou can provide the `endCursor` to the `after` parameter of this endpoint to get data point updates since that `endCursor`.\n\nIf `hasNextPage` is `false`, no updates are readily available yet. We suggest waiting a minimum of 5 seconds before requesting updates.",
        "operationId" : "getDataInputDataFeed",
        "parameters" : [ {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "dataInputIds",
          "in" : "query",
          "description" : "A comma-separated list of data input IDs. Example: `dataInputIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "assetIds",
          "in" : "query",
          "description" : "A comma-separated list of industrial asset UUIDs. Example: `assetIds=076efac2-83b5-47aa-ba36-18428436dcac,6707b3f0-23b9-4fe3-b7be-11be34aea544`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of all data points for specified data inputs",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataInputListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/industrial/data-inputs/data-points/history" : {
      "get" : {
        "tags" : [ "Industrial" ],
        "summary" : "List historical data points for data inputs",
        "description" : "Returns all known data points during the given time range for all data inputs. This can be filtered by optional tags, specific data input IDs or asset IDs.",
        "operationId" : "getDataInputDataHistory",
        "parameters" : [ {
          "name" : "startTime",
          "in" : "query",
          "description" : "A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentTagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tagIds",
          "in" : "query",
          "description" : "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "dataInputIds",
          "in" : "query",
          "description" : "A comma-separated list of data input IDs. Example: `dataInputIds=1234,5678`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "assetIds",
          "in" : "query",
          "description" : "A comma-separated list of industrial asset UUIDs. Example: `assetIds=076efac2-83b5-47aa-ba36-18428436dcac,6707b3f0-23b9-4fe3-b7be-11be34aea544`",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of all data points for the specified data inputs and time range.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataInputListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/me" : {
      "get" : {
        "tags" : [ "Organization Info" ],
        "summary" : "Get information about your organization",
        "description" : "Get information about your organization",
        "operationId" : "getOrganizationInfo",
        "responses" : {
          "200" : {
            "description" : "Returns information about your organization.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationInfoResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tags" : {
      "get" : {
        "tags" : [ "Tags" ],
        "summary" : "List all tags",
        "description" : "Return all of the tags for an organization.",
        "operationId" : "listTags",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 512,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of tags.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListTagsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Tags" ],
        "summary" : "Create a tag",
        "description" : "Create a new tag for the organization.",
        "operationId" : "createTag",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateTagRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Newly created tag object, including the new tag ID.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TagResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "tag"
      }
    },
    "/tags/{id}" : {
      "get" : {
        "tags" : [ "Tags" ],
        "summary" : "Retrieve a tag",
        "description" : "Fetch a tag by id.",
        "operationId" : "getTag",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Tag. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`. Automatically populated external IDs are prefixed with `samsara.`. For example, `samsara.name:ELD-exempt`.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The tag corresponding to request id.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TagResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Tags" ],
        "summary" : "Update a tag",
        "description" : "Update a tag with a new name and new members. This API call would replace all old members of a tag with new members specified in the request body.",
        "operationId" : "replaceTag",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Tag. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`. Automatically populated external IDs are prefixed with `samsara.`. For example, `samsara.name:ELD-exempt`.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReplaceTagRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The updated tag data.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TagResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "tag"
      },
      "delete" : {
        "tags" : [ "Tags" ],
        "summary" : "Delete a tag",
        "description" : "Permanently deletes a tag.",
        "operationId" : "deleteTag",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Tag. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`. Automatically populated external IDs are prefixed with `samsara.`. For example, `samsara.name:ELD-exempt`.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "A successful DELETE response is a 204 with no content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardDeleteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Tags" ],
        "summary" : "Update a tag",
        "description" : "Update an existing tag. **Note** this implementation of patch uses [the JSON merge patch](https://tools.ietf.org/html/rfc7396) proposed standard. \n\n This means that any fields included in the patch request will _overwrite_ fields which exist on the target resource. \n\n For arrays, this means any array included in the request will _replace_ the array that exists at the specified path, it will not _add_ to the existing array.",
        "operationId" : "patchTag",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Tag. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`. Automatically populated external IDs are prefixed with `samsara.`. For example, `samsara.name:ELD-exempt`.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PatchTagRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Returns updated tag object.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TagResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "tag"
      }
    },
    "/user-roles" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "List all user roles",
        "description" : "Returns a list of all user roles in an organization.",
        "operationId" : "listUserRoles",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 512,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all user roles.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListUserRolesResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "List all users",
        "description" : "Returns a list of all users in an organization.",
        "operationId" : "listUsers",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 512,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all users.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListUsersResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Create a user",
        "description" : "Add a user to the organization.",
        "operationId" : "createUser",
        "requestBody" : {
          "description" : "The user to create.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateUserRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Newly created user object with ID.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "user"
      }
    },
    "/users/{id}" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Retrieve a user",
        "description" : "Get a specific user's information.",
        "operationId" : "getUser",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier for the user.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the specified user.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Users" ],
        "summary" : "Delete a user",
        "description" : "Delete the given user.",
        "operationId" : "deleteUser",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier for the user.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "A successful DELETE response is a 204 with no content.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardDeleteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Users" ],
        "summary" : "Update a user",
        "description" : "Update a specific user's information.",
        "operationId" : "updateUser",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier for the user.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Updates to the user.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateUserRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Updated user object with ID.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/standardErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "user"
      }
    },
    "/v1/fleet/assets" : {
      "get" : {
        "tags" : [ "Assets" ],
        "summary" : "List all assets",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch all of the assets.",
        "operationId" : "V1getAllAssets",
        "responses" : {
          "200" : {
            "description" : "List of assets.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_1"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fleet/assets/locations" : {
      "get" : {
        "tags" : [ "Assets" ],
        "summary" : "List current location for all assets",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch current locations of all assets.",
        "operationId" : "V1getAllAssetCurrentLocations",
        "parameters" : [ {
          "name" : "startingAfter",
          "in" : "query",
          "description" : "Pagination parameter indicating the cursor position to continue returning results after. Used in conjunction with the 'limit' parameter. Mutually exclusive with 'endingBefore' parameter.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endingBefore",
          "in" : "query",
          "description" : "Pagination parameter indicating the cursor position to return results before. Used in conjunction with the 'limit' parameter. Mutually exclusive with 'startingAfter' parameter.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Pagination parameter indicating the number of results to return in this request. Used in conjunction with either 'startingAfter' or 'endingBefore'.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of assets and their current locations.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_2"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fleet/assets/reefers" : {
      "get" : {
        "tags" : [ "Assets" ],
        "summary" : "List stats for all reefers",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetches all reefers and reefer-specific stats.",
        "operationId" : "V1getAssetsReefers",
        "parameters" : [ {
          "name" : "startMs",
          "in" : "query",
          "description" : "Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "endMs",
          "in" : "query",
          "description" : "Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "startingAfter",
          "in" : "query",
          "description" : "Pagination parameter indicating the cursor position to continue returning results after. Used in conjunction with the 'limit' parameter. Mutually exclusive with 'endingBefore' parameter.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endingBefore",
          "in" : "query",
          "description" : "Pagination parameter indicating the cursor position to return results before. Used in conjunction with the 'limit' parameter. Mutually exclusive with 'startingAfter' parameter.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Pagination parameter indicating the number of results to return in this request. Used in conjunction with either 'startingAfter' or 'endingBefore'.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "All org reefers and reefer-specific details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_3"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fleet/assets/{asset_id}/locations" : {
      "get" : {
        "tags" : [ "Assets" ],
        "summary" : "List historical locations for a given asset",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nList historical locations for a given asset",
        "operationId" : "V1getAssetLocation",
        "parameters" : [ {
          "name" : "asset_id",
          "in" : "path",
          "description" : "ID of the asset. Must contain only digits 0-9.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "startMs",
          "in" : "query",
          "description" : "Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "endMs",
          "in" : "query",
          "description" : "Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Asset location details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1AssetLocationResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fleet/assets/{asset_id}/reefer" : {
      "get" : {
        "tags" : [ "Assets" ],
        "summary" : "List stats for a given reefer",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch the reefer-specific stats of an asset.",
        "operationId" : "V1getAssetReefer",
        "parameters" : [ {
          "name" : "asset_id",
          "in" : "path",
          "description" : "ID of the asset. Must contain only digits 0-9.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "startMs",
          "in" : "query",
          "description" : "Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "endMs",
          "in" : "query",
          "description" : "Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Reefer-specific asset details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1AssetReeferResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fleet/dispatch/routes" : {
      "get" : {
        "tags" : [ "Routes" ],
        "summary" : "Get all routes",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch all dispatch routes for a given time period. The time period is defined as `end_time` and the `duration` before which to query.\n\nRoutes are returned if the route's `scheduled_start_ms` and `scheduled_end_ms` overlap with the requested time period.\n\nMore concretely, if the route's `scheduled_start_ms` is before `end_time` and the `scheduled_end_ms` is within or after the given duration, then the route is returned.",
        "operationId" : "V1fetchAllDispatchRoutes",
        "parameters" : [ {
          "name" : "end_time",
          "in" : "query",
          "description" : "Time in unix milliseconds that represents the end time of the requested time interval. See above for a description of how routes are returned. Defaults to now.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "duration",
          "in" : "query",
          "description" : "Time in milliseconds that represents the duration before end_time to query. Defaults to 24 hours.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "All dispatch route objects.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1DispatchRoutes"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Routes" ],
        "summary" : "Create a new route",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nCreate a new dispatch route.",
        "operationId" : "V1createDispatchRoute",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/V1DispatchRouteCreate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Created route object including the new route ID.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1DispatchRoute"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "createDispatchRouteParams"
      }
    },
    "/v1/fleet/dispatch/routes/job_updates" : {
      "get" : {
        "tags" : [ "Routes" ],
        "summary" : "Get route updates",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch all updates to a job including route data in the last 24 hours or subsequent to an sequence ID. Returns a maximum of 500 job updates. If more than 500 job updates are available, another request made with the prior request's sequence_id will return the next set of available job updates.",
        "operationId" : "V1fetchAllRouteJobUpdates",
        "parameters" : [ {
          "name" : "sequence_id",
          "in" : "query",
          "description" : "Sequence ID from the response payload of the last request. Defaults to fetching updates from last 24 hours.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Optionally set include=route to include route object in response payload.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "All job updates on routes.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1allRouteJobUpdates"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fleet/dispatch/routes/{route_id_or_external_id}" : {
      "get" : {
        "tags" : [ "Routes" ],
        "summary" : "Get a route",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch a dispatch route by id.",
        "operationId" : "V1getDispatchRouteById",
        "parameters" : [ {
          "name" : "route_id_or_external_id",
          "in" : "path",
          "description" : "ID of the route. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The dispatch route corresponding to route_id.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1DispatchRoute"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Routes" ],
        "summary" : "Update a route",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nUpdate the dispatch route. Allowable updates include adding or removing jobs, and changing job locations and times.",
        "operationId" : "V1updateDispatchRouteById",
        "parameters" : [ {
          "name" : "route_id_or_external_id",
          "in" : "path",
          "description" : "ID of the route. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/V1DispatchRouteUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The updated route corresponding to route_id.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1DispatchRoute"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "updateDispatchRouteParams"
      },
      "delete" : {
        "tags" : [ "Routes" ],
        "summary" : "Delete a route",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nDelete a dispatch route and its associated jobs.",
        "operationId" : "V1deleteDispatchRouteById",
        "parameters" : [ {
          "name" : "route_id_or_external_id",
          "in" : "path",
          "description" : "ID of the route. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Successfully deleted the dispatch route. No response body is returned.",
            "content" : { }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "applyToFutureRoutes"
      }
    },
    "/v1/fleet/dispatch/routes/{route_id_or_external_id}/history" : {
      "get" : {
        "tags" : [ "Routes" ],
        "summary" : "Get route history",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch the history of a dispatch route.",
        "operationId" : "V1getDispatchRouteHistory",
        "parameters" : [ {
          "name" : "start_time",
          "in" : "query",
          "description" : "Timestamp representing the start of the period to fetch, inclusive. Used in combination with end_time. Defaults to 0.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "Timestamp representing the end of the period to fetch, inclusive. Used in combination with start_time. Defaults to nowMs.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "route_id_or_external_id",
          "in" : "path",
          "description" : "ID of the route. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The historical route state changes between start_time and end_time.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1DispatchRouteHistory"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fleet/drivers/document_types" : {
      "get" : {
        "tags" : [ "Documents" ],
        "summary" : "Fetch document types",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch all of the document types.",
        "operationId" : "V1getDriverDocumentTypesByOrgId",
        "responses" : {
          "200" : {
            "description" : "Returns all of the document types.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1DocumentTypes"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fleet/drivers/documents" : {
      "get" : {
        "tags" : [ "Documents" ],
        "summary" : "Fetch all documents",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch all of the documents.",
        "operationId" : "V1getDriverDocumentsByOrgId",
        "parameters" : [ {
          "name" : "endMs",
          "in" : "query",
          "description" : "Time in unix milliseconds that represents the oldest documents to return. Used in combination with durationMs. Defaults to now.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "durationMs",
          "in" : "query",
          "description" : "Time in milliseconds that represents the duration before endMs to query. Defaults to 24 hours.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "queryBy",
          "in" : "query",
          "description" : "Retrieve most recent documents based on either driverCreatedAtMs or serverUpdatedAtMs. If no value is provided, the default is driverCreatedAtMs.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "string",
            "enum" : [ "created", "updated" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns all of the documents.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1Documents"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fleet/drivers/{driverId}/safety/score" : {
      "get" : {
        "tags" : [ "Safety" ],
        "summary" : "Fetch driver safety score",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch the safety score for the driver.",
        "operationId" : "V1getDriverSafetyScore",
        "parameters" : [ {
          "name" : "driverId",
          "in" : "path",
          "description" : "ID of the driver. Must contain only digits 0-9.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "startMs",
          "in" : "query",
          "description" : "Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs. Total duration (endMs - startMs) must be greater than or equal to 1 hour.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "endMs",
          "in" : "query",
          "description" : "Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs. Total duration (endMs - startMs) must be greater than or equal to 1 hour.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Safety score details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1DriverSafetyScoreResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fleet/drivers/{driver_id}/documents" : {
      "post" : {
        "tags" : [ "Documents" ],
        "summary" : "Create a document",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nCreate a driver document for the given driver.\n\nYou can create a document in one of two states: \"Required\" or \"Submitted\":\n\n- Setting the document state to \"Submitted\" will submit the document on behalf of the driver.\n\n- Setting the document state to \"Required\" will create a pre-populated document for the driver to fill out in the Driver App.\n\n**Populating document fields**\n\nYou  populate a document's fields according to the document's *document type*. You can retrieve document types using the [GET /v1/fleet/drivers/document_types](#operation/getDriverDocumentTypesByOrgId) endpoint.\n\nYou must populate a document's fields using the field *labels* and *value types*, and the fields must be listed in the same order they appear in the document type. See the request schema below for more details.\n\n\n\n**Setting document fields to default values**\n\nIf a document's state is set to \"Required\", you can set document fields to default values by omitting the field value from the request body or explicitly setting it to null. For example:\n\n```\n\n{\n\n  \"documentTypeUuid\": \"79008acc-56d6-49f4-b5d2-4101ce4b497c\",\n\n  \"fields\": [\n\n    {\n\n      \"label\": \"Number Field\",\n\n      \"valueType\": \"ValueType_Number\",\n\n      \"numberValue\": null\n\n    },\n\n    {\n\n      \"label\": \"Signature Field\",\n\n      \"valueType\": \"ValueType_Signature\"\n\n    }\n\n  ],\n\n  \"dispatchJobId\": 4333299083,\n\n  \"state\":\"Required\"\n\n}\n\n```\n\nIn the request above, the value for the number field is explicitly set to null, and the value for the signature field is omitted. Both forms are accepted and functionally equivalent. Both will result in the field being pre-populated with a default value.",
        "operationId" : "V1createDriverDocument",
        "parameters" : [ {
          "name" : "driver_id",
          "in" : "path",
          "description" : "ID of the driver for whom the document is created. Must contain only digits 0-9.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "To create a document for a given document type, provide the `documentTypeUuid` of the type of document you'd like to create. Then, pass in the `fields` of the document in the same order that they show up in the given document type.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/V1DocumentCreate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Returns the created document.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1Document"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "createDocumentParams"
      }
    },
    "/v1/fleet/drivers/{driver_id}/documents/{document_id}" : {
      "get" : {
        "tags" : [ "Documents" ],
        "summary" : "Fetches a document",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetches a single document submission by a specific driver.",
        "operationId" : "V1getDriverDocumentByIdAndDriverId",
        "parameters" : [ {
          "name" : "driver_id",
          "in" : "path",
          "description" : "ID of the driver who submitted the document. Must contain only digits 0-9.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "document_id",
          "in" : "path",
          "description" : "ID of document.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the specified document.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1Document"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Documents" ],
        "summary" : "Delete a document",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nDeletes a single document submission by driver.",
        "operationId" : "deleteDriverDocumentByIdAndDriverId",
        "parameters" : [ {
          "name" : "driver_id",
          "in" : "path",
          "description" : "ID of the driver who submitted the document. Must contain only digits 0-9.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "document_id",
          "in" : "path",
          "description" : "ID of document.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Deletes the specified document.",
            "content" : { }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fleet/drivers/{driver_id}/duty_status" : {
      "post" : {
        "tags" : [ "Hours of Service" ],
        "summary" : "Set a duty status for a specific driver",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nSet an individual driver’s current duty status to 'On Duty' or 'Off Duty'.\n\n To ensure compliance with the ELD Mandate, only  authenticated drivers can make direct duty status changes on their own logbook. Any system external to the Samsara Driver App using this endpoint to trigger duty status changes must ensure that such changes are only triggered directly by the driver in question and that the driver has been properly authenticated. This endpoint should not be used to algorithmically trigger duty status changes nor should it be used by personnel besides the driver to trigger duty status changes on the driver’s behalf. Carriers and their drivers are ultimately responsible for maintaining accurate logs and should confirm that their use of the endpoint is compliant with the ELD Mandate.",
        "operationId" : "setCurrentDutyStatus",
        "parameters" : [ {
          "name" : "driver_id",
          "in" : "path",
          "description" : "ID of the driver for whom the duty status is being set.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_1"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Successfully changed duty status. No response body is returned.",
            "content" : { }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "dutyStatusParams"
      }
    },
    "/v1/fleet/drivers/{driver_id}/hos_daily_logs" : {
      "get" : {
        "tags" : [ "Hours of Service" ],
        "summary" : "Get daily HOS logs for a specific driver",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet summarized daily Hours of Service charts for a specified driver.\n\nThe response will contain a list of `days`, where each entry in the list is the driver's summarized hours of service for that entire day.\n\nThe time range for a \"day\" is defined by the `driver`'s `eldDayStartHour`. By default, this is `0`, which indicates the `driver`'s \"day\" is from midnight to midnight in the `driver`'s respective `timezone`. This value is configurable per driver.\n\nThe `startMs` and `endMs` parameters indicate start and end for the date range you'd like to query. These parameters are inclusive. This means that the response will include the \"day\" that contains `startMs` and the \"day\" that contains `endMs`. For example:\n\nLet's say a `driver`'s `eldDayStartHour` is `0` and their timezone is `America/Chicago`.\n\nIf `startMs` was `1576080000000` (December 11, 2019 10:00:00 AM America/Chicago) and an `endMs` was `1576166400000` (December 12, 2019 10:00:00 AM America/Los_Angeles), then the response will contain a two `day` entries: [December 11, 2019 12:00:00 AM America/Chicago to December 12, 2019 12:00:00 AM America/Chicago], and [December 12, 2019 12:00:00 AM America/Chicago to December 13, 2019 12:00:00 AM America/Chicago].\n\n**Note:** If data is still being uploaded from the Samsara Driver App, it may not be completely reflected in the response from this endpoint. The best practice is to wait a couple of days before querying this endpoint to make sure that all data from the Samsara Driver App has been uploaded.",
        "operationId" : "V1getFleetDriversHosDailyLogs",
        "parameters" : [ {
          "name" : "driver_id",
          "in" : "path",
          "description" : "ID of the driver with HOS logs.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "startMs",
          "in" : "query",
          "description" : "Beginning of the time range, specified in milliseconds UNIX time.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "endMs",
          "in" : "query",
          "description" : "End of the time range, specified in milliseconds UNIX time. **Note:** This timestamp **should not** be in the future. Providing a timestamp in the future will result in unpredictable behavior from the API. (I.e. this field should always be less than or equal to the current time).",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Distance traveled and time active for each driver in the organization over the specified time period.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1DriverDailyLogResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fleet/hos_authentication_logs" : {
      "get" : {
        "tags" : [ "Hours of Service" ],
        "summary" : "Get HOS signin and signout",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet the HOS (hours of service) signin and signout logs for the specified driver. The response includes 4 fields that are now deprecated.\n\n**Note:** If data is still being uploaded from the Samsara Driver App, it may not be completely reflected in the response from this endpoint. The best practice is to wait a couple of days before querying this endpoint to make sure that all data from the Samsara Driver App has been uploaded.",
        "operationId" : "V1getFleetHosAuthenticationLogs",
        "parameters" : [ {
          "name" : "driverId",
          "in" : "query",
          "description" : "Driver ID to query.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "startMs",
          "in" : "query",
          "description" : "Beginning of the time range, specified in milliseconds UNIX time.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "endMs",
          "in" : "query",
          "description" : "End of the time range, specified in milliseconds UNIX time.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "HOS authentication logs for the specified driver.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1HosAuthenticationLogsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fleet/maintenance/list" : {
      "get" : {
        "tags" : [ "Maintenance" ],
        "summary" : "Get vehicles with engine faults or check lights",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet list of the vehicles with any engine faults or check light data.",
        "operationId" : "V1getFleetMaintenanceList",
        "responses" : {
          "200" : {
            "description" : "List of vehicles and maintenance information about each.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fleet/messages" : {
      "get" : {
        "tags" : [ "Messages" ],
        "summary" : "Get all messages.",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet all messages.",
        "operationId" : "V1getMessages",
        "parameters" : [ {
          "name" : "endMs",
          "in" : "query",
          "description" : "Time in unix milliseconds that represents the end of time range of messages to return. Used in combination with durationMs. Defaults to now.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "durationMs",
          "in" : "query",
          "description" : "Time in milliseconds that represents the duration before endMs to query. Defaults to 24 hours.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the fetched messages from most recently sent to least recently sent.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_5"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Messages" ],
        "summary" : "Send a message to a list of driver ids.",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nSend a message to a list of driver ids.",
        "operationId" : "V1createMessages",
        "requestBody" : {
          "description" : "Text to send to a list of driverIds.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Returns the created messages.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_6"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "createMessages"
      }
    },
    "/v1/fleet/trailers/assignments" : {
      "get" : {
        "tags" : [ "Trailer Assignments" ],
        "summary" : "List trailer assignments for all trailers",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch trailer assignment data for all trailers in your organization.",
        "operationId" : "V1getAllTrailerAssignments",
        "parameters" : [ {
          "name" : "startMs",
          "in" : "query",
          "description" : "Timestamp in Unix epoch miliseconds representing the start of the period to fetch. Omitting both startMs and endMs only returns current assignments.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "endMs",
          "in" : "query",
          "description" : "Timestamp in Unix epoch miliseconds representing the end of the period to fetch. Omitting endMs sets endMs as the current time",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Pagination parameter indicating the number of results to return in this request. Used in conjunction with either 'startingAfter' or 'endingBefore'.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "int64"
          }
        }, {
          "name" : "startingAfter",
          "in" : "query",
          "description" : "Pagination parameter indicating the cursor position to continue returning results after. Used in conjunction with the 'limit' parameter. Mutually exclusive with 'endingBefore' parameter.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endingBefore",
          "in" : "query",
          "description" : "Pagination parameter indicating the cursor position to return results before. Used in conjunction with the 'limit' parameter. Mutually exclusive with 'startingAfter' parameter.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns trailer assignment data for all trailers in your organization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_7"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fleet/trailers/{trailerId}/assignments" : {
      "get" : {
        "tags" : [ "Trailer Assignments" ],
        "summary" : "List trailer assignments for a given trailer",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch trailer assignment data for a single trailer.",
        "operationId" : "V1getFleetTrailerAssignments",
        "parameters" : [ {
          "name" : "trailerId",
          "in" : "path",
          "description" : "ID of trailer. Must contain only digits 0-9.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "startMs",
          "in" : "query",
          "description" : "Timestamp in Unix epoch milliseconds representing the start of the period to fetch. Omitting both startMs and endMs only returns current assignments.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "endMs",
          "in" : "query",
          "description" : "Timestamp in Unix epoch milliseconds representing the end of the period to fetch. Omitting endMs sets endMs as the current time",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns trailer assignment data for a single trailer",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1TrailerAssignmentsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fleet/trips" : {
      "get" : {
        "tags" : [ "Trips" ],
        "summary" : "Get vehicle trips",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet historical trips data for specified vehicle. This method returns a set of historical trips data for the specified vehicle in the specified time range.",
        "operationId" : "V1getFleetTrips",
        "parameters" : [ {
          "name" : "vehicleId",
          "in" : "query",
          "description" : "Vehicle ID to query.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "startMs",
          "in" : "query",
          "description" : "Beginning of the time range, specified in milliseconds UNIX time. Limited to a 90 day window with respect to startMs and endMs",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "endMs",
          "in" : "query",
          "description" : "End of the time range, specified in milliseconds UNIX time.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of trips taken by the requested vehicle within the specified timeframe. Ongoing trips will be returned with 9223372036854775807 as their endMs.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1TripResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fleet/vehicles/{vehicleId}/safety/harsh_event" : {
      "get" : {
        "tags" : [ "Safety" ],
        "summary" : "Fetch harsh events",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch harsh event details for a vehicle.",
        "operationId" : "V1getVehicleHarshEvent",
        "parameters" : [ {
          "name" : "vehicleId",
          "in" : "path",
          "description" : "ID of the vehicle. Must contain only digits 0-9.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "timestamp",
          "in" : "query",
          "description" : "Timestamp in milliseconds representing the timestamp of a harsh event.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Harsh event details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1VehicleHarshEventResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fleet/vehicles/{vehicleId}/safety/score" : {
      "get" : {
        "tags" : [ "Safety" ],
        "summary" : "Fetch vehicle safety scores",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch the safety score for the vehicle.",
        "operationId" : "V1getVehicleSafetyScore",
        "parameters" : [ {
          "name" : "vehicleId",
          "in" : "path",
          "description" : "ID of the vehicle. Must contain only digits 0-9.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "startMs",
          "in" : "query",
          "description" : "Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs. Total duration (endMs - startMs) must be greater than or equal to 1 hour.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "endMs",
          "in" : "query",
          "description" : "Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs. Total duration (endMs - startMs) must be greater than or equal to 1 hour.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Safety score details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1VehicleSafetyScoreResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/industrial/vision/cameras" : {
      "get" : {
        "tags" : [ "Industrial" ],
        "summary" : "Fetch industrial cameras",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch all cameras.",
        "operationId" : "V1getCameras",
        "responses" : {
          "200" : {
            "description" : "Returns details about a camera.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1VisionCamerasResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/industrial/vision/cameras/{camera_id}/programs" : {
      "get" : {
        "tags" : [ "Industrial" ],
        "summary" : "Fetch industrial camera programs",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch configured programs on the camera.",
        "operationId" : "V1getVisionProgramsByCamera",
        "parameters" : [ {
          "name" : "camera_id",
          "in" : "path",
          "description" : "The camera_id should be valid for the given accessToken.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns programs configured on the camera.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ProgramsForTheCameraResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/industrial/vision/run/camera/{camera_id}" : {
      "get" : {
        "tags" : [ "Industrial" ],
        "summary" : "Fetch the latest run for a camera or program",
        "description" : "Fetch the latest run for a camera or program by default. If startedAtMs is supplied, fetch the specific run that corresponds to that start time.",
        "operationId" : "V1getVisionLatestRunCamera",
        "parameters" : [ {
          "name" : "camera_id",
          "in" : "path",
          "description" : "The camera_id should be valid for the given accessToken.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "program_id",
          "in" : "query",
          "description" : "The configured program's ID on the camera.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "startedAtMs",
          "in" : "query",
          "description" : "EndMs is an optional param. It will default to the current time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Include is a filter parameter. Accepts 'pass', 'reject' or 'no_read'.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit is an integer value from 1 to 1,000.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the details for this run.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1VisionRunByCameraResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/industrial/vision/runs" : {
      "get" : {
        "tags" : [ "Industrial" ],
        "summary" : "Fetch runs",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch runs.",
        "operationId" : "V1getVisionRuns",
        "parameters" : [ {
          "name" : "durationMs",
          "in" : "query",
          "description" : "DurationMs is a required param. This works with the EndMs parameter. Indicates the duration in which the visionRuns will be fetched",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "endMs",
          "in" : "query",
          "description" : "EndMs is an optional param. It will default to the current time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return runs.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1VisionRunsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/industrial/vision/runs/{camera_id}" : {
      "get" : {
        "tags" : [ "Industrial" ],
        "summary" : "Fetch runs by camera",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch runs by camera.",
        "operationId" : "getVisionRunsByCamera",
        "parameters" : [ {
          "name" : "camera_id",
          "in" : "path",
          "description" : "The camera_id should be valid for the given accessToken.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "durationMs",
          "in" : "query",
          "description" : "DurationMs is a required param. This works with the EndMs parameter. Indicates the duration in which the visionRuns will be fetched",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "endMs",
          "in" : "query",
          "description" : "EndMs is an optional param. It will default to the current time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return runs by cameraId.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1VisionRunsByCameraResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/industrial/vision/runs/{camera_id}/{program_id}/{started_at_ms}" : {
      "get" : {
        "tags" : [ "Industrial" ],
        "summary" : "Fetch runs by camera and program",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nFetch runs by camera and program.",
        "operationId" : "V1getVisionRunsByCameraAndProgram",
        "parameters" : [ {
          "name" : "camera_id",
          "in" : "path",
          "description" : "The camera_id should be valid for the given accessToken.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "program_id",
          "in" : "path",
          "description" : "The configured program's ID on the camera.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "started_at_ms",
          "in" : "path",
          "description" : "Started_at_ms is a required param. Indicates the start time of the run to be fetched.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Include is a filter parameter. Accepts 'pass', 'reject' or 'no_read'.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return runs by camera ID and program ID.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1VisionRunsByCameraAndProgramResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/machines/history" : {
      "post" : {
        "tags" : [ "Industrial" ],
        "summary" : "Get machine history",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet historical data for machine objects. This method returns a set of historical data for all machines",
        "operationId" : "V1getMachinesHistory",
        "requestBody" : {
          "description" : "Time range to query for events",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_3"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "List of machine results objects, each containing a time and a datapoint.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1MachineHistoryResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "historyParam"
      }
    },
    "/v1/machines/list" : {
      "post" : {
        "tags" : [ "Industrial" ],
        "summary" : "Get machines",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet machine objects. This method returns a list of the machine objects in the Samsara Cloud and information about them.",
        "operationId" : "V1getMachines",
        "responses" : {
          "200" : {
            "description" : "List of machine objects.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_8"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sensors/cargo" : {
      "post" : {
        "tags" : [ "Sensors" ],
        "summary" : "Get cargo status",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet cargo monitor status (empty / full) for requested sensors.",
        "operationId" : "V1getSensorsCargo",
        "requestBody" : {
          "description" : "List of sensor IDs to query.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_4"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "List of sensor objects containing the current cargo status reported by each sensor.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1CargoResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "V1sensorParam"
      }
    },
    "/v1/sensors/door" : {
      "post" : {
        "tags" : [ "Sensors" ],
        "summary" : "Get door status",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet door monitor status (closed / open) for requested sensors.",
        "operationId" : "V1getSensorsDoor",
        "requestBody" : {
          "description" : "List of sensor IDs to query.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_5"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "List of sensor objects containing the current door status reported by each sensor.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1DoorResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "V1sensorParam"
      }
    },
    "/v1/sensors/history" : {
      "post" : {
        "tags" : [ "Sensors" ],
        "summary" : "Get sensor history",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet historical data for specified sensors. This method returns a set of historical data for the specified sensors in the specified time range and at the specified time resolution.",
        "operationId" : "V1getSensorsHistory",
        "requestBody" : {
          "description" : "Time range and resolution, and list of sensor ID, field pairs to query.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_6"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "List of results objects, each containing a time and a datapoint for each requested sensor/field pair.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1SensorHistoryResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "historyParam"
      }
    },
    "/v1/sensors/humidity" : {
      "post" : {
        "tags" : [ "Sensors" ],
        "summary" : "Get humidity",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet humidity for requested sensors. This method returns the current relative humidity for the requested sensors.",
        "operationId" : "V1getSensorsHumidity",
        "requestBody" : {
          "description" : "List of sensor IDs to query.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_7"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "List of sensor objects containing the current humidity reported by each sensor.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1HumidityResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "V1sensorParam"
      }
    },
    "/v1/sensors/list" : {
      "post" : {
        "tags" : [ "Sensors" ],
        "summary" : "Get all sensors",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet sensor objects. This method returns a list of the sensor objects in the Samsara Cloud and information about them.",
        "operationId" : "V1getSensors",
        "responses" : {
          "200" : {
            "description" : "List of sensor objects.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_9"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sensors/temperature" : {
      "post" : {
        "tags" : [ "Sensors" ],
        "summary" : "Get temperature",
        "description" : "<n class=\"warning\">\n<nh>\n<i class=\"fa fa-exclamation-circle\"></i>\nThis endpoint is still on our legacy API.\n</nh>\n</n>\n\nGet temperature for requested sensors. This method returns the current ambient temperature (and probe temperature if applicable) for the requested sensors.",
        "operationId" : "V1getSensorsTemperature",
        "requestBody" : {
          "description" : "List of sensor IDs to query.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_8"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "List of sensor objects containing the current temperature reported by each sensor.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1TemperatureResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/V1ErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "V1sensorParam"
      }
    }
  },
  "security": {
    "AccessTokenHeader": []
  },
  "components" : {
    "securitySchemes" : {
      "AccessTokenHeader" : {
        "type": "http",
        "scheme": "bearer"
      },
      "AccessTokenParameter" : {
        "type" : "apiKey",
        "name" : "access_token",
        "in" : "query"
      },
      "OAuth2" : {
        "type" : "oauth2",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://api.samsara.com/oauth2/authorize",
            "tokenUrl" : "https://api.samsara.com/oauth2/token",
            "scopes" : { }
          }
        }
      }
    },
    "schemas" : {
      "Address" : {
        "required" : [ "formattedAddress", "geofence", "id", "name" ],
        "type" : "object",
        "properties" : {
          "addressTypes" : {
            "type" : "array",
            "description" : "Reporting location type associated with the address (used for ELD reporting purposes).",
            "items" : {
              "type" : "string",
              "example" : "yard",
              "enum" : [ "yard", "shortHaul", "workforceSite", "riskZone" ]
            }
          },
          "contacts" : {
            "type" : "array",
            "description" : "An array Contact mini-objects that are associated the Address.",
            "items" : {
              "$ref" : "#/components/schemas/contactTinyResponse"
            }
          },
          "createdAtTime" : {
            "type" : "string",
            "description" : "The date and time this address was created in RFC 3339 format.",
            "format" : "date-time",
            "example" : "2019-05-18T20:27:35Z"
          },
          "externalIds" : {
            "type" : "object",
            "properties" : { },
            "description" : "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
            "example" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            }
          },
          "formattedAddress" : {
            "maxLength" : 1024,
            "type" : "string",
            "description" : "The full street address for this address/geofence, as it might be recognized by Google Maps.",
            "example" : "350 Rhode Island St, San Francisco, CA"
          },
          "geofence" : {
            "$ref" : "#/components/schemas/AddressGeofence"
          },
          "id" : {
            "type" : "string",
            "description" : "ID of the Address.",
            "example" : "22408"
          },
          "latitude" : {
            "type" : "number",
            "description" : "Latitude of the address. Will be geocoded from `formattedAddress` if not provided.",
            "format" : "double",
            "example" : 37.765363
          },
          "longitude" : {
            "type" : "number",
            "description" : "Longitude of the address. Will be geocoded from `formattedAddress` if not provided.",
            "format" : "double",
            "example" : -122.4029238
          },
          "name" : {
            "maxLength" : 255,
            "type" : "string",
            "description" : "Name of the address.",
            "example" : "Samsara HQ"
          },
          "notes" : {
            "maxLength" : 280,
            "type" : "string",
            "description" : "Notes about the address.",
            "example" : "Hours of operation: 8am - 6pm; Truck entrance on the Rhode Island street side."
          },
          "tags" : {
            "type" : "array",
            "description" : "An array of all tag mini-objects that are associated with the given address entry.",
            "items" : {
              "$ref" : "#/components/schemas/tagTinyResponse"
            }
          }
        },
        "description" : "An Address object."
      },
      "AddressGeofence" : {
        "type" : "object",
        "properties" : {
          "circle" : {
            "$ref" : "#/components/schemas/AddressGeofence_circle"
          },
          "polygon" : {
            "$ref" : "#/components/schemas/AddressGeofence_polygon"
          }
        },
        "description" : "The geofence that defines this address and its bounds. This can either be a circle or a polygon, but not both."
      },
      "AddressResponse" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Address"
          }
        },
        "description" : "An Address response body."
      },
      "AssetCreate" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "customMetadata" : {
            "$ref" : "#/components/schemas/CustomMetadata"
          },
          "location" : {
            "$ref" : "#/components/schemas/AssetLocation"
          },
          "locationDataInputId" : {
            "type" : "string",
            "description" : "Required if locationType is \"dataInput\". Specifies the id of a location data input which will determine the asset's location. **The data input will be moved to the new asset.**",
            "example" : "12345"
          },
          "locationType" : {
            "$ref" : "#/components/schemas/LocationType"
          },
          "name" : {
            "$ref" : "#/components/schemas/AssetName"
          },
          "parentId" : {
            "$ref" : "#/components/schemas/ParentId"
          },
          "runningStatusDataInputId" : {
            "type" : "string",
            "description" : "The asset's isRunning status will be true when the associated data input's value is 1. Data input cannot be of location format. **The data input will be moved to the new asset.**",
            "example" : "67890"
          },
          "tagIds" : {
            "$ref" : "#/components/schemas/TagIds"
          }
        },
        "description" : "The asset creation arguments"
      },
      "AssetLocation" : {
        "type" : "object",
        "properties" : {
          "formattedAddress" : {
            "type" : "string",
            "description" : "Formatted address of the location",
            "example" : "350 Rhode Island St, San Francisco CA, 94103"
          },
          "latitude" : {
            "$ref" : "#/components/schemas/latitude"
          },
          "longitude" : {
            "$ref" : "#/components/schemas/longitude"
          }
        },
        "description" : "For locationType \"point\", latitude and longitude are required. For \"address\", formattedAddress must be provided, and lat/long can be optionally included for displaying a dot on the assets map. For \"dataInput\", this object should not be passed in."
      },
      "AssetName" : {
        "type" : "string",
        "description" : "The name of the asset."
      },
      "AssetPatch" : {
        "type" : "object",
        "properties" : {
          "customMetadata" : {
            "$ref" : "#/components/schemas/CustomMetadata"
          },
          "location" : {
            "$ref" : "#/components/schemas/AssetLocation"
          },
          "locationDataInputId" : {
            "type" : "string",
            "description" : "Required if locationType is \"dataInput\". Specifies the id of a location data input which will determine the asset's location. The data input must be in the asset.",
            "example" : "12345"
          },
          "locationType" : {
            "$ref" : "#/components/schemas/LocationType"
          },
          "name" : {
            "$ref" : "#/components/schemas/AssetName"
          },
          "parentId" : {
            "type" : "string",
            "description" : "The id of the parent asset that the asset belongs to. Pass in an empty string to remove the child from the parent.",
            "example" : ""
          },
          "runningStatusDataInputId" : {
            "type" : "string",
            "description" : "The asset's isRunning status will be true when the associated data input's value is 1. Data input cannot be of location format. The data input must be in the asset.",
            "example" : "67890"
          },
          "tagIds" : {
            "$ref" : "#/components/schemas/TagIds"
          }
        },
        "description" : "The asset creation arguments"
      },
      "AssetResponse" : {
        "required" : [ "id", "isRunning", "name" ],
        "type" : "object",
        "properties" : {
          "customMetadata" : {
            "$ref" : "#/components/schemas/CustomMetadata"
          },
          "id" : {
            "type" : "string",
            "description" : "The id of the asset",
            "example" : "123abcde-4567-8910-1112-fghi1314jklm"
          },
          "isRunning" : {
            "type" : "boolean",
            "description" : "The running status of the asset. Returns True for On, and False for Off."
          },
          "location" : {
            "$ref" : "#/components/schemas/AssetLocation"
          },
          "locationDataInput" : {
            "$ref" : "#/components/schemas/AssetResponse_locationDataInput"
          },
          "locationType" : {
            "$ref" : "#/components/schemas/LocationType"
          },
          "name" : {
            "$ref" : "#/components/schemas/AssetName"
          },
          "parentAsset" : {
            "$ref" : "#/components/schemas/AssetResponse_parentAsset"
          },
          "runningStatusDataInput" : {
            "$ref" : "#/components/schemas/AssetResponse_runningStatusDataInput"
          },
          "tags" : {
            "type" : "array",
            "description" : "The list of [tags](https://kb.samsara.com/hc/en-us/articles/360026674631-Using-Tags-and-Tag-Nesting) associated with the Industrial Asset. **By default**: empty. Can be set or updated through the Samsara Dashboard or the API at any time.",
            "items" : {
              "$ref" : "#/components/schemas/tagTinyResponse"
            }
          }
        },
        "description" : "Asset"
      },
      "Attribute" : {
        "type" : "object",
        "properties" : {
          "attributeType" : {
            "type" : "string",
            "description" : "Denotes the data type of the attribute's values.",
            "example" : "string",
            "enum" : [ "string", "number" ],
            "default" : "string"
          },
          "attributeValueQuantity" : {
            "type" : "string",
            "description" : "Defines whether or not this attribute can be used on the same entity many times (with different values).",
            "example" : "multi",
            "enum" : [ "single", "multi" ],
            "default" : "multi"
          },
          "entityType" : {
            "type" : "string",
            "description" : "Denotes the type of entity, driver or vehicle.",
            "example" : "vehicle",
            "enum" : [ "driver", "vehicle" ]
          },
          "id" : {
            "type" : "string",
            "description" : "The samsara id of the attribute object.",
            "example" : "123e4567-e89b-12d3-a456-426614174000"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of attribute.",
            "example" : "License Certifications"
          },
          "numberValues" : {
            "type" : "array",
            "description" : "Number values that can be associated with this attribute",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "stringValues" : {
            "type" : "array",
            "description" : "String values that can be associated with this attribute",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "AttributeEntity" : {
        "type" : "object",
        "properties" : {
          "entityId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "externalIds" : {
            "type" : "object",
            "properties" : { },
            "description" : "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
            "example" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            }
          },
          "name" : {
            "type" : "string"
          },
          "numberValues" : {
            "type" : "array",
            "description" : "Number values that are associated with this attribute.",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "stringValues" : {
            "type" : "array",
            "description" : "String values that are associated with this attribute.",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "AttributeExpanded" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Attribute"
        }, {
          "required" : [ "entities" ],
          "type" : "object",
          "properties" : {
            "entities" : {
              "type" : "array",
              "description" : "Entities that this attribute is applied onto",
              "items" : {
                "$ref" : "#/components/schemas/AttributeEntity"
              }
            }
          }
        } ]
      },
      "AttributeExpandedResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AttributeExpanded"
          }
        }
      },
      "AttributeResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Attribute"
          }
        }
      },
      "CameraMediaGetCameraMediaBadRequestResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Invalid value for parameter."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "Bad request parameters",
        "example" : {
          "message" : "Invalid value for parameter.",
          "requestId" : "8916e1c1"
        }
      },
      "CameraMediaGetCameraMediaInternalErrorResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Failed to execute GraphQL query."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "An internal server error occurred",
        "example" : {
          "message" : "Failed to execute GraphQL query.",
          "requestId" : "8916e1c1"
        }
      },
      "CameraMediaGetCameraMediaNotFoundResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Object not found."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "Resource not found",
        "example" : {
          "message" : "Object not found.",
          "requestId" : "8916e1c1"
        }
      },
      "CameraMediaGetCameraMediaNotImplementedResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Not implemented."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "Endpoint is not yet implemented",
        "example" : {
          "message" : "Not implemented.",
          "requestId" : "8916e1c1"
        }
      },
      "CameraMediaGetCameraMediaResponseBody" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "description" : "List of vehicle and their camera media.",
            "example" : [ {
              "cameras" : [ {
                "id" : "230942",
                "images" : [ {
                  "captureTime" : "2015-09-15T14:00:12-04:00",
                  "imageData" : [ {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  } ]
                }, {
                  "captureTime" : "2015-09-15T14:00:12-04:00",
                  "imageData" : [ {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  } ]
                }, {
                  "captureTime" : "2015-09-15T14:00:12-04:00",
                  "imageData" : [ {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  } ]
                } ],
                "name" : "GTTU-ASS-UXD",
                "serial" : "CSS6-23A-HJF"
              }, {
                "id" : "230942",
                "images" : [ {
                  "captureTime" : "2015-09-15T14:00:12-04:00",
                  "imageData" : [ {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  } ]
                }, {
                  "captureTime" : "2015-09-15T14:00:12-04:00",
                  "imageData" : [ {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  } ]
                }, {
                  "captureTime" : "2015-09-15T14:00:12-04:00",
                  "imageData" : [ {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  } ]
                } ],
                "name" : "GTTU-ASS-UXD",
                "serial" : "CSS6-23A-HJF"
              }, {
                "id" : "230942",
                "images" : [ {
                  "captureTime" : "2015-09-15T14:00:12-04:00",
                  "imageData" : [ {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  } ]
                }, {
                  "captureTime" : "2015-09-15T14:00:12-04:00",
                  "imageData" : [ {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  } ]
                }, {
                  "captureTime" : "2015-09-15T14:00:12-04:00",
                  "imageData" : [ {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  } ]
                } ],
                "name" : "GTTU-ASS-UXD",
                "serial" : "CSS6-23A-HJF"
              } ],
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "494123",
              "name" : "H055494"
            }, {
              "cameras" : [ {
                "id" : "230942",
                "images" : [ {
                  "captureTime" : "2015-09-15T14:00:12-04:00",
                  "imageData" : [ {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  } ]
                }, {
                  "captureTime" : "2015-09-15T14:00:12-04:00",
                  "imageData" : [ {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  } ]
                }, {
                  "captureTime" : "2015-09-15T14:00:12-04:00",
                  "imageData" : [ {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  } ]
                } ],
                "name" : "GTTU-ASS-UXD",
                "serial" : "CSS6-23A-HJF"
              }, {
                "id" : "230942",
                "images" : [ {
                  "captureTime" : "2015-09-15T14:00:12-04:00",
                  "imageData" : [ {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  } ]
                }, {
                  "captureTime" : "2015-09-15T14:00:12-04:00",
                  "imageData" : [ {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  } ]
                }, {
                  "captureTime" : "2015-09-15T14:00:12-04:00",
                  "imageData" : [ {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  } ]
                } ],
                "name" : "GTTU-ASS-UXD",
                "serial" : "CSS6-23A-HJF"
              }, {
                "id" : "230942",
                "images" : [ {
                  "captureTime" : "2015-09-15T14:00:12-04:00",
                  "imageData" : [ {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  } ]
                }, {
                  "captureTime" : "2015-09-15T14:00:12-04:00",
                  "imageData" : [ {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  } ]
                }, {
                  "captureTime" : "2015-09-15T14:00:12-04:00",
                  "imageData" : [ {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  } ]
                } ],
                "name" : "GTTU-ASS-UXD",
                "serial" : "CSS6-23A-HJF"
              } ],
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "494123",
              "name" : "H055494"
            }, {
              "cameras" : [ {
                "id" : "230942",
                "images" : [ {
                  "captureTime" : "2015-09-15T14:00:12-04:00",
                  "imageData" : [ {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  } ]
                }, {
                  "captureTime" : "2015-09-15T14:00:12-04:00",
                  "imageData" : [ {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  } ]
                }, {
                  "captureTime" : "2015-09-15T14:00:12-04:00",
                  "imageData" : [ {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  } ]
                } ],
                "name" : "GTTU-ASS-UXD",
                "serial" : "CSS6-23A-HJF"
              }, {
                "id" : "230942",
                "images" : [ {
                  "captureTime" : "2015-09-15T14:00:12-04:00",
                  "imageData" : [ {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  } ]
                }, {
                  "captureTime" : "2015-09-15T14:00:12-04:00",
                  "imageData" : [ {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  } ]
                }, {
                  "captureTime" : "2015-09-15T14:00:12-04:00",
                  "imageData" : [ {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  } ]
                } ],
                "name" : "GTTU-ASS-UXD",
                "serial" : "CSS6-23A-HJF"
              }, {
                "id" : "230942",
                "images" : [ {
                  "captureTime" : "2015-09-15T14:00:12-04:00",
                  "imageData" : [ {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  } ]
                }, {
                  "captureTime" : "2015-09-15T14:00:12-04:00",
                  "imageData" : [ {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  } ]
                }, {
                  "captureTime" : "2015-09-15T14:00:12-04:00",
                  "imageData" : [ {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  }, {
                    "cameraView" : "`frontFacing`",
                    "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                    "urlExpiryTime" : "2019-06-13T19:08:25Z"
                  } ]
                } ],
                "name" : "GTTU-ASS-UXD",
                "serial" : "CSS6-23A-HJF"
              } ],
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "494123",
              "name" : "H055494"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/VehicleCameraMediaObjectResponseBody"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/GoaPaginationResponseResponseBody"
          }
        },
        "example" : {
          "data" : [ {
            "cameras" : [ {
              "id" : "230942",
              "images" : [ {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              }, {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              }, {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              } ],
              "name" : "GTTU-ASS-UXD",
              "serial" : "CSS6-23A-HJF"
            }, {
              "id" : "230942",
              "images" : [ {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              }, {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              }, {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              } ],
              "name" : "GTTU-ASS-UXD",
              "serial" : "CSS6-23A-HJF"
            }, {
              "id" : "230942",
              "images" : [ {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              }, {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              }, {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              } ],
              "name" : "GTTU-ASS-UXD",
              "serial" : "CSS6-23A-HJF"
            } ],
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "id" : "494123",
            "name" : "H055494"
          }, {
            "cameras" : [ {
              "id" : "230942",
              "images" : [ {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              }, {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              }, {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              } ],
              "name" : "GTTU-ASS-UXD",
              "serial" : "CSS6-23A-HJF"
            }, {
              "id" : "230942",
              "images" : [ {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              }, {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              }, {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              } ],
              "name" : "GTTU-ASS-UXD",
              "serial" : "CSS6-23A-HJF"
            }, {
              "id" : "230942",
              "images" : [ {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              }, {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              }, {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              } ],
              "name" : "GTTU-ASS-UXD",
              "serial" : "CSS6-23A-HJF"
            } ],
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "id" : "494123",
            "name" : "H055494"
          }, {
            "cameras" : [ {
              "id" : "230942",
              "images" : [ {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              }, {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              }, {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              } ],
              "name" : "GTTU-ASS-UXD",
              "serial" : "CSS6-23A-HJF"
            }, {
              "id" : "230942",
              "images" : [ {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              }, {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              }, {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              } ],
              "name" : "GTTU-ASS-UXD",
              "serial" : "CSS6-23A-HJF"
            }, {
              "id" : "230942",
              "images" : [ {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              }, {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              }, {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              } ],
              "name" : "GTTU-ASS-UXD",
              "serial" : "CSS6-23A-HJF"
            } ],
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "id" : "494123",
            "name" : "H055494"
          }, {
            "cameras" : [ {
              "id" : "230942",
              "images" : [ {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              }, {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              }, {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              } ],
              "name" : "GTTU-ASS-UXD",
              "serial" : "CSS6-23A-HJF"
            }, {
              "id" : "230942",
              "images" : [ {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              }, {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              }, {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              } ],
              "name" : "GTTU-ASS-UXD",
              "serial" : "CSS6-23A-HJF"
            }, {
              "id" : "230942",
              "images" : [ {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              }, {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              }, {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              } ],
              "name" : "GTTU-ASS-UXD",
              "serial" : "CSS6-23A-HJF"
            } ],
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "id" : "494123",
            "name" : "H055494"
          } ],
          "pagination" : {
            "endCursor" : "MjkY",
            "hasNextPage" : true
          }
        }
      },
      "CameraObjectResponseBody" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "ID of the camera.",
            "example" : "230942"
          },
          "images" : {
            "type" : "array",
            "description" : "List of image objects.",
            "example" : [ {
              "captureTime" : "2015-09-15T14:00:12-04:00",
              "imageData" : [ {
                "cameraView" : "`frontFacing`",
                "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                "urlExpiryTime" : "2019-06-13T19:08:25Z"
              }, {
                "cameraView" : "`frontFacing`",
                "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                "urlExpiryTime" : "2019-06-13T19:08:25Z"
              }, {
                "cameraView" : "`frontFacing`",
                "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                "urlExpiryTime" : "2019-06-13T19:08:25Z"
              } ]
            }, {
              "captureTime" : "2015-09-15T14:00:12-04:00",
              "imageData" : [ {
                "cameraView" : "`frontFacing`",
                "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                "urlExpiryTime" : "2019-06-13T19:08:25Z"
              }, {
                "cameraView" : "`frontFacing`",
                "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                "urlExpiryTime" : "2019-06-13T19:08:25Z"
              }, {
                "cameraView" : "`frontFacing`",
                "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                "urlExpiryTime" : "2019-06-13T19:08:25Z"
              } ]
            }, {
              "captureTime" : "2015-09-15T14:00:12-04:00",
              "imageData" : [ {
                "cameraView" : "`frontFacing`",
                "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                "urlExpiryTime" : "2019-06-13T19:08:25Z"
              }, {
                "cameraView" : "`frontFacing`",
                "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                "urlExpiryTime" : "2019-06-13T19:08:25Z"
              }, {
                "cameraView" : "`frontFacing`",
                "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                "urlExpiryTime" : "2019-06-13T19:08:25Z"
              } ]
            }, {
              "captureTime" : "2015-09-15T14:00:12-04:00",
              "imageData" : [ {
                "cameraView" : "`frontFacing`",
                "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                "urlExpiryTime" : "2019-06-13T19:08:25Z"
              }, {
                "cameraView" : "`frontFacing`",
                "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                "urlExpiryTime" : "2019-06-13T19:08:25Z"
              }, {
                "cameraView" : "`frontFacing`",
                "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                "urlExpiryTime" : "2019-06-13T19:08:25Z"
              } ]
            } ],
            "items" : {
              "$ref" : "#/components/schemas/ImageObjectResponseBody"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the camera.",
            "example" : "GTTU-ASS-UXD"
          },
          "serial" : {
            "type" : "string",
            "description" : "Serial of the camera.",
            "example" : "CSS6-23A-HJF"
          }
        },
        "example" : {
          "id" : "230942",
          "images" : [ {
            "captureTime" : "2015-09-15T14:00:12-04:00",
            "imageData" : [ {
              "cameraView" : "`frontFacing`",
              "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
              "urlExpiryTime" : "2019-06-13T19:08:25Z"
            }, {
              "cameraView" : "`frontFacing`",
              "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
              "urlExpiryTime" : "2019-06-13T19:08:25Z"
            }, {
              "cameraView" : "`frontFacing`",
              "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
              "urlExpiryTime" : "2019-06-13T19:08:25Z"
            } ]
          }, {
            "captureTime" : "2015-09-15T14:00:12-04:00",
            "imageData" : [ {
              "cameraView" : "`frontFacing`",
              "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
              "urlExpiryTime" : "2019-06-13T19:08:25Z"
            }, {
              "cameraView" : "`frontFacing`",
              "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
              "urlExpiryTime" : "2019-06-13T19:08:25Z"
            }, {
              "cameraView" : "`frontFacing`",
              "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
              "urlExpiryTime" : "2019-06-13T19:08:25Z"
            } ]
          }, {
            "captureTime" : "2015-09-15T14:00:12-04:00",
            "imageData" : [ {
              "cameraView" : "`frontFacing`",
              "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
              "urlExpiryTime" : "2019-06-13T19:08:25Z"
            }, {
              "cameraView" : "`frontFacing`",
              "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
              "urlExpiryTime" : "2019-06-13T19:08:25Z"
            }, {
              "cameraView" : "`frontFacing`",
              "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
              "urlExpiryTime" : "2019-06-13T19:08:25Z"
            } ]
          }, {
            "captureTime" : "2015-09-15T14:00:12-04:00",
            "imageData" : [ {
              "cameraView" : "`frontFacing`",
              "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
              "urlExpiryTime" : "2019-06-13T19:08:25Z"
            }, {
              "cameraView" : "`frontFacing`",
              "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
              "urlExpiryTime" : "2019-06-13T19:08:25Z"
            }, {
              "cameraView" : "`frontFacing`",
              "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
              "urlExpiryTime" : "2019-06-13T19:08:25Z"
            } ]
          } ],
          "name" : "GTTU-ASS-UXD",
          "serial" : "CSS6-23A-HJF"
        }
      },
      "CameraSerial" : {
        "type" : "string",
        "description" : "The serial number of the camera installed in the vehicle",
        "example" : "CNCK-VT8-XA8"
      },
      "CarrierProposedAssignment" : {
        "required" : [ "activeTime", "id" ],
        "type" : "object",
        "properties" : {
          "acceptedTime" : {
            "$ref" : "#/components/schemas/CarrierProposedAssignmentAcceptedTime"
          },
          "activeTime" : {
            "$ref" : "#/components/schemas/CarrierProposedAssignmentActiveTime"
          },
          "driver" : {
            "$ref" : "#/components/schemas/CarrierProposedAssignmentDriver"
          },
          "firstSeenTime" : {
            "$ref" : "#/components/schemas/CarrierProposedAssignmentFirstSeenTime"
          },
          "id" : {
            "$ref" : "#/components/schemas/CarrierProposedAssignmentId"
          },
          "rejectedTime" : {
            "$ref" : "#/components/schemas/CarrierProposedAssignmentRejectedTime"
          },
          "shippingDocs" : {
            "$ref" : "#/components/schemas/CarrierProposedAssignmentShippingDocs"
          },
          "trailers" : {
            "$ref" : "#/components/schemas/CarrierProposedAssignmentTrailers"
          },
          "vehicle" : {
            "$ref" : "#/components/schemas/CarrierProposedAssignmentVehicle"
          }
        },
        "description" : "A carrier proposed assignment object"
      },
      "CarrierProposedAssignmentAcceptedTime" : {
        "type" : "string",
        "description" : "Time when the driver accepted this assignment in the mobile app. Will be omitted if the driver hasn't accepted this assignment. RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
        "example" : "2020-01-27T07:06:25Z"
      },
      "CarrierProposedAssignmentActiveTime" : {
        "type" : "string",
        "description" : "Time after which this assignment will be active and visible to the driver on the mobile app. Not setting it makes it active now. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.",
        "example" : "2020-01-27T07:06:25Z"
      },
      "CarrierProposedAssignmentDriver" : {
        "allOf" : [ {
          "type" : "object",
          "description" : "The driver that this assignment is for."
        }, {
          "$ref" : "#/components/schemas/driverTinyResponse"
        } ]
      },
      "CarrierProposedAssignmentDriverId" : {
        "type" : "string",
        "description" : "Samsara ID for the driver that this assignment is for.",
        "example" : "42"
      },
      "CarrierProposedAssignmentFirstSeenTime" : {
        "type" : "string",
        "description" : "Time when the driver first saw this assignment in the mobile app. Will be omitted if the driver hasn't seen this assignment yet. RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
        "example" : "2020-01-27T07:06:25Z"
      },
      "CarrierProposedAssignmentId" : {
        "type" : "string",
        "description" : "Samsara ID for the assignment.",
        "example" : "08b3aeada5f4ab3010c0b4efa28d2d1890dbf8d48d2d"
      },
      "CarrierProposedAssignmentRejectedTime" : {
        "type" : "string",
        "description" : "Time when the driver rejected this assignment in the mobile app. Will be omitted if the driver hasn't rejected this assignment. RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
        "example" : "2020-01-27T07:06:25Z"
      },
      "CarrierProposedAssignmentResponse" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/CarrierProposedAssignment"
          }
        },
        "description" : "A carrier-proposed assignment response object."
      },
      "CarrierProposedAssignmentShippingDocs" : {
        "maxLength" : 40,
        "type" : "string",
        "description" : "Shipping Documents that this assignment will propose to the driver.",
        "example" : "Delivery 123, chips and soda"
      },
      "CarrierProposedAssignmentTrailerNames" : {
        "type" : "array",
        "description" : "Names of trailers to propose.",
        "example" : [ "Trailer123", "TrailerABC" ],
        "items" : {
          "type" : "string"
        }
      },
      "CarrierProposedAssignmentTrailers" : {
        "type" : "array",
        "description" : "Trailers that this assignment will propose to the driver.",
        "items" : {
          "$ref" : "#/components/schemas/trailerNameOnlyResponse"
        }
      },
      "CarrierProposedAssignmentVehicle" : {
        "allOf" : [ {
          "type" : "object",
          "description" : "Vehicle that this assignment will propose to the driver."
        }, {
          "$ref" : "#/components/schemas/vehicleTinyResponse"
        } ]
      },
      "CarrierProposedAssignmentVehicleId" : {
        "type" : "string",
        "description" : "Samsara ID for the vehicle to propose.",
        "example" : "123"
      },
      "Contact" : {
        "required" : [ "email", "firstName", "id", "lastName", "phone" ],
        "type" : "object",
        "properties" : {
          "email" : {
            "$ref" : "#/components/schemas/ContactEmail"
          },
          "firstName" : {
            "$ref" : "#/components/schemas/ContactFirstName"
          },
          "id" : {
            "$ref" : "#/components/schemas/ContactId"
          },
          "lastName" : {
            "$ref" : "#/components/schemas/ContactLastName"
          },
          "phone" : {
            "$ref" : "#/components/schemas/ContactPhone"
          }
        },
        "description" : "Information about a notification contact for alerts."
      },
      "ContactEmail" : {
        "maxLength" : 255,
        "type" : "string",
        "description" : "Email address of the contact.",
        "example" : "jane.jones@yahoo.com"
      },
      "ContactFirstName" : {
        "maxLength" : 255,
        "type" : "string",
        "description" : "First name of the contact.",
        "example" : "Jane"
      },
      "ContactId" : {
        "type" : "string",
        "description" : "ID of the contact.",
        "example" : "22408"
      },
      "ContactLastName" : {
        "maxLength" : 255,
        "type" : "string",
        "description" : "Last name of the contact.",
        "example" : "Jones"
      },
      "ContactPhone" : {
        "maxLength" : 255,
        "type" : "string",
        "description" : "Phone number of the contact.",
        "example" : "111-222-3344"
      },
      "ContactResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Contact"
          }
        },
        "description" : "A single contact."
      },
      "CreateAddressRequest" : {
        "required" : [ "formattedAddress", "geofence", "name" ],
        "type" : "object",
        "properties" : {
          "addressTypes" : {
            "type" : "array",
            "description" : "Reporting location type associated with the address (used for ELD reporting purposes).",
            "items" : {
              "type" : "string",
              "example" : "yard",
              "enum" : [ "yard", "shortHaul", "workforceSite" ]
            }
          },
          "contactIds" : {
            "type" : "array",
            "description" : "An array of Contact IDs associated with this Address.",
            "items" : {
              "type" : "string",
              "example" : "22408"
            }
          },
          "externalIds" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
            "example" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            }
          },
          "formattedAddress" : {
            "maxLength" : 1024,
            "type" : "string",
            "description" : "The full street address for this address/geofence, as it might be recognized by Google Maps.",
            "example" : "350 Rhode Island St, San Francisco, CA"
          },
          "geofence" : {
            "$ref" : "#/components/schemas/CreateAddressRequest_geofence"
          },
          "latitude" : {
            "type" : "number",
            "description" : "Latitude of the address. Will be geocoded from `formattedAddress` if not provided.",
            "format" : "double",
            "example" : 37.765363
          },
          "longitude" : {
            "type" : "number",
            "description" : "Longitude of the address. Will be geocoded from `formattedAddress` if not provided.",
            "format" : "double",
            "example" : -122.4029238
          },
          "name" : {
            "maxLength" : 255,
            "type" : "string",
            "description" : "Name of the address.",
            "example" : "Samsara HQ"
          },
          "notes" : {
            "maxLength" : 280,
            "type" : "string",
            "description" : "Notes about the address.",
            "example" : "Hours of operation: 8am - 6pm; Truck entrance on the Rhode Island street side."
          },
          "tagIds" : {
            "type" : "array",
            "description" : "An array of IDs of tags to associate with this address.",
            "items" : {
              "type" : "string",
              "example" : "3914"
            }
          }
        },
        "description" : "A request body to create an Address."
      },
      "CreateAttributeRequest" : {
        "required" : [ "attributeType", "attributeValueQuantity", "entityType", "name" ],
        "type" : "object",
        "properties" : {
          "attributeType" : {
            "type" : "string",
            "description" : "Denotes the data type of the attribute's values.",
            "example" : "string",
            "enum" : [ "string", "number" ],
            "default" : "string"
          },
          "attributeValueQuantity" : {
            "type" : "string",
            "description" : "Defines whether or not this attribute can be used on the same entity many times (with different values).",
            "example" : "multi",
            "enum" : [ "single", "multi" ],
            "default" : "multi"
          },
          "entities" : {
            "type" : "array",
            "description" : "Entities that will be applied to this attribute",
            "items" : {
              "$ref" : "#/components/schemas/CreateAttributeRequest_entities"
            }
          },
          "entityType" : {
            "type" : "string",
            "description" : "Denotes the type of entity, driver or vehicle.",
            "example" : "vehicle",
            "enum" : [ "driver", "vehicle" ]
          },
          "name" : {
            "type" : "string",
            "description" : "Name",
            "example" : "License Certifications"
          },
          "numberValues" : {
            "type" : "array",
            "description" : "Number values that can be associated with this attribute",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "stringValues" : {
            "type" : "array",
            "description" : "String values that can be associated with this attribute",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "A request body to create an Attribute."
      },
      "CreateCarrierProposedAssignmentRequest" : {
        "required" : [ "driverId", "vehicleId" ],
        "type" : "object",
        "properties" : {
          "activeTime" : {
            "type" : "string",
            "description" : "Time after which this assignment will be active and visible to the driver on the mobile app. Not setting it makes it active now. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.",
            "example" : "2020-01-27T07:06:25Z"
          },
          "driverId" : {
            "type" : "string",
            "description" : "Samsara ID for the driver that this assignment is for.",
            "example" : "42"
          },
          "shippingDocs" : {
            "maxLength" : 40,
            "type" : "string",
            "description" : "Shipping Documents that this assignment will propose to the driver.",
            "example" : "Delivery 123, chips and soda"
          },
          "trailerNames" : {
            "type" : "array",
            "description" : "Names of trailers to propose.",
            "example" : [ "Trailer123", "TrailerABC" ],
            "items" : {
              "type" : "string"
            }
          },
          "vehicleId" : {
            "type" : "string",
            "description" : "Samsara ID for the vehicle to propose.",
            "example" : "123"
          }
        },
        "description" : "New assignment for a driver."
      },
      "CreateContactRequest" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "maxLength" : 255,
            "type" : "string",
            "description" : "Email address of the contact.",
            "example" : "jane.jones@yahoo.com"
          },
          "firstName" : {
            "maxLength" : 255,
            "type" : "string",
            "description" : "First name of the contact.",
            "example" : "Jane"
          },
          "lastName" : {
            "maxLength" : 255,
            "type" : "string",
            "description" : "Last name of the contact.",
            "example" : "Jones"
          },
          "phone" : {
            "maxLength" : 255,
            "type" : "string",
            "description" : "Phone number of the contact.",
            "example" : "111-222-3344"
          }
        },
        "description" : "Information for adding a notification contact for alerts."
      },
      "CreateDriverRequest" : {
        "required" : [ "name", "password", "username" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateDriverRequest_attributes"
            }
          },
          "carrierSettings" : {
            "$ref" : "#/components/schemas/CreateDriverRequest_carrierSettings"
          },
          "currentIdCardCode" : {
            "type" : "string",
            "description" : "The ID Card Code on the back of the physical card assigned to the driver.  Contact Samsara if you would like to enable this feature.",
            "example" : "941767043"
          },
          "eldAdverseWeatherExemptionEnabled" : {
            "type" : "boolean",
            "description" : "Flag indicating this driver may use Adverse Weather exemptions in ELD logs."
          },
          "eldBigDayExemptionEnabled" : {
            "type" : "boolean",
            "description" : "Flag indicating this driver may use Big Day exemption in ELD logs."
          },
          "eldDayStartHour" : {
            "type" : "integer",
            "description" : "`0` indicating midnight-to-midnight ELD driving hours, `12` to indicate noon-to-noon driving hours."
          },
          "eldExempt" : {
            "type" : "boolean",
            "description" : "Flag indicating this driver is exempt from the Electronic Logging Mandate."
          },
          "eldExemptReason" : {
            "type" : "string",
            "description" : "Reason that this driver is exempt from the Electronic Logging Mandate (see eldExempt).",
            "example" : "Bad driver"
          },
          "eldPcEnabled" : {
            "type" : "boolean",
            "description" : "Flag indicating this driver may select the Personal Conveyance duty status in ELD logs."
          },
          "eldYmEnabled" : {
            "type" : "boolean",
            "description" : "Flag indicating this driver may select the Yard Move duty status in ELD logs."
          },
          "externalIds" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
            "example" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            }
          },
          "licenseNumber" : {
            "type" : "string",
            "description" : "Driver's state issued license number. The combination of this number and `licenseState` must be unique.",
            "example" : "E1234567"
          },
          "licenseState" : {
            "type" : "string",
            "description" : "Abbreviation of US state, Canadian province, or US territory that issued driver's license.",
            "example" : "CA"
          },
          "locale" : {
            "type" : "string",
            "description" : "Locale override (uncommon). These are specified by ISO 3166-2 country codes for supported locales.",
            "enum" : [ "us", "at", "be", "ca", "gb", "fr", "de", "ie", "it", "lu", "mx", "nl", "es", "ch", "pr" ]
          },
          "name" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string",
            "description" : "Driver's name.",
            "example" : "Susan Jones"
          },
          "notes" : {
            "maxLength" : 4096,
            "type" : "string",
            "description" : "Notes about the driver.",
            "example" : "Also goes by the nickname Furious Fred."
          },
          "password" : {
            "type" : "string",
            "description" : "Password that the driver can use to login to the Samsara driver app.",
            "example" : "aSecurePassword1234"
          },
          "phone" : {
            "maxLength" : 255,
            "type" : "string",
            "description" : "Phone number of the driver.",
            "example" : "5558234327"
          },
          "staticAssignedVehicleId" : {
            "type" : "string",
            "description" : "ID of vehicle that the driver is permanently assigned to. (uncommon).",
            "example" : "456"
          },
          "tachographCardNumber" : {
            "type" : "string",
            "description" : "Driver's assigned tachograph card number (Europe specific)",
            "example" : "1000000492436002"
          },
          "tagIds" : {
            "type" : "array",
            "description" : "IDs of tags the driver is associated with.",
            "items" : {
              "type" : "string",
              "example" : "147"
            }
          },
          "timezone" : {
            "type" : "string",
            "description" : "Home terminal timezone, in order to indicate what time zone should be used to calculate the ELD logs. Driver timezones use [IANA timezone database](https://www.iana.org/time-zones) keys (e.g. `America/Los_Angeles`, `America/New_York`, `Europe/London`, etc.). You can find a mapping of common timezone formats to IANA timezone keys [here](https://unicode.org/cldr/charts/latest/supplemental/zone_tzid.html).",
            "example" : "America/Los_Angeles"
          },
          "username" : {
            "maxLength" : 189,
            "minLength" : 1,
            "type" : "string",
            "description" : "Driver's login username into the driver app. The username may not contain spaces or the '@' symbol. The username must be unique.",
            "example" : "SusanJones"
          },
          "vehicleGroupTagId" : {
            "type" : "string",
            "description" : "Tag ID which determines which vehicles a driver will see when selecting vehicles.",
            "example" : "342417"
          }
        },
        "description" : "Driver that should be created."
      },
      "CreateDvirRequest" : {
        "required" : [ "authorId", "safetyStatus", "type" ],
        "type" : "object",
        "properties" : {
          "authorId" : {
            "type" : "string",
            "description" : "Samsara user ID of the mechanic creating the DVIR.",
            "example" : "11"
          },
          "licensePlate" : {
            "maxLength" : 12,
            "type" : "string",
            "description" : "The license plate of this vehicle.",
            "example" : "XHK1234"
          },
          "location" : {
            "type" : "string",
            "description" : "Optional string if your jurisdiction requires a location of the DVIR.",
            "example" : "350 Rhode Island St Ste. 400S, San Francisco, CA 94103"
          },
          "mechanicNotes" : {
            "type" : "string",
            "description" : "The mechanics notes on the DVIR.",
            "example" : "Replaced headlight on passenger side."
          },
          "odometerMeters" : {
            "type" : "integer",
            "description" : "The odometer reading in meters.",
            "example" : 14010293
          },
          "resolvedDefectIds" : {
            "type" : "array",
            "description" : "Array of ids for defects being resolved with this DVIR.",
            "items" : {
              "type" : "string"
            }
          },
          "safetyStatus" : {
            "type" : "string",
            "description" : "Whether or not this vehicle or trailer is safe to drive.",
            "example" : "safe",
            "enum" : [ "safe", "unsafe" ]
          },
          "trailerId" : {
            "type" : "string",
            "description" : "Id of trailer being inspected. Either vehicleId or trailerId must be provided.",
            "example" : "11"
          },
          "type" : {
            "type" : "string",
            "description" : "Only type 'mechanic' is currently accepted.",
            "example" : "mechanic",
            "enum" : [ "mechanic" ]
          },
          "vehicleId" : {
            "type" : "string",
            "description" : "Id of vehicle being inspected. Either vehicleId or trailerId must be provided.",
            "example" : "10"
          }
        },
        "description" : "DVIR creation body"
      },
      "CreateTagRequest" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "addresses" : {
            "type" : "array",
            "description" : "The addresses that belong to this tag.",
            "items" : {
              "$ref" : "#/components/schemas/TaggedObjectId"
            }
          },
          "assets" : {
            "type" : "array",
            "description" : "The trailers, unpowered, and powered assets that belong to this tag.",
            "items" : {
              "$ref" : "#/components/schemas/TaggedObjectId"
            }
          },
          "drivers" : {
            "type" : "array",
            "description" : "The drivers that belong to this tag.",
            "items" : {
              "$ref" : "#/components/schemas/TaggedObjectId"
            }
          },
          "externalIds" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
            "example" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            }
          },
          "machines" : {
            "type" : "array",
            "description" : "The machines that belong to this tag.",
            "items" : {
              "$ref" : "#/components/schemas/TaggedObjectId"
            }
          },
          "name" : {
            "maxLength" : 191,
            "minLength" : 1,
            "type" : "string",
            "description" : "Name of this tag.",
            "example" : "California"
          },
          "parentTagId" : {
            "type" : "string",
            "description" : "If this tag is part a hierarchical tag tree, this is the ID of the parent tag, otherwise this will be omitted.",
            "example" : "4815"
          },
          "sensors" : {
            "type" : "array",
            "description" : "The sensors that belong to this tag.",
            "items" : {
              "$ref" : "#/components/schemas/TaggedObjectId"
            }
          },
          "vehicles" : {
            "type" : "array",
            "description" : "The vehicles that belong to this tag.",
            "items" : {
              "$ref" : "#/components/schemas/TaggedObjectId"
            }
          }
        }
      },
      "CreateUserRequest" : {
        "required" : [ "authType", "email", "name", "roles" ],
        "type" : "object",
        "properties" : {
          "authType" : {
            "type" : "string",
            "description" : "The authentication type the user uses to authenticate. To use SAML this organization must have a configured SAML integration.",
            "enum" : [ "default", "saml" ]
          },
          "email" : {
            "type" : "string",
            "description" : "The email address of this user.",
            "example" : "user@company.com"
          },
          "name" : {
            "type" : "string",
            "description" : "The first and last name of the user.",
            "example" : "Bob Smith"
          },
          "roles" : {
            "type" : "array",
            "description" : "The list of roles that applies to this user. A user may have \"organizational\" roles, which apply to the user at the organizational level, and \"tag-specific\" roles, which apply to the user for a given tag.",
            "items" : {
              "$ref" : "#/components/schemas/CreateUserRequest_roles"
            }
          }
        },
        "description" : "The user creation arguments"
      },
      "CurrentDutyStatus" : {
        "type" : "object",
        "properties" : {
          "hosStatusType" : {
            "$ref" : "#/components/schemas/hosStatusType"
          }
        },
        "description" : "The current HOS status type and time the driver started being in this status."
      },
      "CustomMetadata" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "The custom fields of an asset.",
        "example" : {
          "manufacturer" : "Samsara",
          "serialNumber" : "123ABC"
        }
      },
      "DataInputListResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "description" : "An array of data input data points. Each object in the array represents a data input and will contain its associated data points.",
            "items" : {
              "$ref" : "#/components/schemas/DataInputResponse"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/paginationResponse"
          }
        }
      },
      "DataInputResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/DataInputTinyResponse"
        }, {
          "type" : "object",
          "properties" : {
            "fftSpectraPoints" : {
              "type" : "array",
              "description" : "List of FFT spectra data points from the data input.",
              "items" : {
                "$ref" : "#/components/schemas/FftSpectraDataPoint"
              }
            },
            "j1939D1StatusPoints" : {
              "type" : "array",
              "description" : "List of active J1939D1 statuses.",
              "items" : {
                "$ref" : "#/components/schemas/J1939D1StatusDataPoint"
              }
            },
            "locationPoints" : {
              "type" : "array",
              "description" : "List of location data points from the data input.",
              "items" : {
                "$ref" : "#/components/schemas/LocationDataPoint"
              }
            },
            "numberPoints" : {
              "type" : "array",
              "description" : "List of numeric data points from the data input.",
              "items" : {
                "$ref" : "#/components/schemas/NumberDataPoint"
              }
            },
            "stringPoints" : {
              "type" : "array",
              "description" : "List of string data points from the data input.",
              "items" : {
                "$ref" : "#/components/schemas/StringDataPoint"
              }
            }
          }
        } ]
      },
      "DataInputSnapshot" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/DataInputTinyResponse"
        }, {
          "type" : "object",
          "properties" : {
            "fftSpectraPoint" : {
              "$ref" : "#/components/schemas/FftSpectraDataPoint"
            },
            "j1939D1StatusPoint" : {
              "$ref" : "#/components/schemas/J1939D1StatusDataPoint"
            },
            "locationPoint" : {
              "$ref" : "#/components/schemas/LocationDataPoint"
            },
            "numberPoint" : {
              "$ref" : "#/components/schemas/NumberDataPoint"
            },
            "stringPoint" : {
              "$ref" : "#/components/schemas/StringDataPoint"
            }
          }
        } ]
      },
      "DataInputSnapshotResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "description" : "An array of data inputs' latest data points. Each object in the array represents a data input and its most recent data point.",
            "items" : {
              "$ref" : "#/components/schemas/DataInputSnapshot"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/paginationResponse"
          }
        }
      },
      "DataInputTinyResponse" : {
        "type" : "object",
        "properties" : {
          "assetId" : {
            "type" : "string",
            "description" : "Unique identifier for the data input's asset.",
            "format" : "uuid",
            "example" : "74771078-5edb-4733-88f2-7242f520d1f1"
          },
          "dataGroup" : {
            "type" : "string",
            "description" : "Data group for this data input.",
            "format" : "string",
            "example" : "Flow"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique identifier for the data input.",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of this data input.",
            "format" : "string",
            "example" : "Pump Flow"
          },
          "units" : {
            "type" : "string",
            "description" : "Units of data for this data input.",
            "format" : "string",
            "example" : "Gallons Per Minute"
          }
        },
        "description" : "A minified data input object"
      },
      "DataInputsTinyResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "description" : "An array of data input objects. Each object contains the data input's name, ID, and other metadata.",
            "items" : {
              "$ref" : "#/components/schemas/DataInputTinyResponse"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/paginationResponse"
          }
        }
      },
      "Defect" : {
        "required" : [ "id", "isResolved" ],
        "type" : "object",
        "properties" : {
          "comment" : {
            "type" : "string",
            "description" : "Comment on the defect.",
            "example" : "Air Compressor not working"
          },
          "createdAtTime" : {
            "type" : "string",
            "description" : "Time when the defect was created. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.",
            "example" : "2020-01-27T07:06:25Z"
          },
          "defectType" : {
            "type" : "string",
            "description" : "The type of DVIR defect.",
            "example" : "Air Compressor"
          },
          "id" : {
            "type" : "string",
            "description" : "ID of the defect.",
            "example" : "18"
          },
          "isResolved" : {
            "type" : "boolean",
            "description" : "Signifies if this defect is resolved.",
            "example" : true
          },
          "mechanicNotes" : {
            "type" : "string",
            "description" : "The mechanics notes on the defect.",
            "example" : "Extremely large oddly shaped hole in passenger side window."
          },
          "mechanicNotesUpdatedAtTime" : {
            "type" : "string",
            "description" : "Time when mechanic notes were last updated. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.",
            "example" : "2020-01-27T07:06:25Z"
          },
          "resolvedAtTime" : {
            "type" : "string",
            "description" : "Time when this defect was resolved. Will not be returned if the defect is unresolved. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.",
            "example" : "2020-01-27T07:06:25Z"
          },
          "resolvedBy" : {
            "$ref" : "#/components/schemas/Defect_resolvedBy"
          },
          "trailer" : {
            "type" : "object",
            "allOf" : [ {
              "type" : "object",
              "description" : "The trailer this defect was submitted for."
            }, {
              "$ref" : "#/components/schemas/trailerTinyResponse"
            } ]
          },
          "vehicle" : {
            "type" : "object",
            "allOf" : [ {
              "type" : "object",
              "description" : "The vehicle this defect was submitted for."
            }, {
              "$ref" : "#/components/schemas/vehicleTinyResponse"
            } ]
          }
        }
      },
      "DefectPatch" : {
        "type" : "object",
        "properties" : {
          "isResolved" : {
            "type" : "boolean",
            "description" : "Resolves the defect. Must be `true`."
          },
          "mechanicNotes" : {
            "type" : "string",
            "description" : "The mechanics notes on the defect.",
            "example" : "Extremely large oddly shaped hole in passenger side window."
          },
          "resolvedAtTime" : {
            "type" : "string",
            "description" : "Time when defect was resolved. Defaults to now if not provided. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.",
            "example" : "2020-01-27T07:06:25Z"
          },
          "resolvedBy" : {
            "$ref" : "#/components/schemas/ResolvedBy"
          }
        },
        "description" : "Information about resolving a defect. If resolving a defect, must specify `isResolved` as `true` and `resolvedBy`."
      },
      "DefectResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Defect"
          }
        },
        "description" : "A single defect."
      },
      "DefectsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Defect"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/paginationResponse"
          }
        },
        "description" : "A list of defects."
      },
      "DistanceDrivenMeters" : {
        "type" : "number",
        "description" : "Distance driven in meters."
      },
      "DistanceTraveledObjectResponseBody" : {
        "type" : "object",
        "properties" : {
          "driveDistanceMeters" : {
            "type" : "number",
            "description" : "Distance driven in meters, rounded to two decimal places.",
            "format" : "double",
            "example" : 796625.28
          },
          "personalConveyanceDistanceMeters" : {
            "type" : "number",
            "description" : "Distance driven for personal conveyance, rounded to two decimal places.",
            "format" : "double",
            "example" : 27358.85
          },
          "yardMoveDistanceMeters" : {
            "type" : "number",
            "description" : "Distance driven for yard moves, rounded to two decimal places.",
            "format" : "double",
            "example" : 1287.48
          }
        },
        "example" : {
          "driveDistanceMeters" : 796625.28,
          "personalConveyanceDistanceMeters" : 27358.85,
          "yardMoveDistanceMeters" : 1287.48
        }
      },
      "DocumentPdfGenerationRequest" : {
        "required" : [ "documentId" ],
        "type" : "object",
        "properties" : {
          "documentId" : {
            "type" : "string",
            "description" : "ID of the document.",
            "example" : "6c8c0c01-206a-41a4-9d21-15b9978d04cb"
          }
        },
        "description" : "Identifies a document for PDF generation."
      },
      "DocumentPdfGenerationResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/DocumentPdfGenerationResponse_data"
          }
        },
        "description" : "Identifies a PDF generation job."
      },
      "DocumentPdfQueryResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/DocumentPdfQueryResponse_data"
          }
        },
        "description" : "A PDF of a document"
      },
      "DocumentTypesGetDocumentTypesBadRequestResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Invalid value for parameter."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "Bad request parameters",
        "example" : {
          "message" : "Invalid value for parameter.",
          "requestId" : "8916e1c1"
        }
      },
      "DocumentTypesGetDocumentTypesInternalErrorResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Failed to execute GraphQL query."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "An internal server error occurred",
        "example" : {
          "message" : "Failed to execute GraphQL query.",
          "requestId" : "8916e1c1"
        }
      },
      "DocumentTypesGetDocumentTypesResponseBody" : {
        "required" : [ "data", "pagination" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "description" : "List of all document types for the organization",
            "example" : [ {
              "conditionalFieldSections" : [ {
                "conditionalFieldFirstIndex" : 1,
                "conditionalFieldLastIndex" : 2,
                "triggeringFieldIndex" : 0,
                "triggeringFieldValue" : "Yes"
              } ],
              "fieldTypes" : [ {
                "fieldType" : "multipleChoice",
                "label" : "Was there damage?",
                "multipleChoiceFieldTypeMetaData" : [ {
                  "label" : "Yes"
                }, {
                  "label" : "No"
                } ],
                "requiredField" : true
              }, {
                "fieldType" : "photo",
                "label" : "Damage Photos",
                "requiredField" : false
              }, {
                "fieldType" : "number",
                "label" : "Number of vehicles impacted",
                "numberFieldTypeMetaData" : {
                  "numberOfDecimalPlaces" : 2
                },
                "requiredField" : false
              }, {
                "fieldType" : "dateTime",
                "label" : "Date and time",
                "requiredField" : true
              }, {
                "fieldType" : "signature",
                "label" : "Sign",
                "requiredField" : true,
                "signatureFieldTypeMetaData" : {
                  "legalText" : "Legal Text"
                }
              } ],
              "id" : "4aff772c-a7bb-45e6-8e41-6a53e34feb83",
              "name" : "Accident Report",
              "orgId" : 12345
            } ],
            "items" : {
              "$ref" : "#/components/schemas/getDocumentTypeResponseObjectResponseBody"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/GoaPaginationResponseResponseBody"
          }
        },
        "example" : {
          "data" : [ {
            "conditionalFieldSections" : [ {
              "conditionalFieldFirstIndex" : 1,
              "conditionalFieldLastIndex" : 2,
              "triggeringFieldIndex" : 0,
              "triggeringFieldValue" : "Yes"
            } ],
            "fieldTypes" : [ {
              "fieldType" : "multipleChoice",
              "label" : "Was there damage?",
              "multipleChoiceFieldTypeMetaData" : [ {
                "label" : "Yes"
              }, {
                "label" : "No"
              } ],
              "requiredField" : true
            }, {
              "fieldType" : "photo",
              "label" : "Damage Photos",
              "requiredField" : false
            }, {
              "fieldType" : "number",
              "label" : "Number of vehicles impacted",
              "numberFieldTypeMetaData" : {
                "numberOfDecimalPlaces" : 2
              },
              "requiredField" : false
            }, {
              "fieldType" : "dateTime",
              "label" : "Date and time",
              "requiredField" : true
            }, {
              "fieldType" : "signature",
              "label" : "Sign",
              "requiredField" : true,
              "signatureFieldTypeMetaData" : {
                "legalText" : "Legal Text"
              }
            } ],
            "id" : "4aff772c-a7bb-45e6-8e41-6a53e34feb83",
            "name" : "Accident Report",
            "orgId" : 12345
          } ],
          "pagination" : {
            "endCursor" : "MjkY",
            "hasNextPage" : true
          }
        }
      },
      "DocumentsGetDocumentBadRequestResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Invalid value for parameter."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "Bad request parameters",
        "example" : {
          "message" : "Invalid value for parameter.",
          "requestId" : "8916e1c1"
        }
      },
      "DocumentsGetDocumentInternalErrorResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Failed to execute GraphQL query."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "An internal server error occurred",
        "example" : {
          "message" : "Failed to execute GraphQL query.",
          "requestId" : "8916e1c1"
        }
      },
      "DocumentsGetDocumentRequestBody" : {
        "required" : [ "driverId" ],
        "type" : "object",
        "properties" : {
          "driverId" : {
            "type" : "string",
            "description" : "ID of the driver",
            "example" : "1234"
          }
        },
        "example" : {
          "driverId" : "1234"
        }
      },
      "DocumentsGetDocumentResponseBody" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/documentResponseObjectResponseBody"
          }
        },
        "example" : {
          "data" : {
            "conditionalFieldSections" : [ {
              "conditionalFieldFirstIndex" : 2949691048040286700,
              "conditionalFieldLastIndex" : 5188021910068834000,
              "triggeringFieldIndex" : 6312989348082117000,
              "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
            }, {
              "conditionalFieldFirstIndex" : 2949691048040286700,
              "conditionalFieldLastIndex" : 5188021910068834000,
              "triggeringFieldIndex" : 6312989348082117000,
              "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
            }, {
              "conditionalFieldFirstIndex" : 2949691048040286700,
              "conditionalFieldLastIndex" : 5188021910068834000,
              "triggeringFieldIndex" : 6312989348082117000,
              "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
            } ],
            "createdAtTime" : "1993-05-23T22:05:38Z",
            "documentType" : {
              "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
              "name" : "Fleet Truck List"
            },
            "driver" : {
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "45646",
              "name" : "Driver Bob"
            },
            "fields" : [ {
              "label" : "Load weight",
              "type" : "scannedDocument",
              "value" : {
                "barcodeValue" : {
                  "barcodeType" : "org.gs1.EAN-13",
                  "barcodeValue" : "0853883003114"
                },
                "dateTimeValue" : {
                  "dateTime" : "1988-11-10T02:42:05Z"
                },
                "multipleChoiceValue" : {
                  "selected" : false,
                  "value" : "Yes"
                },
                "numberValue" : 123,
                "photoValue" : {
                  "id" : "f5271458-21f9-4a9f-a290-780c6d8840ff",
                  "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                },
                "signatureValue" : {
                  "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                  "name" : "John Smith",
                  "signedAtTime" : "1996-02-21T06:57:25Z",
                  "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                },
                "stringValue" : "Red Truck"
              }
            }, {
              "label" : "Load weight",
              "type" : "scannedDocument",
              "value" : {
                "barcodeValue" : {
                  "barcodeType" : "org.gs1.EAN-13",
                  "barcodeValue" : "0853883003114"
                },
                "dateTimeValue" : {
                  "dateTime" : "1988-11-10T02:42:05Z"
                },
                "multipleChoiceValue" : {
                  "selected" : false,
                  "value" : "Yes"
                },
                "numberValue" : 123,
                "photoValue" : {
                  "id" : "f5271458-21f9-4a9f-a290-780c6d8840ff",
                  "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                },
                "signatureValue" : {
                  "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                  "name" : "John Smith",
                  "signedAtTime" : "1996-02-21T06:57:25Z",
                  "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                },
                "stringValue" : "Red Truck"
              }
            } ],
            "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
            "name" : "Dropoff Slip 123",
            "notes" : "Missing a crate",
            "routeStop" : {
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "494123",
              "name" : "Company Warehouse #1"
            },
            "state" : "submitted",
            "updatedAtTime" : "1985-01-12T07:25:57Z",
            "vehicle" : {
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "494123",
              "name" : "Fleet Truck #1"
            }
          }
        }
      },
      "DocumentsGetDocumentsBadRequestResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Invalid value for parameter."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "Bad request parameters",
        "example" : {
          "message" : "Invalid value for parameter.",
          "requestId" : "8916e1c1"
        }
      },
      "DocumentsGetDocumentsInternalErrorResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Failed to execute GraphQL query."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "An internal server error occurred",
        "example" : {
          "message" : "Failed to execute GraphQL query.",
          "requestId" : "8916e1c1"
        }
      },
      "DocumentsGetDocumentsResponseBody" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "description" : "Multiple documents.",
            "example" : [ {
              "conditionalFieldSections" : [ {
                "conditionalFieldFirstIndex" : 2949691048040286700,
                "conditionalFieldLastIndex" : 5188021910068834000,
                "triggeringFieldIndex" : 6312989348082117000,
                "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
              }, {
                "conditionalFieldFirstIndex" : 2949691048040286700,
                "conditionalFieldLastIndex" : 5188021910068834000,
                "triggeringFieldIndex" : 6312989348082117000,
                "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
              }, {
                "conditionalFieldFirstIndex" : 2949691048040286700,
                "conditionalFieldLastIndex" : 5188021910068834000,
                "triggeringFieldIndex" : 6312989348082117000,
                "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
              } ],
              "createdAtTime" : "1993-05-23T22:05:38Z",
              "documentType" : {
                "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                "name" : "Fleet Truck List"
              },
              "driver" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "45646",
                "name" : "Driver Bob"
              },
              "fields" : [ {
                "label" : "Load weight",
                "type" : "scannedDocument",
                "value" : {
                  "barcodeValue" : {
                    "barcodeType" : "org.gs1.EAN-13",
                    "barcodeValue" : "0853883003114"
                  },
                  "dateTimeValue" : {
                    "dateTime" : "1988-11-10T02:42:05Z"
                  },
                  "multipleChoiceValue" : {
                    "selected" : false,
                    "value" : "Yes"
                  },
                  "numberValue" : 123,
                  "photoValue" : {
                    "id" : "f5271458-21f9-4a9f-a290-780c6d8840ff",
                    "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                  },
                  "signatureValue" : {
                    "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                    "name" : "John Smith",
                    "signedAtTime" : "1996-02-21T06:57:25Z",
                    "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                  },
                  "stringValue" : "Red Truck"
                }
              }, {
                "label" : "Load weight",
                "type" : "scannedDocument",
                "value" : {
                  "barcodeValue" : {
                    "barcodeType" : "org.gs1.EAN-13",
                    "barcodeValue" : "0853883003114"
                  },
                  "dateTimeValue" : {
                    "dateTime" : "1988-11-10T02:42:05Z"
                  },
                  "multipleChoiceValue" : {
                    "selected" : false,
                    "value" : "Yes"
                  },
                  "numberValue" : 123,
                  "photoValue" : {
                    "id" : "f5271458-21f9-4a9f-a290-780c6d8840ff",
                    "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                  },
                  "signatureValue" : {
                    "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                    "name" : "John Smith",
                    "signedAtTime" : "1996-02-21T06:57:25Z",
                    "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                  },
                  "stringValue" : "Red Truck"
                }
              } ],
              "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
              "name" : "Dropoff Slip 123",
              "notes" : "Missing a crate",
              "routeStop" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "494123",
                "name" : "Company Warehouse #1"
              },
              "state" : "submitted",
              "updatedAtTime" : "1985-01-12T07:25:57Z",
              "vehicle" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "494123",
                "name" : "Fleet Truck #1"
              }
            }, {
              "conditionalFieldSections" : [ {
                "conditionalFieldFirstIndex" : 2949691048040286700,
                "conditionalFieldLastIndex" : 5188021910068834000,
                "triggeringFieldIndex" : 6312989348082117000,
                "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
              }, {
                "conditionalFieldFirstIndex" : 2949691048040286700,
                "conditionalFieldLastIndex" : 5188021910068834000,
                "triggeringFieldIndex" : 6312989348082117000,
                "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
              }, {
                "conditionalFieldFirstIndex" : 2949691048040286700,
                "conditionalFieldLastIndex" : 5188021910068834000,
                "triggeringFieldIndex" : 6312989348082117000,
                "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
              } ],
              "createdAtTime" : "1993-05-23T22:05:38Z",
              "documentType" : {
                "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                "name" : "Fleet Truck List"
              },
              "driver" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "45646",
                "name" : "Driver Bob"
              },
              "fields" : [ {
                "label" : "Load weight",
                "type" : "scannedDocument",
                "value" : {
                  "barcodeValue" : {
                    "barcodeType" : "org.gs1.EAN-13",
                    "barcodeValue" : "0853883003114"
                  },
                  "dateTimeValue" : {
                    "dateTime" : "1988-11-10T02:42:05Z"
                  },
                  "multipleChoiceValue" : {
                    "selected" : false,
                    "value" : "Yes"
                  },
                  "numberValue" : 123,
                  "photoValue" : {
                    "id" : "f5271458-21f9-4a9f-a290-780c6d8840ff",
                    "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                  },
                  "signatureValue" : {
                    "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                    "name" : "John Smith",
                    "signedAtTime" : "1996-02-21T06:57:25Z",
                    "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                  },
                  "stringValue" : "Red Truck"
                }
              }, {
                "label" : "Load weight",
                "type" : "scannedDocument",
                "value" : {
                  "barcodeValue" : {
                    "barcodeType" : "org.gs1.EAN-13",
                    "barcodeValue" : "0853883003114"
                  },
                  "dateTimeValue" : {
                    "dateTime" : "1988-11-10T02:42:05Z"
                  },
                  "multipleChoiceValue" : {
                    "selected" : false,
                    "value" : "Yes"
                  },
                  "numberValue" : 123,
                  "photoValue" : {
                    "id" : "f5271458-21f9-4a9f-a290-780c6d8840ff",
                    "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                  },
                  "signatureValue" : {
                    "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                    "name" : "John Smith",
                    "signedAtTime" : "1996-02-21T06:57:25Z",
                    "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                  },
                  "stringValue" : "Red Truck"
                }
              } ],
              "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
              "name" : "Dropoff Slip 123",
              "notes" : "Missing a crate",
              "routeStop" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "494123",
                "name" : "Company Warehouse #1"
              },
              "state" : "submitted",
              "updatedAtTime" : "1985-01-12T07:25:57Z",
              "vehicle" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "494123",
                "name" : "Fleet Truck #1"
              }
            }, {
              "conditionalFieldSections" : [ {
                "conditionalFieldFirstIndex" : 2949691048040286700,
                "conditionalFieldLastIndex" : 5188021910068834000,
                "triggeringFieldIndex" : 6312989348082117000,
                "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
              }, {
                "conditionalFieldFirstIndex" : 2949691048040286700,
                "conditionalFieldLastIndex" : 5188021910068834000,
                "triggeringFieldIndex" : 6312989348082117000,
                "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
              }, {
                "conditionalFieldFirstIndex" : 2949691048040286700,
                "conditionalFieldLastIndex" : 5188021910068834000,
                "triggeringFieldIndex" : 6312989348082117000,
                "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
              } ],
              "createdAtTime" : "1993-05-23T22:05:38Z",
              "documentType" : {
                "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                "name" : "Fleet Truck List"
              },
              "driver" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "45646",
                "name" : "Driver Bob"
              },
              "fields" : [ {
                "label" : "Load weight",
                "type" : "scannedDocument",
                "value" : {
                  "barcodeValue" : {
                    "barcodeType" : "org.gs1.EAN-13",
                    "barcodeValue" : "0853883003114"
                  },
                  "dateTimeValue" : {
                    "dateTime" : "1988-11-10T02:42:05Z"
                  },
                  "multipleChoiceValue" : {
                    "selected" : false,
                    "value" : "Yes"
                  },
                  "numberValue" : 123,
                  "photoValue" : {
                    "id" : "f5271458-21f9-4a9f-a290-780c6d8840ff",
                    "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                  },
                  "signatureValue" : {
                    "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                    "name" : "John Smith",
                    "signedAtTime" : "1996-02-21T06:57:25Z",
                    "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                  },
                  "stringValue" : "Red Truck"
                }
              }, {
                "label" : "Load weight",
                "type" : "scannedDocument",
                "value" : {
                  "barcodeValue" : {
                    "barcodeType" : "org.gs1.EAN-13",
                    "barcodeValue" : "0853883003114"
                  },
                  "dateTimeValue" : {
                    "dateTime" : "1988-11-10T02:42:05Z"
                  },
                  "multipleChoiceValue" : {
                    "selected" : false,
                    "value" : "Yes"
                  },
                  "numberValue" : 123,
                  "photoValue" : {
                    "id" : "f5271458-21f9-4a9f-a290-780c6d8840ff",
                    "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                  },
                  "signatureValue" : {
                    "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                    "name" : "John Smith",
                    "signedAtTime" : "1996-02-21T06:57:25Z",
                    "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                  },
                  "stringValue" : "Red Truck"
                }
              } ],
              "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
              "name" : "Dropoff Slip 123",
              "notes" : "Missing a crate",
              "routeStop" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "494123",
                "name" : "Company Warehouse #1"
              },
              "state" : "submitted",
              "updatedAtTime" : "1985-01-12T07:25:57Z",
              "vehicle" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "494123",
                "name" : "Fleet Truck #1"
              }
            } ],
            "items" : {
              "$ref" : "#/components/schemas/documentResponseObjectResponseBody"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/GoaPaginationResponseResponseBody"
          }
        },
        "example" : {
          "data" : [ {
            "conditionalFieldSections" : [ {
              "conditionalFieldFirstIndex" : 2949691048040286700,
              "conditionalFieldLastIndex" : 5188021910068834000,
              "triggeringFieldIndex" : 6312989348082117000,
              "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
            }, {
              "conditionalFieldFirstIndex" : 2949691048040286700,
              "conditionalFieldLastIndex" : 5188021910068834000,
              "triggeringFieldIndex" : 6312989348082117000,
              "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
            }, {
              "conditionalFieldFirstIndex" : 2949691048040286700,
              "conditionalFieldLastIndex" : 5188021910068834000,
              "triggeringFieldIndex" : 6312989348082117000,
              "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
            } ],
            "createdAtTime" : "1993-05-23T22:05:38Z",
            "documentType" : {
              "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
              "name" : "Fleet Truck List"
            },
            "driver" : {
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "45646",
              "name" : "Driver Bob"
            },
            "fields" : [ {
              "label" : "Load weight",
              "type" : "scannedDocument",
              "value" : {
                "barcodeValue" : {
                  "barcodeType" : "org.gs1.EAN-13",
                  "barcodeValue" : "0853883003114"
                },
                "dateTimeValue" : {
                  "dateTime" : "1988-11-10T02:42:05Z"
                },
                "multipleChoiceValue" : {
                  "selected" : false,
                  "value" : "Yes"
                },
                "numberValue" : 123,
                "photoValue" : {
                  "id" : "f5271458-21f9-4a9f-a290-780c6d8840ff",
                  "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                },
                "signatureValue" : {
                  "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                  "name" : "John Smith",
                  "signedAtTime" : "1996-02-21T06:57:25Z",
                  "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                },
                "stringValue" : "Red Truck"
              }
            }, {
              "label" : "Load weight",
              "type" : "scannedDocument",
              "value" : {
                "barcodeValue" : {
                  "barcodeType" : "org.gs1.EAN-13",
                  "barcodeValue" : "0853883003114"
                },
                "dateTimeValue" : {
                  "dateTime" : "1988-11-10T02:42:05Z"
                },
                "multipleChoiceValue" : {
                  "selected" : false,
                  "value" : "Yes"
                },
                "numberValue" : 123,
                "photoValue" : {
                  "id" : "f5271458-21f9-4a9f-a290-780c6d8840ff",
                  "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                },
                "signatureValue" : {
                  "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                  "name" : "John Smith",
                  "signedAtTime" : "1996-02-21T06:57:25Z",
                  "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                },
                "stringValue" : "Red Truck"
              }
            } ],
            "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
            "name" : "Dropoff Slip 123",
            "notes" : "Missing a crate",
            "routeStop" : {
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "494123",
              "name" : "Company Warehouse #1"
            },
            "state" : "submitted",
            "updatedAtTime" : "1985-01-12T07:25:57Z",
            "vehicle" : {
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "494123",
              "name" : "Fleet Truck #1"
            }
          }, {
            "conditionalFieldSections" : [ {
              "conditionalFieldFirstIndex" : 2949691048040286700,
              "conditionalFieldLastIndex" : 5188021910068834000,
              "triggeringFieldIndex" : 6312989348082117000,
              "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
            }, {
              "conditionalFieldFirstIndex" : 2949691048040286700,
              "conditionalFieldLastIndex" : 5188021910068834000,
              "triggeringFieldIndex" : 6312989348082117000,
              "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
            }, {
              "conditionalFieldFirstIndex" : 2949691048040286700,
              "conditionalFieldLastIndex" : 5188021910068834000,
              "triggeringFieldIndex" : 6312989348082117000,
              "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
            } ],
            "createdAtTime" : "1993-05-23T22:05:38Z",
            "documentType" : {
              "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
              "name" : "Fleet Truck List"
            },
            "driver" : {
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "45646",
              "name" : "Driver Bob"
            },
            "fields" : [ {
              "label" : "Load weight",
              "type" : "scannedDocument",
              "value" : {
                "barcodeValue" : {
                  "barcodeType" : "org.gs1.EAN-13",
                  "barcodeValue" : "0853883003114"
                },
                "dateTimeValue" : {
                  "dateTime" : "1988-11-10T02:42:05Z"
                },
                "multipleChoiceValue" : {
                  "selected" : false,
                  "value" : "Yes"
                },
                "numberValue" : 123,
                "photoValue" : {
                  "id" : "f5271458-21f9-4a9f-a290-780c6d8840ff",
                  "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                },
                "signatureValue" : {
                  "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                  "name" : "John Smith",
                  "signedAtTime" : "1996-02-21T06:57:25Z",
                  "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                },
                "stringValue" : "Red Truck"
              }
            }, {
              "label" : "Load weight",
              "type" : "scannedDocument",
              "value" : {
                "barcodeValue" : {
                  "barcodeType" : "org.gs1.EAN-13",
                  "barcodeValue" : "0853883003114"
                },
                "dateTimeValue" : {
                  "dateTime" : "1988-11-10T02:42:05Z"
                },
                "multipleChoiceValue" : {
                  "selected" : false,
                  "value" : "Yes"
                },
                "numberValue" : 123,
                "photoValue" : {
                  "id" : "f5271458-21f9-4a9f-a290-780c6d8840ff",
                  "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                },
                "signatureValue" : {
                  "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                  "name" : "John Smith",
                  "signedAtTime" : "1996-02-21T06:57:25Z",
                  "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                },
                "stringValue" : "Red Truck"
              }
            } ],
            "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
            "name" : "Dropoff Slip 123",
            "notes" : "Missing a crate",
            "routeStop" : {
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "494123",
              "name" : "Company Warehouse #1"
            },
            "state" : "submitted",
            "updatedAtTime" : "1985-01-12T07:25:57Z",
            "vehicle" : {
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "494123",
              "name" : "Fleet Truck #1"
            }
          } ],
          "pagination" : {
            "endCursor" : "MjkY",
            "hasNextPage" : true
          }
        }
      },
      "DriveTimeDurationMs" : {
        "type" : "number",
        "description" : "Time driven in milliseconds."
      },
      "Driver" : {
        "type" : "object",
        "properties" : {
          "attributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/attributeTiny"
            }
          },
          "carrierSettings" : {
            "$ref" : "#/components/schemas/DriverCarrierSettings"
          },
          "createdAtTime" : {
            "$ref" : "#/components/schemas/DriverCreatedAtTime"
          },
          "currentIdCardCode" : {
            "$ref" : "#/components/schemas/DriverIdCardCode"
          },
          "driverActivationStatus" : {
            "$ref" : "#/components/schemas/DriverActivationStatus"
          },
          "eldAdverseWeatherExemptionEnabled" : {
            "$ref" : "#/components/schemas/DriverEldAdverseWeatherExemptionEnabled"
          },
          "eldBigDayExemptionEnabled" : {
            "$ref" : "#/components/schemas/DriverEldBigDayExemptionEnabled"
          },
          "eldDayStartHour" : {
            "$ref" : "#/components/schemas/DriverEldDayStartHour"
          },
          "eldExempt" : {
            "$ref" : "#/components/schemas/DriverEldExempt"
          },
          "eldExemptReason" : {
            "$ref" : "#/components/schemas/DriverEldExemptReason"
          },
          "eldPcEnabled" : {
            "$ref" : "#/components/schemas/DriverEldPcEnabled"
          },
          "eldSettings" : {
            "$ref" : "#/components/schemas/DriverEldSettings"
          },
          "eldYmEnabled" : {
            "$ref" : "#/components/schemas/DriverEldYmEnabled"
          },
          "externalIds" : {
            "$ref" : "#/components/schemas/DriverExternalIds"
          },
          "id" : {
            "$ref" : "#/components/schemas/DriverId"
          },
          "isDeactivated" : {
            "$ref" : "#/components/schemas/DriverIsDeactivated"
          },
          "licenseNumber" : {
            "$ref" : "#/components/schemas/DriverLicenseNumber"
          },
          "licenseState" : {
            "$ref" : "#/components/schemas/DriverLicenseState"
          },
          "locale" : {
            "$ref" : "#/components/schemas/DriverLocale"
          },
          "name" : {
            "$ref" : "#/components/schemas/DriverName"
          },
          "notes" : {
            "$ref" : "#/components/schemas/DriverNotes"
          },
          "phone" : {
            "$ref" : "#/components/schemas/DriverPhone"
          },
          "staticAssignedVehicle" : {
            "$ref" : "#/components/schemas/DriverStaticAssignedVehicle"
          },
          "tachographCardNumber" : {
            "$ref" : "#/components/schemas/DriverTachographCardNumber"
          },
          "tags" : {
            "$ref" : "#/components/schemas/DriverTags"
          },
          "timezone" : {
            "$ref" : "#/components/schemas/DriverTimezone"
          },
          "updatedAtTime" : {
            "$ref" : "#/components/schemas/DriverUpdatedAtTime"
          },
          "username" : {
            "$ref" : "#/components/schemas/DriverUsername"
          },
          "vehicleGroupTag" : {
            "$ref" : "#/components/schemas/DriverVehicleGroupTag"
          }
        },
        "description" : "A driver object"
      },
      "DriverActivationStatus" : {
        "type" : "string",
        "description" : "A value indicating whether the driver is active or deactivated.",
        "enum" : [ "active", "deactivated" ]
      },
      "DriverAssignmentObjectResponseBody" : {
        "type" : "object",
        "properties" : {
          "assignmentType" : {
            "type" : "string",
            "description" : "Assignment type of the driver-vehicle assignment, indicating the provenance of the assignment. The only type of assignment supported right now is `driverApp` assignments. This list could change, so it is recommended that clients gracefully handle any types not enumerated in this list.",
            "example" : "driverApp",
            "enum" : [ "driverApp" ]
          },
          "driver" : {
            "$ref" : "#/components/schemas/GoaDriverTinyResponseResponseBody"
          },
          "endTime" : {
            "type" : "string",
            "description" : " An end time in RFC 3339 format. Omitted if not applicable. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "example" : "2019-06-13T19:08:25Z"
          },
          "isPassenger" : {
            "type" : "boolean",
            "description" : "Boolean indicating whether the driver is a passenger.",
            "example" : false
          },
          "startTime" : {
            "type" : "string",
            "description" : " A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "example" : "2019-06-13T19:08:25Z"
          }
        },
        "example" : {
          "assignmentType" : "driverApp",
          "driver" : {
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "id" : "45646",
            "name" : "Driver Bob"
          },
          "endTime" : "2019-06-13T19:08:25Z",
          "isPassenger" : false,
          "startTime" : "2019-06-13T19:08:25Z"
        }
      },
      "DriverCarrierName" : {
        "maxLength" : 255,
        "type" : "string",
        "description" : "Carrier for a given driver.",
        "example" : "Acme Inc."
      },
      "DriverCarrierSettings" : {
        "type" : "object",
        "properties" : {
          "carrierName" : {
            "maxLength" : 255,
            "type" : "string",
            "description" : "Carrier for a given driver.",
            "example" : "Acme Inc."
          },
          "dotNumber" : {
            "type" : "integer",
            "description" : "Carrier US DOT Number. If this differs from the general organization's settings, the override value is used. Updating this value only updates the override setting for this driver.",
            "format" : "int64",
            "example" : 98231
          },
          "mainOfficeAddress" : {
            "maxLength" : 255,
            "type" : "string",
            "description" : "Main office address for a given driver. If this differs from the general organization's settings, the override value is used. ",
            "example" : "1234 Pear St., Scranton, PA 62814"
          }
        },
        "description" : "Carrier for a given driver. If the driver's carrier differs from the general organization's carrier settings, the override value is used. Updating this value only updates the override setting for this driver."
      },
      "DriverCreatedAtTime" : {
        "type" : "string",
        "description" : "The date and time this driver was created in RFC 3339 format.",
        "example" : "2019-05-18T20:27:35Z"
      },
      "DriverDeactivatedAtTime" : {
        "type" : "string",
        "description" : "The date and time this driver is considered to be deactivated in RFC 3339 format.",
        "example" : "2019-05-18T20:27:35Z"
      },
      "DriverDotNumber" : {
        "type" : "integer",
        "description" : "Carrier US DOT Number. If this differs from the general organization's settings, the override value is used. Updating this value only updates the override setting for this driver.",
        "format" : "int64",
        "example" : 98231
      },
      "DriverEfficienciesResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/DriverEfficienciesResponse_data"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/paginationResponse"
          }
        },
        "description" : "Summary of drivers' efficiencies over a time range."
      },
      "DriverEfficiency" : {
        "type" : "object",
        "properties" : {
          "driver" : {
            "$ref" : "#/components/schemas/ExtendedDriverTinyResponse"
          },
          "totalDistanceDrivenMeters" : {
            "$ref" : "#/components/schemas/DistanceDrivenMeters"
          },
          "totalDriveTimeDurationMs" : {
            "$ref" : "#/components/schemas/DriveTimeDurationMs"
          },
          "totalFuelConsumedMl" : {
            "$ref" : "#/components/schemas/FuelConsumedMl"
          },
          "totalIdleTimeDurationMs" : {
            "$ref" : "#/components/schemas/IdleTimeDurationMs"
          },
          "totalPowerTakeOffDurationMs" : {
            "$ref" : "#/components/schemas/PowerTakeOffDurationMs"
          },
          "vehicleSummaries" : {
            "type" : "array",
            "description" : "Summaries of vehicle efficiency for each vehicle the driver was driving during the given time period.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleSummary"
            }
          }
        },
        "description" : "Summary of a driver's efficiency."
      },
      "DriverEldAdverseWeatherExemptionEnabled" : {
        "type" : "boolean",
        "description" : "Flag indicating this driver may use Adverse Weather exemptions in ELD logs.",
        "default" : false
      },
      "DriverEldBigDayExemptionEnabled" : {
        "type" : "boolean",
        "description" : "Flag indicating this driver may use Big Day exemption in ELD logs.",
        "default" : false
      },
      "DriverEldDayStartHour" : {
        "type" : "integer",
        "description" : "`0` indicating midnight-to-midnight ELD driving hours, `12` to indicate noon-to-noon driving hours.",
        "default" : 0
      },
      "DriverEldExempt" : {
        "type" : "boolean",
        "description" : "Flag indicating this driver is exempt from the Electronic Logging Mandate.",
        "default" : false
      },
      "DriverEldExemptReason" : {
        "type" : "string",
        "description" : "Reason that this driver is exempt from the Electronic Logging Mandate (see eldExempt).",
        "example" : "Bad driver"
      },
      "DriverEldPcEnabled" : {
        "type" : "boolean",
        "description" : "Flag indicating this driver may select the Personal Conveyance duty status in ELD logs.",
        "default" : false
      },
      "DriverEldRuleset" : {
        "type" : "object",
        "properties" : {
          "break" : {
            "$ref" : "#/components/schemas/DriverEldRulesetRestBreak"
          },
          "cycle" : {
            "$ref" : "#/components/schemas/DriverEldRulesetCycle"
          },
          "jurisdiction" : {
            "$ref" : "#/components/schemas/DriverEldRulesetJurisdiction"
          },
          "restart" : {
            "$ref" : "#/components/schemas/DriverEldRulesetRestart"
          },
          "shift" : {
            "$ref" : "#/components/schemas/DriverEldRulesetShift"
          }
        },
        "description" : "An ELD ruleset for a driver."
      },
      "DriverEldRulesetCreatedAtTime" : {
        "type" : "string",
        "description" : "The date and time this driver ELD ruleset was created in RFC 3339 format.",
        "example" : "2019-05-18T20:27:35Z"
      },
      "DriverEldRulesetCycle" : {
        "type" : "string",
        "description" : "The cycle of the ELD ruleset applied to this driver.",
        "example" : "USA 60 hour / 7 day",
        "enum" : [ "USA 60 hour / 7 day", "USA 70 hour / 8 day", "AK 80 hour / 8 day", "AK 70 hour / 7 day", "CA 80 hour / 8 day", "CA 112 hour / 8 day", "FL 80 hour / 8 day", "FL 70 hour / 7 day", "NE 80 hour / 8 day", "NE 70 hour / 7 day", "NC 80 hour / 8 day", "NC 70 hour / 7 day", "OK 70 hour / 8 day", "OK 60 hour / 7 day", "OR 80 hour / 8 day", "OR 70 hour / 7 day", "SC 80 hour / 8 day", "SC 70 hour / 7 day", "TX 70 hour / 7 day", "WI 80 hour / 8 day", "WI 70 hour / 7 day", "Canada South Cycle 1 (70 hour / 7 day)", "Canada South Cycle 2 (120 hour / 14 day)", "Canada North Cycle 1 (80 hour / 7 day)", "Canada North Cycle 2 (120 hour / 14 day)" ]
      },
      "DriverEldRulesetDailyOffDuty" : {
        "type" : "string",
        "description" : "The daily off duty setting of the ELD ruleset applied to this driver.",
        "example" : "Canada North",
        "enum" : [ "Canada South", "Canada North" ]
      },
      "DriverEldRulesetJurisdiction" : {
        "type" : "string",
        "description" : "The jurisdiction of the ELD ruleset applied to this driver. These are specified by either `CS` or `CN` for Canada South and Canada North, respectively, or the ISO 3166-2 postal code for the supported state or territory.",
        "example" : "AR"
      },
      "DriverEldRulesetRestBreak" : {
        "type" : "string",
        "description" : "The rest break required setting of the ELD ruleset applied to this driver.",
        "example" : "Property (off-duty/sleeper)",
        "enum" : [ "Property (off-duty/sleeper)", "Explosives/HazMat (on-duty)" ]
      },
      "DriverEldRulesetRestart" : {
        "type" : "string",
        "description" : "The restart of the ELD ruleset applied to this driver.",
        "example" : "Default",
        "enum" : [ "34-hour Restart", "24-hour Restart", "36-hour Restart", "72-hour Restart" ]
      },
      "DriverEldRulesetShift" : {
        "type" : "string",
        "description" : "The shift of the ELD ruleset applied to this driver.",
        "example" : "US Interstate Property",
        "enum" : [ "US Interstate Property", "US Interstate Passenger" ]
      },
      "DriverEldRulesetUpdatedAtTime" : {
        "type" : "string",
        "description" : "The date and time this driver ELD ruleset was last updated in RFC 3339 format.",
        "example" : "2019-06-13T19:08:25Z"
      },
      "DriverEldRulesetUsShortHaulType" : {
        "type" : "string",
        "description" : "The US short haul ruleset type of the ELD ruleset applied to this driver.",
        "example" : "100 Air-Mile (Passenger)",
        "enum" : [ "100 Air-Mile (Passenger)", "100 Air-Mile (Property)", "150 Air-Mile (Non-CDL)" ]
      },
      "DriverEldRulesets" : {
        "type" : "array",
        "description" : "The driver's ELD rulesets and overrides.",
        "items" : {
          "$ref" : "#/components/schemas/DriverEldRuleset"
        }
      },
      "DriverEldSettings" : {
        "type" : "object",
        "properties" : {
          "rulesets" : {
            "$ref" : "#/components/schemas/DriverEldRulesets"
          }
        },
        "description" : "The driver's ELD settings."
      },
      "DriverEldYmEnabled" : {
        "type" : "boolean",
        "description" : "Flag indicating this driver may select the Yard Move duty status in ELD logs.",
        "default" : false
      },
      "DriverExternalIds" : {
        "type" : "object",
        "description" : "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
        "example" : {
          "maintenanceId" : "250020",
          "payrollId" : "ABFS18600"
        }
      },
      "DriverId" : {
        "type" : "string",
        "description" : "Samsara ID for the driver.",
        "example" : "123"
      },
      "DriverIdCardCode" : {
        "type" : "string",
        "description" : "The ID Card Code on the back of the physical card assigned to the driver.  Contact Samsara if you would like to enable this feature.",
        "example" : "941767043"
      },
      "DriverIsDeactivated" : {
        "type" : "boolean",
        "description" : "[DEPRECATED] A boolean indicating whether or not the driver is deactivated. Use `driverActivationStatus` instead.",
        "example" : false
      },
      "DriverLicenseNumber" : {
        "type" : "string",
        "description" : "Driver's state issued license number. The combination of this number and `licenseState` must be unique.",
        "example" : "E1234567"
      },
      "DriverLicenseState" : {
        "type" : "string",
        "description" : "Abbreviation of US state, Canadian province, or US territory that issued driver's license.",
        "example" : "CA"
      },
      "DriverLocale" : {
        "type" : "string",
        "description" : "Locale override (uncommon). These are specified by ISO 3166-2 country codes for supported locales.",
        "enum" : [ "us", "at", "be", "ca", "gb", "fr", "de", "ie", "it", "lu", "mx", "nl", "es", "ch", "pr" ]
      },
      "DriverMainOfficeAddress" : {
        "maxLength" : 255,
        "type" : "string",
        "description" : "Main office address for a given driver. If this differs from the general organization's settings, the override value is used. ",
        "example" : "1234 Pear St., Scranton, PA 62814"
      },
      "DriverName" : {
        "maxLength" : 255,
        "minLength" : 1,
        "type" : "string",
        "description" : "Driver's name.",
        "example" : "Susan Jones"
      },
      "DriverNotes" : {
        "maxLength" : 4096,
        "type" : "string",
        "description" : "Notes about the driver.",
        "example" : "Also goes by the nickname Furious Fred."
      },
      "DriverPassword" : {
        "type" : "string",
        "description" : "Password that the driver can use to login to the Samsara driver app.",
        "example" : "aSecurePassword1234"
      },
      "DriverPhone" : {
        "maxLength" : 255,
        "type" : "string",
        "description" : "Phone number of the driver.",
        "example" : "5558234327"
      },
      "DriverResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Driver"
          }
        },
        "description" : "A single driver."
      },
      "DriverRulesetObjectResponseBody" : {
        "type" : "object",
        "properties" : {
          "break" : {
            "type" : "string",
            "description" : "The rest break required setting of the ELD ruleset applied to this driver.",
            "example" : "Property (off-duty/sleeper)",
            "enum" : [ "Property (off-duty/sleeper)", "Explosives/HazMat (on-duty)" ]
          },
          "cycle" : {
            "type" : "string",
            "description" : "The cycle of the ELD ruleset applied to this driver.",
            "example" : "OR 80 hour / 8 day",
            "enum" : [ "USA 60 hour / 7 day", "USA 70 hour / 8 day", "AK 80 hour / 8 day", "AK 70 hour / 7 day", "CA 80 hour / 8 day", "CA 112 hour / 8 day", "FL 80 hour / 8 day", "FL 70 hour / 7 day", "NE 80 hour / 8 day", "NE 70 hour / 7 day", "NC 80 hour / 8 day", "NC 70 hour / 7 day", "OK 70 hour / 8 day", "OK 60 hour / 7 day", "OR 80 hour / 8 day", "OR 70 hour / 7 day", "SC 80 hour / 8 day", "SC 70 hour / 7 day", "TX 70 hour / 7 day", "WI 80 hour / 8 day", "WI 70 hour / 7 day", "Canada South Cycle 1 (70 hour / 7 day)", "Canada South Cycle 2 (120 hour / 14 day)", "Canada North Cycle 1 (80 hour / 7 day)", "Canada North Cycle 2 (120 hour / 14 day)" ]
          },
          "jurisdiction" : {
            "type" : "string",
            "description" : "The jurisdiction of the ELD ruleset applied to this driver. These are specified by either `CS` or `CN` for Canada South and Canada North, respectively, or the ISO 3166-2 postal code for the supported state or territory.",
            "example" : "AR"
          },
          "restart" : {
            "type" : "string",
            "description" : "The restart of the ELD ruleset applied to this driver.",
            "example" : "24-hour Restart",
            "enum" : [ "34-hour Restart", "24-hour Restart", "36-hour Restart", "72-hour Restart" ]
          },
          "shift" : {
            "type" : "string",
            "description" : "The shift of the ELD ruleset applied to this driver.",
            "example" : "US Interstate Passenger",
            "enum" : [ "US Interstate Property", "US Interstate Passenger" ]
          }
        },
        "example" : {
          "break" : "Property (off-duty/sleeper)",
          "cycle" : "FL 80 hour / 8 day",
          "jurisdiction" : "AR",
          "restart" : "24-hour Restart",
          "shift" : "US Interstate Passenger"
        }
      },
      "DriverStaticAssignedVehicle" : {
        "allOf" : [ {
          "type" : "object",
          "description" : "Vehicle assigned to the driver for static vehicle assignments. (uncommon)."
        }, {
          "$ref" : "#/components/schemas/vehicleTinyResponse"
        } ]
      },
      "DriverStaticAssignedVehicleId" : {
        "type" : "string",
        "description" : "ID of vehicle that the driver is permanently assigned to. (uncommon).",
        "example" : "456"
      },
      "DriverTachographActivityData" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/TachographActivityListWrapper"
        }
      },
      "DriverTachographActivityResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/DriverTachographActivityData"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/paginationResponse"
          }
        },
        "description" : "List of all driver tachograph activities in a specified time range."
      },
      "DriverTachographCardNumber" : {
        "type" : "string",
        "description" : "Driver's assigned tachograph card number (Europe specific)",
        "example" : "1000000492436002"
      },
      "DriverTagIds" : {
        "type" : "array",
        "description" : "IDs of tags the driver is associated with.",
        "items" : {
          "type" : "string",
          "example" : "147"
        }
      },
      "DriverTags" : {
        "type" : "array",
        "description" : "The tags this driver belongs to.",
        "items" : {
          "$ref" : "#/components/schemas/tagTinyResponse"
        }
      },
      "DriverTimezone" : {
        "type" : "string",
        "description" : "Home terminal timezone, in order to indicate what time zone should be used to calculate the ELD logs. Driver timezones use [IANA timezone database](https://www.iana.org/time-zones) keys (e.g. `America/Los_Angeles`, `America/New_York`, `Europe/London`, etc.). You can find a mapping of common timezone formats to IANA timezone keys [here](https://unicode.org/cldr/charts/latest/supplemental/zone_tzid.html).",
        "example" : "America/Los_Angeles",
        "default" : "America/Los_Angeles"
      },
      "DriverUpdatedAtTime" : {
        "type" : "string",
        "description" : "The date and time this driver was last updated in RFC 3339 format.",
        "example" : "2019-06-13T19:08:25Z"
      },
      "DriverUsername" : {
        "maxLength" : 189,
        "minLength" : 1,
        "type" : "string",
        "description" : "Driver's login username into the driver app. The username may not contain spaces or the '@' symbol. The username must be unique.",
        "example" : "SusanJones"
      },
      "DriverVehicleGroupTag" : {
        "allOf" : [ {
          "type" : "object",
          "description" : "Tag which determines which vehicles a driver will see when selecting vehicles."
        }, {
          "$ref" : "#/components/schemas/tagTinyResponse"
        } ]
      },
      "DriverVehicleGroupTagId" : {
        "type" : "string",
        "description" : "Tag ID which determines which vehicles a driver will see when selecting vehicles.",
        "example" : "342417"
      },
      "DriverWithTimezoneEldSettingsObjectResponseBody" : {
        "type" : "object",
        "properties" : {
          "eldSettings" : {
            "$ref" : "#/components/schemas/EldSettingsObjectResponseBody"
          },
          "externalIds" : {
            "type" : "object",
            "properties" : { },
            "description" : "A map of external ids",
            "example" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "ID of the driver",
            "example" : "45646"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the driver",
            "example" : "Driver Bob"
          },
          "timezone" : {
            "type" : "string",
            "description" : "Home terminal timezone, in order to indicate what time zone should be used to calculate the ELD logs. Driver timezones use [IANA timezone database](https://www.iana.org/time-zones) keys (e.g. `America/Los_Angeles`, `America/New_York`, `Europe/London`, etc.). You can find a mapping of common timezone formats to IANA timezone keys [here](https://unicode.org/cldr/charts/latest/supplemental/zone_tzid.html).",
            "example" : "America/Los_Angeles",
            "default" : "America/Los_Angeles"
          }
        },
        "example" : {
          "eldSettings" : {
            "rulesets" : [ {
              "break" : "Explosives/HazMat (on-duty)",
              "cycle" : "Canada South Cycle 1 (70 hour / 7 day)",
              "jurisdiction" : "AR",
              "restart" : "36-hour Restart",
              "shift" : "US Interstate Passenger"
            }, {
              "break" : "Explosives/HazMat (on-duty)",
              "cycle" : "Canada South Cycle 1 (70 hour / 7 day)",
              "jurisdiction" : "AR",
              "restart" : "36-hour Restart",
              "shift" : "US Interstate Passenger"
            } ]
          },
          "externalIds" : {
            "maintenanceId" : "250020",
            "payrollId" : "ABFS18600"
          },
          "id" : "45646",
          "name" : "Driver Bob",
          "timezone" : "America/Los_Angeles"
        }
      },
      "DriversVehicleAssignmentsGetDriversVehicleAssignmentsBadRequestResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Invalid value for parameter."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "Bad Request parameters",
        "example" : {
          "message" : "Invalid value for parameter.",
          "requestId" : "8916e1c1"
        }
      },
      "DriversVehicleAssignmentsGetDriversVehicleAssignmentsInternalErrorResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Failed to execute GraphQL query."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "An internal server error occurred",
        "example" : {
          "message" : "Failed to execute GraphQL query.",
          "requestId" : "8916e1c1"
        }
      },
      "DriversVehicleAssignmentsGetDriversVehicleAssignmentsNotFoundResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Object not found."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "Resource not found",
        "example" : {
          "message" : "Object not found.",
          "requestId" : "8916e1c1"
        }
      },
      "DriversVehicleAssignmentsGetDriversVehicleAssignmentsNotImplementedResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Not implemented."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "Requested endpoint is not yet implemented",
        "example" : {
          "message" : "Not implemented.",
          "requestId" : "8916e1c1"
        }
      },
      "DriversVehicleAssignmentsGetDriversVehicleAssignmentsResponseBody" : {
        "required" : [ "data", "pagination" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "description" : "List of driver and their vehicle assignments.",
            "example" : [ {
              "driverActivationStatus" : "active",
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "494123",
              "name" : "Joe Driver",
              "vehicleAssignments" : [ {
                "assignmentType" : "driverApp",
                "endTime" : "2019-06-13T19:08:25Z",
                "isPassenger" : false,
                "startTime" : "2019-06-13T19:08:25Z",
                "vehicle" : {
                  "externalIds" : {
                    "maintenanceId" : "250020",
                    "payrollId" : "ABFS18600"
                  },
                  "id" : "494123",
                  "name" : "Fleet Truck #1"
                }
              }, {
                "assignmentType" : "driverApp",
                "endTime" : "2019-06-13T19:08:25Z",
                "isPassenger" : false,
                "startTime" : "2019-06-13T19:08:25Z",
                "vehicle" : {
                  "externalIds" : {
                    "maintenanceId" : "250020",
                    "payrollId" : "ABFS18600"
                  },
                  "id" : "494123",
                  "name" : "Fleet Truck #1"
                }
              }, {
                "assignmentType" : "driverApp",
                "endTime" : "2019-06-13T19:08:25Z",
                "isPassenger" : false,
                "startTime" : "2019-06-13T19:08:25Z",
                "vehicle" : {
                  "externalIds" : {
                    "maintenanceId" : "250020",
                    "payrollId" : "ABFS18600"
                  },
                  "id" : "494123",
                  "name" : "Fleet Truck #1"
                }
              } ]
            }, {
              "driverActivationStatus" : "active",
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "494123",
              "name" : "Joe Driver",
              "vehicleAssignments" : [ {
                "assignmentType" : "driverApp",
                "endTime" : "2019-06-13T19:08:25Z",
                "isPassenger" : false,
                "startTime" : "2019-06-13T19:08:25Z",
                "vehicle" : {
                  "externalIds" : {
                    "maintenanceId" : "250020",
                    "payrollId" : "ABFS18600"
                  },
                  "id" : "494123",
                  "name" : "Fleet Truck #1"
                }
              }, {
                "assignmentType" : "driverApp",
                "endTime" : "2019-06-13T19:08:25Z",
                "isPassenger" : false,
                "startTime" : "2019-06-13T19:08:25Z",
                "vehicle" : {
                  "externalIds" : {
                    "maintenanceId" : "250020",
                    "payrollId" : "ABFS18600"
                  },
                  "id" : "494123",
                  "name" : "Fleet Truck #1"
                }
              }, {
                "assignmentType" : "driverApp",
                "endTime" : "2019-06-13T19:08:25Z",
                "isPassenger" : false,
                "startTime" : "2019-06-13T19:08:25Z",
                "vehicle" : {
                  "externalIds" : {
                    "maintenanceId" : "250020",
                    "payrollId" : "ABFS18600"
                  },
                  "id" : "494123",
                  "name" : "Fleet Truck #1"
                }
              } ]
            }, {
              "driverActivationStatus" : "active",
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "494123",
              "name" : "Joe Driver",
              "vehicleAssignments" : [ {
                "assignmentType" : "driverApp",
                "endTime" : "2019-06-13T19:08:25Z",
                "isPassenger" : false,
                "startTime" : "2019-06-13T19:08:25Z",
                "vehicle" : {
                  "externalIds" : {
                    "maintenanceId" : "250020",
                    "payrollId" : "ABFS18600"
                  },
                  "id" : "494123",
                  "name" : "Fleet Truck #1"
                }
              }, {
                "assignmentType" : "driverApp",
                "endTime" : "2019-06-13T19:08:25Z",
                "isPassenger" : false,
                "startTime" : "2019-06-13T19:08:25Z",
                "vehicle" : {
                  "externalIds" : {
                    "maintenanceId" : "250020",
                    "payrollId" : "ABFS18600"
                  },
                  "id" : "494123",
                  "name" : "Fleet Truck #1"
                }
              }, {
                "assignmentType" : "driverApp",
                "endTime" : "2019-06-13T19:08:25Z",
                "isPassenger" : false,
                "startTime" : "2019-06-13T19:08:25Z",
                "vehicle" : {
                  "externalIds" : {
                    "maintenanceId" : "250020",
                    "payrollId" : "ABFS18600"
                  },
                  "id" : "494123",
                  "name" : "Fleet Truck #1"
                }
              } ]
            } ],
            "items" : {
              "$ref" : "#/components/schemas/DriversVehicleAssignmentsObjectResponseBody"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/GoaPaginationResponseResponseBody"
          }
        },
        "example" : {
          "data" : [ {
            "driverActivationStatus" : "active",
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "id" : "494123",
            "name" : "Joe Driver",
            "vehicleAssignments" : [ {
              "assignmentType" : "driverApp",
              "endTime" : "2019-06-13T19:08:25Z",
              "isPassenger" : false,
              "startTime" : "2019-06-13T19:08:25Z",
              "vehicle" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "494123",
                "name" : "Fleet Truck #1"
              }
            }, {
              "assignmentType" : "driverApp",
              "endTime" : "2019-06-13T19:08:25Z",
              "isPassenger" : false,
              "startTime" : "2019-06-13T19:08:25Z",
              "vehicle" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "494123",
                "name" : "Fleet Truck #1"
              }
            }, {
              "assignmentType" : "driverApp",
              "endTime" : "2019-06-13T19:08:25Z",
              "isPassenger" : false,
              "startTime" : "2019-06-13T19:08:25Z",
              "vehicle" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "494123",
                "name" : "Fleet Truck #1"
              }
            } ]
          }, {
            "driverActivationStatus" : "active",
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "id" : "494123",
            "name" : "Joe Driver",
            "vehicleAssignments" : [ {
              "assignmentType" : "driverApp",
              "endTime" : "2019-06-13T19:08:25Z",
              "isPassenger" : false,
              "startTime" : "2019-06-13T19:08:25Z",
              "vehicle" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "494123",
                "name" : "Fleet Truck #1"
              }
            }, {
              "assignmentType" : "driverApp",
              "endTime" : "2019-06-13T19:08:25Z",
              "isPassenger" : false,
              "startTime" : "2019-06-13T19:08:25Z",
              "vehicle" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "494123",
                "name" : "Fleet Truck #1"
              }
            }, {
              "assignmentType" : "driverApp",
              "endTime" : "2019-06-13T19:08:25Z",
              "isPassenger" : false,
              "startTime" : "2019-06-13T19:08:25Z",
              "vehicle" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "494123",
                "name" : "Fleet Truck #1"
              }
            } ]
          }, {
            "driverActivationStatus" : "active",
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "id" : "494123",
            "name" : "Joe Driver",
            "vehicleAssignments" : [ {
              "assignmentType" : "driverApp",
              "endTime" : "2019-06-13T19:08:25Z",
              "isPassenger" : false,
              "startTime" : "2019-06-13T19:08:25Z",
              "vehicle" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "494123",
                "name" : "Fleet Truck #1"
              }
            }, {
              "assignmentType" : "driverApp",
              "endTime" : "2019-06-13T19:08:25Z",
              "isPassenger" : false,
              "startTime" : "2019-06-13T19:08:25Z",
              "vehicle" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "494123",
                "name" : "Fleet Truck #1"
              }
            }, {
              "assignmentType" : "driverApp",
              "endTime" : "2019-06-13T19:08:25Z",
              "isPassenger" : false,
              "startTime" : "2019-06-13T19:08:25Z",
              "vehicle" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "494123",
                "name" : "Fleet Truck #1"
              }
            } ]
          } ],
          "pagination" : {
            "endCursor" : "MjkY",
            "hasNextPage" : true
          }
        }
      },
      "DriversVehicleAssignmentsObjectResponseBody" : {
        "required" : [ "driverActivationStatus", "id", "name", "vehicleAssignments" ],
        "type" : "object",
        "properties" : {
          "driverActivationStatus" : {
            "type" : "string",
            "description" : "A value indicating whether the driver is active or deactivated.",
            "example" : "active",
            "enum" : [ "active", "deactivated" ]
          },
          "externalIds" : {
            "type" : "object",
            "properties" : { },
            "description" : "A map of external ids",
            "example" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "ID of the driver.",
            "example" : "494123"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the driver.",
            "example" : "Joe Driver"
          },
          "vehicleAssignments" : {
            "type" : "array",
            "description" : "List of vehicle assignment objects.",
            "example" : [ {
              "assignmentType" : "driverApp",
              "endTime" : "2019-06-13T19:08:25Z",
              "isPassenger" : false,
              "startTime" : "2019-06-13T19:08:25Z",
              "vehicle" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "494123",
                "name" : "Fleet Truck #1"
              }
            }, {
              "assignmentType" : "driverApp",
              "endTime" : "2019-06-13T19:08:25Z",
              "isPassenger" : false,
              "startTime" : "2019-06-13T19:08:25Z",
              "vehicle" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "494123",
                "name" : "Fleet Truck #1"
              }
            } ],
            "items" : {
              "$ref" : "#/components/schemas/VehicleAssignmentObjectResponseBody"
            }
          }
        },
        "example" : {
          "driverActivationStatus" : "active",
          "externalIds" : {
            "maintenanceId" : "250020",
            "payrollId" : "ABFS18600"
          },
          "id" : "494123",
          "name" : "Joe Driver",
          "vehicleAssignments" : [ {
            "assignmentType" : "driverApp",
            "endTime" : "2019-06-13T19:08:25Z",
            "isPassenger" : false,
            "startTime" : "2019-06-13T19:08:25Z",
            "vehicle" : {
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "494123",
              "name" : "Fleet Truck #1"
            }
          }, {
            "assignmentType" : "driverApp",
            "endTime" : "2019-06-13T19:08:25Z",
            "isPassenger" : false,
            "startTime" : "2019-06-13T19:08:25Z",
            "vehicle" : {
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "494123",
              "name" : "Fleet Truck #1"
            }
          }, {
            "assignmentType" : "driverApp",
            "endTime" : "2019-06-13T19:08:25Z",
            "isPassenger" : false,
            "startTime" : "2019-06-13T19:08:25Z",
            "vehicle" : {
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "494123",
              "name" : "Fleet Truck #1"
            }
          } ]
        }
      },
      "DutyStatusDurationObjectResponseBody" : {
        "type" : "object",
        "properties" : {
          "activeDurationMs" : {
            "type" : "integer",
            "description" : "Duration the driver was active for in the log period in milliseconds.",
            "format" : "int64",
            "example" : 38825000
          },
          "driveDurationMs" : {
            "type" : "integer",
            "description" : "Duration the driver was driving for in the log period in milliseconds.",
            "format" : "int64",
            "example" : 31970000
          },
          "offDutyDurationMs" : {
            "type" : "integer",
            "description" : "Duration the driver was off duty for in the log period in milliseconds.",
            "format" : "int64",
            "example" : 20555000
          },
          "onDutyDurationMs" : {
            "type" : "integer",
            "description" : "Duration the driver was on duty for in the log period in milliseconds.",
            "format" : "int64",
            "example" : 5423000
          },
          "personalConveyanceDurationMs" : {
            "type" : "integer",
            "description" : "Duration the driver was driving for personal conveyance for in the log period in milliseconds.",
            "format" : "int64",
            "example" : 4358000
          },
          "sleeperBerthDurationMs" : {
            "type" : "integer",
            "description" : "Duration the driver was in their sleeper berth for in the log period in milliseconds.",
            "format" : "int64",
            "example" : 27020000
          },
          "waitingTimeDurationMs" : {
            "type" : "integer",
            "description" : "Duration the driver was waiting for in the log period in milliseconds.",
            "format" : "int64",
            "example" : 1560000
          },
          "yardMoveDurationMs" : {
            "type" : "integer",
            "description" : "Duration the driver was driving for yard moves for in the log period in milliseconds.",
            "format" : "int64",
            "example" : 1432000
          }
        },
        "example" : {
          "activeDurationMs" : 38825000,
          "driveDurationMs" : 31970000,
          "offDutyDurationMs" : 20555000,
          "onDutyDurationMs" : 5423000,
          "personalConveyanceDurationMs" : 4358000,
          "sleeperBerthDurationMs" : 27020000,
          "waitingTimeDurationMs" : 1560000,
          "yardMoveDurationMs" : 1432000
        }
      },
      "Dvir" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "authorSignature" : {
            "$ref" : "#/components/schemas/DvirAuthorSignature"
          },
          "endTime" : {
            "type" : "string",
            "description" : "Time when driver signed and completed this DVIR. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.",
            "example" : "2020-01-27T07:06:25Z"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique Samsara ID for the DVIR.",
            "example" : "7107471"
          },
          "licensePlate" : {
            "$ref" : "#/components/schemas/DvirLicensePlate"
          },
          "location" : {
            "$ref" : "#/components/schemas/DvirLocation"
          },
          "mechanicNotes" : {
            "$ref" : "#/components/schemas/DvirMechanicNotes"
          },
          "odometerMeters" : {
            "$ref" : "#/components/schemas/DvirOdometerMeters"
          },
          "safetyStatus" : {
            "type" : "string",
            "description" : "The condition of vehicle on which DVIR was done.",
            "example" : "unsafe",
            "enum" : [ "safe", "unsafe", "resolved" ],
            "default" : "unsafe"
          },
          "secondSignature" : {
            "$ref" : "#/components/schemas/DvirSecondSignature"
          },
          "startTime" : {
            "type" : "string",
            "description" : "Time when driver began filling out this DVIR. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.",
            "example" : "2020-01-27T07:06:25Z"
          },
          "thirdSignature" : {
            "$ref" : "#/components/schemas/DvirThirdSignature"
          },
          "trailer" : {
            "$ref" : "#/components/schemas/DvirTrailer"
          },
          "trailerDefects" : {
            "$ref" : "#/components/schemas/DvirTrailerDefects"
          },
          "trailerName" : {
            "type" : "string",
            "description" : "The name of the trailer the DVIR was submitted for.  Only included for tractor+trailer DVIRs.",
            "example" : "Midwest Trailer #5"
          },
          "type" : {
            "type" : "string",
            "description" : "Inspection type of the DVIR.",
            "example" : "preTrip",
            "enum" : [ "preTrip", "postTrip", "mechanic", "unspecified" ],
            "default" : "unspecified"
          },
          "vehicle" : {
            "$ref" : "#/components/schemas/DvirVehicle"
          },
          "vehicleDefects" : {
            "$ref" : "#/components/schemas/DvirVehicleDefects"
          }
        },
        "description" : "Information about a DVIR."
      },
      "DvirAuthorSignature" : {
        "allOf" : [ {
          "type" : "object",
          "description" : "An author signature object which has a signatory mini object with the signed time. Author Signature."
        }, {
          "$ref" : "#/components/schemas/DvirSignature"
        } ]
      },
      "DvirLicensePlate" : {
        "maxLength" : 12,
        "type" : "string",
        "description" : "The license plate of this vehicle.",
        "example" : "XHK1234"
      },
      "DvirLocation" : {
        "type" : "string",
        "description" : "Optional string if your jurisdiction requires a location of the DVIR.",
        "example" : "350 Rhode Island St Ste. 400S, San Francisco, CA 94103"
      },
      "DvirMechanicNotes" : {
        "type" : "string",
        "description" : "The mechanics notes on the DVIR.",
        "example" : "Replaced headlight on passenger side."
      },
      "DvirOdometerMeters" : {
        "type" : "integer",
        "description" : "The odometer reading in meters.",
        "example" : 14010293
      },
      "DvirResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Dvir"
          }
        },
        "description" : "The DVIR response."
      },
      "DvirSecondSignature" : {
        "allOf" : [ {
          "type" : "object",
          "description" : "An author signature object which has a signatory mini object with the signed time. Second Signature."
        }, {
          "$ref" : "#/components/schemas/DvirSignature"
        } ]
      },
      "DvirSignature" : {
        "type" : "object",
        "properties" : {
          "signatoryUser" : {
            "type" : "object",
            "allOf" : [ {
              "type" : "object",
              "description" : "The user who signed the DVIR."
            }, {
              "$ref" : "#/components/schemas/userTinyResponse"
            } ]
          },
          "signedAtTime" : {
            "type" : "string",
            "description" : "The time when the DVIR was signed. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.",
            "example" : "2020-01-27T07:06:25Z"
          },
          "type" : {
            "type" : "string",
            "description" : "Whether the DVIR was submitted by a `driver` or `mechanic`.",
            "example" : "driver",
            "enum" : [ "driver", "mechanic" ],
            "default" : "driver"
          }
        },
        "description" : "DVIR Signure."
      },
      "DvirThirdSignature" : {
        "allOf" : [ {
          "type" : "object",
          "description" : "An author signature object which has a signatory mini object with the signed time. Third Signature."
        }, {
          "$ref" : "#/components/schemas/DvirSignature"
        } ]
      },
      "DvirTrailer" : {
        "allOf" : [ {
          "type" : "object",
          "description" : "The trailer the DVIR was submitted for. Only included for trailer only DVIRs."
        }, {
          "$ref" : "#/components/schemas/trailerTinyResponse"
        } ]
      },
      "DvirTrailerDefects" : {
        "type" : "array",
        "description" : "Defects registered for the trailer which was part of the DVIR.",
        "items" : {
          "$ref" : "#/components/schemas/dvirTrailerDefectsItems"
        }
      },
      "DvirVehicle" : {
        "allOf" : [ {
          "type" : "object",
          "description" : "The vehicle the DVIR was submitted for. Only included for tractor or tractor+trailer DVIRs."
        }, {
          "$ref" : "#/components/schemas/vehicleTinyResponse"
        } ]
      },
      "DvirVehicleDefects" : {
        "type" : "array",
        "description" : "Defects registered for the vehicle which was part of the DVIR.",
        "items" : {
          "$ref" : "#/components/schemas/dvirTrailerDefectsItems"
        }
      },
      "DvirsListResponse" : {
        "required" : [ "data", "pagination" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "description" : "A list of DVIRs.",
            "items" : {
              "$ref" : "#/components/schemas/Dvir"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/paginationResponse"
          }
        },
        "description" : "A list of DVIRs and pagination information."
      },
      "EldSettingsObjectResponseBody" : {
        "type" : "object",
        "properties" : {
          "rulesets" : {
            "type" : "array",
            "description" : "The driver's ELD rulesets and overrides.",
            "example" : [ {
              "break" : "Explosives/HazMat (on-duty)",
              "cycle" : "Canada South Cycle 1 (70 hour / 7 day)",
              "jurisdiction" : "AR",
              "restart" : "36-hour Restart",
              "shift" : "US Interstate Passenger"
            }, {
              "break" : "Explosives/HazMat (on-duty)",
              "cycle" : "Canada South Cycle 1 (70 hour / 7 day)",
              "jurisdiction" : "AR",
              "restart" : "36-hour Restart",
              "shift" : "US Interstate Passenger"
            }, {
              "break" : "Explosives/HazMat (on-duty)",
              "cycle" : "Canada South Cycle 1 (70 hour / 7 day)",
              "jurisdiction" : "AR",
              "restart" : "36-hour Restart",
              "shift" : "US Interstate Passenger"
            }, {
              "break" : "Explosives/HazMat (on-duty)",
              "cycle" : "Canada South Cycle 1 (70 hour / 7 day)",
              "jurisdiction" : "AR",
              "restart" : "36-hour Restart",
              "shift" : "US Interstate Passenger"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/DriverRulesetObjectResponseBody"
            }
          }
        },
        "example" : {
          "rulesets" : [ {
            "break" : "Explosives/HazMat (on-duty)",
            "cycle" : "Canada South Cycle 1 (70 hour / 7 day)",
            "jurisdiction" : "AR",
            "restart" : "36-hour Restart",
            "shift" : "US Interstate Passenger"
          }, {
            "break" : "Explosives/HazMat (on-duty)",
            "cycle" : "Canada South Cycle 1 (70 hour / 7 day)",
            "jurisdiction" : "AR",
            "restart" : "36-hour Restart",
            "shift" : "US Interstate Passenger"
          }, {
            "break" : "Explosives/HazMat (on-duty)",
            "cycle" : "Canada South Cycle 1 (70 hour / 7 day)",
            "jurisdiction" : "AR",
            "restart" : "36-hour Restart",
            "shift" : "US Interstate Passenger"
          } ]
        }
      },
      "Equipment" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "assetSerial" : {
            "type" : "string",
            "description" : "An equipment identification number.",
            "example" : "1FUJA6BD31LJ09646"
          },
          "id" : {
            "$ref" : "#/components/schemas/EquipmentId"
          },
          "name" : {
            "$ref" : "#/components/schemas/EquipmentName"
          },
          "notes" : {
            "maxLength" : 255,
            "type" : "string",
            "description" : "Notes about a piece of equipment. Samsara supports a maximum of 255 chars.",
            "example" : "These are notes about this given equipment."
          },
          "tags" : {
            "type" : "array",
            "description" : "An array of all tag mini-objects that are associated with the given equipment.",
            "items" : {
              "$ref" : "#/components/schemas/tagTinyResponse"
            }
          }
        },
        "description" : "An equipment object."
      },
      "EquipmentEngineRpm" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/EquipmentTime"
          },
          "value" : {
            "type" : "integer",
            "description" : "The revolutions per minute of the engine.",
            "example" : 1800
          }
        },
        "description" : "Engine RPM reading."
      },
      "EquipmentEngineSeconds" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/EquipmentTime"
          },
          "value" : {
            "type" : "integer",
            "description" : "An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG24 device is receiving power and an offset provided manually through the Samsara cloud dashboard.",
            "example" : 22374000
          }
        },
        "description" : "[DEPRECATED] Please use either `gatewayEngineSeconds` or `obdEngineSeconds`."
      },
      "EquipmentEngineState" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/EquipmentTime"
          },
          "value" : {
            "type" : "string",
            "description" : "An approximation of engine state based on readings the AG24 receives from the aux/digio cable.",
            "example" : "On",
            "enum" : [ "Off", "On" ]
          }
        },
        "description" : "[DEPRECATED] Please use either `gatewayEngineStates` or `obdEngineStates`."
      },
      "EquipmentFuelPercent" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/EquipmentTime"
          },
          "value" : {
            "type" : "integer",
            "description" : "The percent of fuel in the unit of equipment.",
            "example" : 54
          }
        },
        "description" : "Fuel percent reading."
      },
      "EquipmentGatewayEngineSeconds" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/EquipmentTime"
          },
          "value" : {
            "type" : "integer",
            "description" : "An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG24 device is receiving power and an offset provided manually through the Samsara cloud dashboard.",
            "example" : 22374000
          }
        },
        "description" : "Engine seconds reading from the aux/digio cable."
      },
      "EquipmentGatewayEngineState" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/EquipmentTime"
          },
          "value" : {
            "type" : "string",
            "description" : "An approximation of engine state based on readings the AG24 receives from the aux/digio cable.",
            "example" : "On",
            "enum" : [ "Off", "On" ]
          }
        },
        "description" : "Engine state reading from the aux/digio cable."
      },
      "EquipmentGatewayJ1939EngineSeconds" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/EquipmentTime"
          },
          "value" : {
            "type" : "integer",
            "description" : "An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG24 device is receiving power and an offset provided manually through the Samsara cloud dashboard.",
            "example" : 22374000
          }
        },
        "description" : "Engine seconds reading from the J1939/CAT cable."
      },
      "EquipmentGpsOdometerMeters" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/EquipmentTime"
          },
          "value" : {
            "type" : "integer",
            "description" : "An approximation of odometer reading based on GPS calculations since the AG24 was activated, and a manual odometer offset provided in the Samsara cloud dashboard.",
            "example" : 3200
          }
        },
        "description" : "GPS odometer reading."
      },
      "EquipmentId" : {
        "type" : "string",
        "description" : "Unique Samsara ID for the equipment.",
        "example" : "112"
      },
      "EquipmentListResponse" : {
        "required" : [ "data", "pagination" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "description" : "List of equipment objects.",
            "items" : {
              "$ref" : "#/components/schemas/Equipment"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/paginationResponse"
          }
        },
        "description" : "List of all equipment objects, and pagination information."
      },
      "EquipmentLocation" : {
        "required" : [ "latitude", "longitude", "time" ],
        "type" : "object",
        "properties" : {
          "heading" : {
            "type" : "number",
            "description" : "Heading of the unit of equipment in degrees.",
            "format" : "double",
            "example" : 120.0
          },
          "latitude" : {
            "type" : "number",
            "description" : "GPS latitude represented in degrees",
            "format" : "double",
            "example" : 122.142
          },
          "longitude" : {
            "type" : "number",
            "description" : "GPS longitude represented in degrees",
            "format" : "double",
            "example" : -93.343
          },
          "speed" : {
            "type" : "number",
            "description" : "GPS speed of the unit of equipment in miles per hour.",
            "format" : "double",
            "example" : 48.3
          },
          "time" : {
            "$ref" : "#/components/schemas/time"
          }
        },
        "description" : "Location reading."
      },
      "EquipmentLocationsListResponse" : {
        "required" : [ "data", "pagination" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "description" : "Time-series of locations for the specified units of equipment.",
            "items" : {
              "$ref" : "#/components/schemas/EquipmentLocationsListResponse_data"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/paginationResponse"
          }
        },
        "description" : "A time-series of equipment locations and pagination information"
      },
      "EquipmentLocationsResponse" : {
        "required" : [ "data", "pagination" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "description" : "List of the most recent locations for the specified units of equipment.",
            "items" : {
              "$ref" : "#/components/schemas/EquipmentLocationsResponse_data"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/paginationResponse"
          }
        },
        "description" : "The most recent equipment locations and pagination information"
      },
      "EquipmentName" : {
        "type" : "string",
        "description" : "Name of the equipment.",
        "example" : "Crane A7"
      },
      "EquipmentObdEngineSeconds" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/EquipmentTime"
          },
          "value" : {
            "type" : "integer",
            "description" : "The number of seconds the engine has been running since it was new. This value is provided directly from on-board diagnostics.",
            "example" : 22374000
          }
        },
        "description" : "Engine seconds reading from on-board diagnostics."
      },
      "EquipmentObdEngineState" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/EquipmentTime"
          },
          "value" : {
            "type" : "string",
            "description" : "The state of the engine read from on-board diagnostics.",
            "example" : "On",
            "enum" : [ "Off", "On", "Idle" ]
          }
        },
        "description" : "Engine state reading from on-board diagnostics."
      },
      "EquipmentResponse" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Equipment"
          }
        },
        "description" : "A response containing an equipment object."
      },
      "EquipmentStatsListResponse" : {
        "required" : [ "data", "pagination" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "description" : "Time-series of stats for the specified units of equipment and stat types.",
            "items" : {
              "$ref" : "#/components/schemas/EquipmentStatsListResponse_data"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/paginationResponse"
          }
        },
        "description" : "A time-series of equipment stats and pagination information"
      },
      "EquipmentStatsResponse" : {
        "required" : [ "data", "pagination" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "description" : "List of the most recent stats for the specified units of equipment and stat types.",
            "items" : {
              "$ref" : "#/components/schemas/EquipmentStatsResponse_data"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/paginationResponse"
          }
        },
        "description" : "The most recent equipment stats and pagination information"
      },
      "EquipmentTime" : {
        "type" : "string",
        "description" : "UTC timestamp of the time the data point was generated by the equipment, in RFC3339 format.",
        "example" : "2019-05-03T04:30:31Z"
      },
      "ExtendedDriverTinyResponse" : {
        "type" : "object",
        "properties" : {
          "externalIds" : {
            "type" : "object",
            "properties" : { },
            "description" : "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
            "example" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "ID of the driver.",
            "example" : "88668"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the driver.",
            "example" : "Susan Bob"
          },
          "username" : {
            "type" : "string",
            "description" : "Username of the driver.",
            "example" : "susanbob"
          }
        },
        "description" : "A minified driver object."
      },
      "FftSpectraDataPoint" : {
        "type" : "object",
        "properties" : {
          "fftSpectra" : {
            "$ref" : "#/components/schemas/FftSpectraDataPoint_fftSpectra"
          },
          "time" : {
            "$ref" : "#/components/schemas/time"
          }
        },
        "description" : "FFT spectrum data point of a data input."
      },
      "FuelConsumedMl" : {
        "type" : "number",
        "description" : "Fuel consumption in milliliters."
      },
      "GetAttributesByEntityTypeResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Attribute"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/paginationResponse"
          }
        }
      },
      "GoaAddressTinyResponseResponseBody" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "externalIds" : {
            "type" : "object",
            "properties" : { },
            "description" : "A map of external ids",
            "example" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the address",
            "example" : "494123"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the address",
            "example" : "Company Office #1"
          }
        },
        "description" : "A minified Address object",
        "example" : {
          "externalIds" : {
            "maintenanceId" : "250020",
            "payrollId" : "ABFS18600"
          },
          "id" : "494123",
          "name" : "Company Office #1"
        }
      },
      "GoaDocumentTypeTinyResponseResponseBody" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "ID of the document type.",
            "example" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the document type.",
            "example" : "Fleet Truck List"
          }
        },
        "description" : "A minified document type object",
        "example" : {
          "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
          "name" : "Fleet Truck List"
        }
      },
      "GoaDriverTinyResponseResponseBody" : {
        "type" : "object",
        "properties" : {
          "externalIds" : {
            "type" : "object",
            "properties" : { },
            "description" : "A map of external ids",
            "example" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "ID of the driver",
            "example" : "45646"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the driver",
            "example" : "Driver Bob"
          }
        },
        "description" : "A minified driver object",
        "example" : {
          "externalIds" : {
            "maintenanceId" : "250020",
            "payrollId" : "ABFS18600"
          },
          "id" : "45646",
          "name" : "Driver Bob"
        }
      },
      "GoaGatewayTinyResponseResponseBody" : {
        "required" : [ "model", "serial" ],
        "type" : "object",
        "properties" : {
          "model" : {
            "type" : "string",
            "description" : "The model of the gateway installed on the asset.",
            "example" : "VG34"
          },
          "serial" : {
            "type" : "string",
            "description" : "The serial number of the gateway installed on the asset.",
            "example" : "GFRV-43N-VGX"
          }
        },
        "description" : "A minified gateway object",
        "example" : {
          "model" : "VG34",
          "serial" : "GFRV-43N-VGX"
        }
      },
      "GoaPaginationResponseResponseBody" : {
        "required" : [ "endCursor", "hasNextPage" ],
        "type" : "object",
        "properties" : {
          "endCursor" : {
            "type" : "string",
            "description" : "Cursor identifier representing the last element in the response. This value should be used in conjunction with a subsequent request's 'after' query parameter. This may be an empty string if there are no more pages left to view.",
            "example" : "MjkY"
          },
          "hasNextPage" : {
            "type" : "boolean",
            "description" : "True if there are more pages of results immediately available after this endCursor.",
            "example" : true
          }
        },
        "description" : "Pagination parameters.",
        "example" : {
          "endCursor" : "MjkY",
          "hasNextPage" : true
        }
      },
      "GoaRouteTinyResponseResponseBody" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "externalIds" : {
            "type" : "object",
            "properties" : { },
            "description" : "A map of external ids",
            "example" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the route stop",
            "example" : "494123"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the route stop",
            "example" : "Company Warehouse #1"
          }
        },
        "description" : "A minified route stop object",
        "example" : {
          "externalIds" : {
            "maintenanceId" : "250020",
            "payrollId" : "ABFS18600"
          },
          "id" : "494123",
          "name" : "Company Warehouse #1"
        }
      },
      "GoaTagTinyResponseResponseBody" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "ID of the tag",
            "example" : "3914"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the tag.",
            "example" : "East Coast"
          },
          "parentTagId" : {
            "type" : "string",
            "description" : "If this tag is part a hierarchical tag tree, this is the ID of the parent tag, otherwise this will be omitted.",
            "example" : "4815"
          }
        },
        "description" : "A minified tag object",
        "example" : {
          "id" : "3914",
          "name" : "East Coast",
          "parentTagId" : "4815"
        }
      },
      "GoaVehicleTinyResponseResponseBody" : {
        "type" : "object",
        "properties" : {
          "externalIds" : {
            "type" : "object",
            "properties" : { },
            "description" : "A map of external ids",
            "example" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "ID of the vehicle",
            "example" : "494123"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the vehicle",
            "example" : "Fleet Truck #1"
          }
        },
        "description" : "A minified vehicle object",
        "example" : {
          "externalIds" : {
            "maintenanceId" : "250020",
            "payrollId" : "ABFS18600"
          },
          "id" : "494123",
          "name" : "Fleet Truck #1"
        }
      },
      "HosBreak" : {
        "type" : "object",
        "properties" : {
          "timeUntilBreakDurationMs" : {
            "type" : "number",
            "description" : "Time until the driver has a required break in milliseconds.",
            "example" : 2.88E+7
          }
        },
        "description" : "Remaining durations for the HOS rest break requirement."
      },
      "HosClocks" : {
        "type" : "object",
        "properties" : {
          "break" : {
            "$ref" : "#/components/schemas/HosBreak"
          },
          "cycle" : {
            "$ref" : "#/components/schemas/HosCycle"
          },
          "drive" : {
            "$ref" : "#/components/schemas/HosDrive"
          },
          "shift" : {
            "$ref" : "#/components/schemas/HosShift"
          }
        },
        "description" : "Remaining durations and start times (where applicable) for various HOS rules. See [this page](https://www.samsara.com/fleet/eld-compliance/hours-of-service) for more information on HOS rules."
      },
      "HosClocksForDriver" : {
        "type" : "object",
        "properties" : {
          "clocks" : {
            "$ref" : "#/components/schemas/HosClocks"
          },
          "currentDutyStatus" : {
            "$ref" : "#/components/schemas/CurrentDutyStatus"
          },
          "currentVehicle" : {
            "$ref" : "#/components/schemas/vehicleTinyResponse"
          },
          "driver" : {
            "$ref" : "#/components/schemas/driverTinyResponse"
          },
          "violations" : {
            "$ref" : "#/components/schemas/HosViolations"
          }
        },
        "description" : "HOS clock values for a specific driver, including remaining times and violations."
      },
      "HosClocksForDrivers" : {
        "type" : "array",
        "description" : "List of HOS clocks for the specified drivers.",
        "items" : {
          "$ref" : "#/components/schemas/HosClocksForDriver"
        }
      },
      "HosClocksResponse" : {
        "required" : [ "data", "pagination" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/HosClocksForDrivers"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/paginationResponse"
          }
        },
        "description" : "Drivers HOS clocks and pagination info."
      },
      "HosCycle" : {
        "type" : "object",
        "properties" : {
          "cycleRemainingDurationMs" : {
            "type" : "number",
            "description" : "Remaining on duty or driving time the driver has in the current cycle in milliseconds. For property-carrying drivers, this is the amount of time the driver can be on duty or driving before hitting the 60/70-hour limit in 7/8 days.",
            "example" : 2.52E+8
          },
          "cycleStartedAtTime" : {
            "$ref" : "#/components/schemas/time"
          },
          "cycleTomorrowDurationMs" : {
            "type" : "number",
            "description" : "Remaining on duty or driving time the driver has available tomorrow in milliseconds. For property-carrying drivers this is calculated based on the 60/70-hour limit in 7/8 days rule.",
            "example" : 2.52E+8
          }
        },
        "description" : "Remaining durations and start time for the HOS driving cycle."
      },
      "HosDailyLogsGetHosDailyLogsBadRequestResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Invalid value for parameter."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "Bad Request parameters",
        "example" : {
          "message" : "Invalid value for parameter.",
          "requestId" : "8916e1c1"
        }
      },
      "HosDailyLogsGetHosDailyLogsInternalErrorResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Failed to execute GraphQL query."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "An internal server error occurred",
        "example" : {
          "message" : "Failed to execute GraphQL query.",
          "requestId" : "8916e1c1"
        }
      },
      "HosDailyLogsGetHosDailyLogsNotFoundResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Object not found."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "Resource not found",
        "example" : {
          "message" : "Object not found.",
          "requestId" : "8916e1c1"
        }
      },
      "HosDailyLogsGetHosDailyLogsNotImplementedResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Not implemented."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "Requested endpoint is not yet implemented",
        "example" : {
          "message" : "Not implemented.",
          "requestId" : "8916e1c1"
        }
      },
      "HosDailyLogsGetHosDailyLogsResponseBody" : {
        "required" : [ "data", "pagination" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "description" : "List of drivers and their HOS daily logs data.",
            "example" : [ {
              "distanceTraveled" : {
                "driveDistanceMeters" : 796625.28,
                "personalConveyanceDistanceMeters" : 27358.85,
                "yardMoveDistanceMeters" : 1287.48
              },
              "driver" : {
                "eldSettings" : {
                  "rulesets" : [ {
                    "break" : "Explosives/HazMat (on-duty)",
                    "cycle" : "Canada South Cycle 1 (70 hour / 7 day)",
                    "jurisdiction" : "AR",
                    "restart" : "36-hour Restart",
                    "shift" : "US Interstate Passenger"
                  }, {
                    "break" : "Explosives/HazMat (on-duty)",
                    "cycle" : "Canada South Cycle 1 (70 hour / 7 day)",
                    "jurisdiction" : "AR",
                    "restart" : "36-hour Restart",
                    "shift" : "US Interstate Passenger"
                  } ]
                },
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "45646",
                "name" : "Driver Bob",
                "timezone" : "America/Los_Angeles"
              },
              "dutyStatusDurations" : {
                "activeDurationMs" : 38825000,
                "driveDurationMs" : 31970000,
                "offDutyDurationMs" : 20555000,
                "onDutyDurationMs" : 5423000,
                "personalConveyanceDurationMs" : 4358000,
                "sleeperBerthDurationMs" : 27020000,
                "waitingTimeDurationMs" : 1560000,
                "yardMoveDurationMs" : 1432000
              },
              "endTime" : "2019-06-20T19:08:25Z",
              "logMetaData" : {
                "certifiedAtTime" : "2020-01-01T06:00:00Z",
                "isCertified" : false,
                "shippingDocs" : "Delivery 123, chips and soda",
                "trailerNames" : [ "10293", "Trailer ID 1" ],
                "vehicles" : [ {
                  "externalIds" : {
                    "maintenanceId" : "250020",
                    "payrollId" : "ABFS18600"
                  },
                  "id" : "494123",
                  "name" : "Fleet Truck #1"
                }, {
                  "externalIds" : {
                    "maintenanceId" : "250020",
                    "payrollId" : "ABFS18600"
                  },
                  "id" : "494123",
                  "name" : "Fleet Truck #1"
                }, {
                  "externalIds" : {
                    "maintenanceId" : "250020",
                    "payrollId" : "ABFS18600"
                  },
                  "id" : "494123",
                  "name" : "Fleet Truck #1"
                } ]
              },
              "pendingDutyStatusDurations" : {
                "activeDurationMs" : 38825000,
                "driveDurationMs" : 31970000,
                "offDutyDurationMs" : 20555000,
                "onDutyDurationMs" : 5423000,
                "personalConveyanceDurationMs" : 4358000,
                "sleeperBerthDurationMs" : 27020000,
                "waitingTimeDurationMs" : 1560000,
                "yardMoveDurationMs" : 1432000
              },
              "startTime" : "2019-06-13T19:08:25Z"
            }, {
              "distanceTraveled" : {
                "driveDistanceMeters" : 796625.28,
                "personalConveyanceDistanceMeters" : 27358.85,
                "yardMoveDistanceMeters" : 1287.48
              },
              "driver" : {
                "eldSettings" : {
                  "rulesets" : [ {
                    "break" : "Explosives/HazMat (on-duty)",
                    "cycle" : "Canada South Cycle 1 (70 hour / 7 day)",
                    "jurisdiction" : "AR",
                    "restart" : "36-hour Restart",
                    "shift" : "US Interstate Passenger"
                  }, {
                    "break" : "Explosives/HazMat (on-duty)",
                    "cycle" : "Canada South Cycle 1 (70 hour / 7 day)",
                    "jurisdiction" : "AR",
                    "restart" : "36-hour Restart",
                    "shift" : "US Interstate Passenger"
                  } ]
                },
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "45646",
                "name" : "Driver Bob",
                "timezone" : "America/Los_Angeles"
              },
              "dutyStatusDurations" : {
                "activeDurationMs" : 38825000,
                "driveDurationMs" : 31970000,
                "offDutyDurationMs" : 20555000,
                "onDutyDurationMs" : 5423000,
                "personalConveyanceDurationMs" : 4358000,
                "sleeperBerthDurationMs" : 27020000,
                "waitingTimeDurationMs" : 1560000,
                "yardMoveDurationMs" : 1432000
              },
              "endTime" : "2019-06-20T19:08:25Z",
              "logMetaData" : {
                "certifiedAtTime" : "2020-01-01T06:00:00Z",
                "isCertified" : false,
                "shippingDocs" : "Delivery 123, chips and soda",
                "trailerNames" : [ "10293", "Trailer ID 1" ],
                "vehicles" : [ {
                  "externalIds" : {
                    "maintenanceId" : "250020",
                    "payrollId" : "ABFS18600"
                  },
                  "id" : "494123",
                  "name" : "Fleet Truck #1"
                }, {
                  "externalIds" : {
                    "maintenanceId" : "250020",
                    "payrollId" : "ABFS18600"
                  },
                  "id" : "494123",
                  "name" : "Fleet Truck #1"
                }, {
                  "externalIds" : {
                    "maintenanceId" : "250020",
                    "payrollId" : "ABFS18600"
                  },
                  "id" : "494123",
                  "name" : "Fleet Truck #1"
                } ]
              },
              "pendingDutyStatusDurations" : {
                "activeDurationMs" : 38825000,
                "driveDurationMs" : 31970000,
                "offDutyDurationMs" : 20555000,
                "onDutyDurationMs" : 5423000,
                "personalConveyanceDurationMs" : 4358000,
                "sleeperBerthDurationMs" : 27020000,
                "waitingTimeDurationMs" : 1560000,
                "yardMoveDurationMs" : 1432000
              },
              "startTime" : "2019-06-13T19:08:25Z"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/HosDailyLogsObjectResponseBody"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/GoaPaginationResponseResponseBody"
          }
        },
        "example" : {
          "data" : [ {
            "distanceTraveled" : {
              "driveDistanceMeters" : 796625.28,
              "personalConveyanceDistanceMeters" : 27358.85,
              "yardMoveDistanceMeters" : 1287.48
            },
            "driver" : {
              "eldSettings" : {
                "rulesets" : [ {
                  "break" : "Explosives/HazMat (on-duty)",
                  "cycle" : "Canada South Cycle 1 (70 hour / 7 day)",
                  "jurisdiction" : "AR",
                  "restart" : "36-hour Restart",
                  "shift" : "US Interstate Passenger"
                }, {
                  "break" : "Explosives/HazMat (on-duty)",
                  "cycle" : "Canada South Cycle 1 (70 hour / 7 day)",
                  "jurisdiction" : "AR",
                  "restart" : "36-hour Restart",
                  "shift" : "US Interstate Passenger"
                } ]
              },
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "45646",
              "name" : "Driver Bob",
              "timezone" : "America/Los_Angeles"
            },
            "dutyStatusDurations" : {
              "activeDurationMs" : 38825000,
              "driveDurationMs" : 31970000,
              "offDutyDurationMs" : 20555000,
              "onDutyDurationMs" : 5423000,
              "personalConveyanceDurationMs" : 4358000,
              "sleeperBerthDurationMs" : 27020000,
              "waitingTimeDurationMs" : 1560000,
              "yardMoveDurationMs" : 1432000
            },
            "endTime" : "2019-06-20T19:08:25Z",
            "logMetaData" : {
              "certifiedAtTime" : "2020-01-01T06:00:00Z",
              "isCertified" : false,
              "shippingDocs" : "Delivery 123, chips and soda",
              "trailerNames" : [ "10293", "Trailer ID 1" ],
              "vehicles" : [ {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "494123",
                "name" : "Fleet Truck #1"
              }, {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "494123",
                "name" : "Fleet Truck #1"
              }, {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "494123",
                "name" : "Fleet Truck #1"
              } ]
            },
            "pendingDutyStatusDurations" : {
              "activeDurationMs" : 38825000,
              "driveDurationMs" : 31970000,
              "offDutyDurationMs" : 20555000,
              "onDutyDurationMs" : 5423000,
              "personalConveyanceDurationMs" : 4358000,
              "sleeperBerthDurationMs" : 27020000,
              "waitingTimeDurationMs" : 1560000,
              "yardMoveDurationMs" : 1432000
            },
            "startTime" : "2019-06-13T19:08:25Z"
          }, {
            "distanceTraveled" : {
              "driveDistanceMeters" : 796625.28,
              "personalConveyanceDistanceMeters" : 27358.85,
              "yardMoveDistanceMeters" : 1287.48
            },
            "driver" : {
              "eldSettings" : {
                "rulesets" : [ {
                  "break" : "Explosives/HazMat (on-duty)",
                  "cycle" : "Canada South Cycle 1 (70 hour / 7 day)",
                  "jurisdiction" : "AR",
                  "restart" : "36-hour Restart",
                  "shift" : "US Interstate Passenger"
                }, {
                  "break" : "Explosives/HazMat (on-duty)",
                  "cycle" : "Canada South Cycle 1 (70 hour / 7 day)",
                  "jurisdiction" : "AR",
                  "restart" : "36-hour Restart",
                  "shift" : "US Interstate Passenger"
                } ]
              },
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "45646",
              "name" : "Driver Bob",
              "timezone" : "America/Los_Angeles"
            },
            "dutyStatusDurations" : {
              "activeDurationMs" : 38825000,
              "driveDurationMs" : 31970000,
              "offDutyDurationMs" : 20555000,
              "onDutyDurationMs" : 5423000,
              "personalConveyanceDurationMs" : 4358000,
              "sleeperBerthDurationMs" : 27020000,
              "waitingTimeDurationMs" : 1560000,
              "yardMoveDurationMs" : 1432000
            },
            "endTime" : "2019-06-20T19:08:25Z",
            "logMetaData" : {
              "certifiedAtTime" : "2020-01-01T06:00:00Z",
              "isCertified" : false,
              "shippingDocs" : "Delivery 123, chips and soda",
              "trailerNames" : [ "10293", "Trailer ID 1" ],
              "vehicles" : [ {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "494123",
                "name" : "Fleet Truck #1"
              }, {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "494123",
                "name" : "Fleet Truck #1"
              }, {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "494123",
                "name" : "Fleet Truck #1"
              } ]
            },
            "pendingDutyStatusDurations" : {
              "activeDurationMs" : 38825000,
              "driveDurationMs" : 31970000,
              "offDutyDurationMs" : 20555000,
              "onDutyDurationMs" : 5423000,
              "personalConveyanceDurationMs" : 4358000,
              "sleeperBerthDurationMs" : 27020000,
              "waitingTimeDurationMs" : 1560000,
              "yardMoveDurationMs" : 1432000
            },
            "startTime" : "2019-06-13T19:08:25Z"
          }, {
            "distanceTraveled" : {
              "driveDistanceMeters" : 796625.28,
              "personalConveyanceDistanceMeters" : 27358.85,
              "yardMoveDistanceMeters" : 1287.48
            },
            "driver" : {
              "eldSettings" : {
                "rulesets" : [ {
                  "break" : "Explosives/HazMat (on-duty)",
                  "cycle" : "Canada South Cycle 1 (70 hour / 7 day)",
                  "jurisdiction" : "AR",
                  "restart" : "36-hour Restart",
                  "shift" : "US Interstate Passenger"
                }, {
                  "break" : "Explosives/HazMat (on-duty)",
                  "cycle" : "Canada South Cycle 1 (70 hour / 7 day)",
                  "jurisdiction" : "AR",
                  "restart" : "36-hour Restart",
                  "shift" : "US Interstate Passenger"
                } ]
              },
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "45646",
              "name" : "Driver Bob",
              "timezone" : "America/Los_Angeles"
            },
            "dutyStatusDurations" : {
              "activeDurationMs" : 38825000,
              "driveDurationMs" : 31970000,
              "offDutyDurationMs" : 20555000,
              "onDutyDurationMs" : 5423000,
              "personalConveyanceDurationMs" : 4358000,
              "sleeperBerthDurationMs" : 27020000,
              "waitingTimeDurationMs" : 1560000,
              "yardMoveDurationMs" : 1432000
            },
            "endTime" : "2019-06-20T19:08:25Z",
            "logMetaData" : {
              "certifiedAtTime" : "2020-01-01T06:00:00Z",
              "isCertified" : false,
              "shippingDocs" : "Delivery 123, chips and soda",
              "trailerNames" : [ "10293", "Trailer ID 1" ],
              "vehicles" : [ {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "494123",
                "name" : "Fleet Truck #1"
              }, {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "494123",
                "name" : "Fleet Truck #1"
              }, {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "494123",
                "name" : "Fleet Truck #1"
              } ]
            },
            "pendingDutyStatusDurations" : {
              "activeDurationMs" : 38825000,
              "driveDurationMs" : 31970000,
              "offDutyDurationMs" : 20555000,
              "onDutyDurationMs" : 5423000,
              "personalConveyanceDurationMs" : 4358000,
              "sleeperBerthDurationMs" : 27020000,
              "waitingTimeDurationMs" : 1560000,
              "yardMoveDurationMs" : 1432000
            },
            "startTime" : "2019-06-13T19:08:25Z"
          } ],
          "pagination" : {
            "endCursor" : "MjkY",
            "hasNextPage" : true
          }
        }
      },
      "HosDailyLogsObjectResponseBody" : {
        "type" : "object",
        "properties" : {
          "distanceTraveled" : {
            "$ref" : "#/components/schemas/DistanceTraveledObjectResponseBody"
          },
          "driver" : {
            "$ref" : "#/components/schemas/DriverWithTimezoneEldSettingsObjectResponseBody"
          },
          "dutyStatusDurations" : {
            "$ref" : "#/components/schemas/DutyStatusDurationObjectResponseBody"
          },
          "endTime" : {
            "type" : "string",
            "description" : "The end time of the daily log in RFC 3339 format. This will be calculated using timezone of the driver.",
            "example" : "2019-06-20T19:08:25Z"
          },
          "logMetaData" : {
            "$ref" : "#/components/schemas/LogMetaDataObjectResponseBody"
          },
          "pendingDutyStatusDurations" : {
            "$ref" : "#/components/schemas/DutyStatusDurationObjectResponseBody"
          },
          "startTime" : {
            "type" : "string",
            "description" : "The start time of the daily log in RFC 3339 format. This will be calculated using timezone of the driver.",
            "example" : "2019-06-13T19:08:25Z"
          }
        },
        "example" : {
          "distanceTraveled" : {
            "driveDistanceMeters" : 796625.28,
            "personalConveyanceDistanceMeters" : 27358.85,
            "yardMoveDistanceMeters" : 1287.48
          },
          "driver" : {
            "eldSettings" : {
              "rulesets" : [ {
                "break" : "Explosives/HazMat (on-duty)",
                "cycle" : "Canada South Cycle 1 (70 hour / 7 day)",
                "jurisdiction" : "AR",
                "restart" : "36-hour Restart",
                "shift" : "US Interstate Passenger"
              }, {
                "break" : "Explosives/HazMat (on-duty)",
                "cycle" : "Canada South Cycle 1 (70 hour / 7 day)",
                "jurisdiction" : "AR",
                "restart" : "36-hour Restart",
                "shift" : "US Interstate Passenger"
              } ]
            },
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "id" : "45646",
            "name" : "Driver Bob",
            "timezone" : "America/Los_Angeles"
          },
          "dutyStatusDurations" : {
            "activeDurationMs" : 38825000,
            "driveDurationMs" : 31970000,
            "offDutyDurationMs" : 20555000,
            "onDutyDurationMs" : 5423000,
            "personalConveyanceDurationMs" : 4358000,
            "sleeperBerthDurationMs" : 27020000,
            "waitingTimeDurationMs" : 1560000,
            "yardMoveDurationMs" : 1432000
          },
          "endTime" : "2019-06-20T19:08:25Z",
          "logMetaData" : {
            "certifiedAtTime" : "2020-01-01T06:00:00Z",
            "isCertified" : false,
            "shippingDocs" : "Delivery 123, chips and soda",
            "trailerNames" : [ "10293", "Trailer ID 1" ],
            "vehicles" : [ {
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "494123",
              "name" : "Fleet Truck #1"
            }, {
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "494123",
              "name" : "Fleet Truck #1"
            }, {
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "494123",
              "name" : "Fleet Truck #1"
            } ]
          },
          "pendingDutyStatusDurations" : {
            "activeDurationMs" : 38825000,
            "driveDurationMs" : 31970000,
            "offDutyDurationMs" : 20555000,
            "onDutyDurationMs" : 5423000,
            "personalConveyanceDurationMs" : 4358000,
            "sleeperBerthDurationMs" : 27020000,
            "waitingTimeDurationMs" : 1560000,
            "yardMoveDurationMs" : 1432000
          },
          "startTime" : "2019-06-13T19:08:25Z"
        }
      },
      "HosDrive" : {
        "type" : "object",
        "properties" : {
          "driveRemainingDurationMs" : {
            "type" : "number",
            "description" : "Remaining driving time the driver has in the current shift in milliseconds. For property-carrying drivers, this is the amount of time the driver can drive before hitting the 11-hour limit.",
            "example" : 3.96E+7
          }
        },
        "description" : "Remaining durations for the HOS driving shift limits."
      },
      "HosLogEntry" : {
        "required" : [ "logStartTime" ],
        "type" : "object",
        "properties" : {
          "codrivers" : {
            "type" : "array",
            "description" : "The codriver information.",
            "items" : {
              "$ref" : "#/components/schemas/driverTinyResponse"
            }
          },
          "hosStatusType" : {
            "$ref" : "#/components/schemas/hosStatusType"
          },
          "logEndTime" : {
            "$ref" : "#/components/schemas/time"
          },
          "logRecordedLocation" : {
            "$ref" : "#/components/schemas/location"
          },
          "logStartTime" : {
            "$ref" : "#/components/schemas/time"
          },
          "remark" : {
            "type" : "string",
            "description" : "Remark associated with the log entry.",
            "example" : "Lunch Break"
          },
          "vehicle" : {
            "$ref" : "#/components/schemas/vehicleTinyResponse"
          }
        },
        "description" : "A single HOS log entry."
      },
      "HosLogsForDriver" : {
        "type" : "object",
        "properties" : {
          "driver" : {
            "$ref" : "#/components/schemas/driverTinyResponse"
          },
          "hosLogs" : {
            "$ref" : "#/components/schemas/HosLogsList"
          }
        },
        "description" : "List of HOS logs for a driver."
      },
      "HosLogsForDrivers" : {
        "type" : "array",
        "description" : "List of HOS logs for the specified drivers.",
        "items" : {
          "$ref" : "#/components/schemas/HosLogsForDriver"
        }
      },
      "HosLogsList" : {
        "type" : "array",
        "description" : "List of HOS log entries.",
        "items" : {
          "$ref" : "#/components/schemas/HosLogEntry"
        }
      },
      "HosLogsResponse" : {
        "required" : [ "data", "pagination" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/HosLogsForDrivers"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/paginationResponse"
          }
        },
        "description" : "HOS logs and pagination info."
      },
      "HosShift" : {
        "type" : "object",
        "properties" : {
          "shiftRemainingDurationMs" : {
            "type" : "number",
            "description" : "Remaining on duty or driving time the driver in the current shift in milliseconds. For property-carrying drivers, this is the amount of time the driver can be on duty or driving before hitting the 14-hour limit.",
            "example" : 5.04E+7
          }
        },
        "description" : "Remaining durations and start time for the HOS on duty shift limits."
      },
      "HosViolations" : {
        "type" : "object",
        "properties" : {
          "cycleViolationDurationMs" : {
            "type" : "number",
            "description" : "Time since the driver has surpassed the driving cycle duration limit in milliseconds. For property-carrying drivers, this is the amount of time the driver has been on duty or driving past the 60/70-hour limit in 7/8 days.",
            "example" : 3.96E+7
          },
          "shiftDrivingViolationDurationMs" : {
            "type" : "number",
            "description" : "Time since the driver has surpassed the driving shift duration limit in milliseconds. For property-carrying drivers, this is the amount of time the driver has been driving past the 11-hour limit.",
            "example" : 3.96E+7
          }
        },
        "description" : "Durations the driver has been in violation of HOS rules. See [this page](https://www.samsara.com/fleet/eld-compliance/hours-of-service) for more information on HOS rules."
      },
      "IdleTimeDurationMs" : {
        "type" : "number",
        "description" : "Time spent idling in milliseconds."
      },
      "ImageDataObjectResponseBody" : {
        "type" : "object",
        "properties" : {
          "cameraView" : {
            "type" : "string",
            "description" : "A description of the cameras view. Empty if none can be inferred. (Examples: `frontFacing`, `driverFacing`).",
            "example" : "`frontFacing`"
          },
          "url" : {
            "type" : "string",
            "description" : "The s3 url of the image.",
            "example" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com"
          },
          "urlExpiryTime" : {
            "type" : "string",
            "description" : "The expiry time of the URL in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "example" : "2019-06-13T19:08:25Z"
          }
        },
        "example" : {
          "cameraView" : "`frontFacing`",
          "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
          "urlExpiryTime" : "2019-06-13T19:08:25Z"
        }
      },
      "ImageObjectResponseBody" : {
        "type" : "object",
        "properties" : {
          "captureTime" : {
            "type" : "string",
            "description" : "The capture time of the image in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "example" : "2015-09-15T14:00:12-04:00"
          },
          "imageData" : {
            "type" : "array",
            "description" : "List of image data objects.",
            "example" : [ {
              "cameraView" : "`frontFacing`",
              "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
              "urlExpiryTime" : "2019-06-13T19:08:25Z"
            }, {
              "cameraView" : "`frontFacing`",
              "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
              "urlExpiryTime" : "2019-06-13T19:08:25Z"
            }, {
              "cameraView" : "`frontFacing`",
              "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
              "urlExpiryTime" : "2019-06-13T19:08:25Z"
            }, {
              "cameraView" : "`frontFacing`",
              "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
              "urlExpiryTime" : "2019-06-13T19:08:25Z"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/ImageDataObjectResponseBody"
            }
          }
        },
        "example" : {
          "captureTime" : "2015-09-15T14:00:12-04:00",
          "imageData" : [ {
            "cameraView" : "`frontFacing`",
            "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
            "urlExpiryTime" : "2019-06-13T19:08:25Z"
          }, {
            "cameraView" : "`frontFacing`",
            "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
            "urlExpiryTime" : "2019-06-13T19:08:25Z"
          }, {
            "cameraView" : "`frontFacing`",
            "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
            "urlExpiryTime" : "2019-06-13T19:08:25Z"
          } ]
        }
      },
      "J1939D1StatusDataPoint" : {
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/time"
          },
          "value" : {
            "type" : "array",
            "description" : "List of active statuses.",
            "items" : {
              "$ref" : "#/components/schemas/J1939D1StatusDataPoint_value"
            }
          }
        },
        "description" : "Active J1939D1 statuses of a device."
      },
      "ListAddressesResponse" : {
        "required" : [ "data", "pagination" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "description" : "A list of Addresses.",
            "items" : {
              "$ref" : "#/components/schemas/Address"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/paginationResponse"
          }
        },
        "description" : "A list of Addresses and pagination information."
      },
      "ListCarrierProposedAssignmentResponse" : {
        "required" : [ "data", "pagination" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "description" : "A list of carrier-proposed assignments",
            "items" : {
              "$ref" : "#/components/schemas/CarrierProposedAssignment"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/paginationResponse"
          }
        },
        "description" : "A list of carrier-proposed assignments and pagination information."
      },
      "ListContactsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Contact"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/paginationResponse"
          }
        },
        "description" : "A list of contacts."
      },
      "ListDriversResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Driver"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/paginationResponse"
          }
        },
        "description" : "A list of drivers."
      },
      "ListIndustrialAssetsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssetResponse"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/paginationResponse"
          }
        }
      },
      "ListTagsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tag"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/paginationResponse"
          }
        },
        "description" : "A list of tags."
      },
      "ListUserRolesResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "description" : "A list of user roles",
            "items" : {
              "$ref" : "#/components/schemas/UserRole"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/paginationResponse"
          }
        },
        "description" : "A list of user roles."
      },
      "ListUsersResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "description" : "A list of users.",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/paginationResponse"
          }
        },
        "description" : "A list of users."
      },
      "ListVehiclesResponse" : {
        "required" : [ "data", "pagination" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Vehicle"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/paginationResponse"
          }
        },
        "description" : "Response for retrieving a list of vehicles."
      },
      "LocationDataPoint" : {
        "type" : "object",
        "properties" : {
          "gpsLocation" : {
            "$ref" : "#/components/schemas/LocationDataPoint_gpsLocation"
          },
          "time" : {
            "$ref" : "#/components/schemas/time"
          }
        },
        "description" : "A single location data point of a data input."
      },
      "LocationType" : {
        "type" : "string",
        "description" : "The format of the location. This field is required if a location is provided.",
        "enum" : [ "point", "address", "dataInput" ]
      },
      "LogMetaDataObjectResponseBody" : {
        "type" : "object",
        "properties" : {
          "certifiedAtTime" : {
            "type" : "string",
            "description" : "The time this log was certified in RFC 3339 format.",
            "example" : "2020-01-01T06:00:00Z"
          },
          "isCertified" : {
            "type" : "boolean",
            "description" : "Whether this HOS day chart was certified by the driver.",
            "example" : true
          },
          "shippingDocs" : {
            "type" : "string",
            "description" : "List of shipping document names associated with the driver for the day.",
            "example" : "Delivery 123, chips and soda"
          },
          "trailerNames" : {
            "type" : "array",
            "description" : "List of trailer names associated with the driver for the day. If a trailer was associated with a log through the driver app the trailer name will be the trailer ID.",
            "example" : [ "10293", "Trailer ID 1" ],
            "items" : {
              "type" : "string",
              "example" : "Veritatis voluptas consequatur quis assumenda."
            }
          },
          "vehicles" : {
            "type" : "array",
            "description" : "List of vehicles associated with the driver for the day.",
            "example" : [ {
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "494123",
              "name" : "Fleet Truck #1"
            }, {
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "494123",
              "name" : "Fleet Truck #1"
            }, {
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "494123",
              "name" : "Fleet Truck #1"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/GoaVehicleTinyResponseResponseBody"
            }
          }
        },
        "example" : {
          "certifiedAtTime" : "2020-01-01T06:00:00Z",
          "isCertified" : false,
          "shippingDocs" : "Delivery 123, chips and soda",
          "trailerNames" : [ "10293", "Trailer ID 1" ],
          "vehicles" : [ {
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "id" : "494123",
            "name" : "Fleet Truck #1"
          }, {
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "id" : "494123",
            "name" : "Fleet Truck #1"
          }, {
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "id" : "494123",
            "name" : "Fleet Truck #1"
          } ]
        }
      },
      "MinimalRoute" : {
        "type" : "object",
        "properties" : {
          "routeStops" : {
            "type" : "array",
            "description" : "The route stops in the route. Only stops that have been updated will be included in the response.",
            "items" : {
              "$ref" : "#/components/schemas/MinimalRouteStop"
            }
          }
        },
        "description" : "A single route. Only the fields that have changed are present in the response. All other fields, including the route id, will not be present in the response. For now, only routeStops are included since only Route Tracking updates are supported."
      },
      "MinimalRouteStop" : {
        "required" : [ "id", "state" ],
        "type" : "object",
        "properties" : {
          "actualArrivalTime" : {
            "type" : "string",
            "description" : "Actual arrival time, if it exists, for the route stop in RFC 3339 format.",
            "example" : "2006-01-02T15:04:05+07:00"
          },
          "actualDepartureTime" : {
            "type" : "string",
            "description" : "Actual departure time, if it exists, for the route stop in RFC 3339 format.",
            "example" : "2006-01-02T15:04:05+07:00"
          },
          "eta" : {
            "type" : "string",
            "description" : "Estimated time of arrival, if this stop is currently en-route.",
            "example" : "2006-01-02T15:04:05+07:00"
          },
          "externalIds" : {
            "type" : "object",
            "properties" : { },
            "description" : "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
            "example" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "Unique identifier for the route stop.",
            "example" : "141414"
          },
          "skippedTime" : {
            "type" : "string",
            "description" : "Skipped time, if it exists, for the route stop in RFC 3339 format.",
            "example" : "2006-01-02T15:04:05+07:00"
          },
          "state" : {
            "type" : "string",
            "description" : "The current state of the route stop.",
            "example" : "scheduled",
            "enum" : [ "unassigned", "scheduled", "en route", "skipped", "arrived", "departed" ]
          }
        },
        "description" : "A single route stop for a route."
      },
      "NumberDataPoint" : {
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/time"
          },
          "value" : {
            "type" : "number",
            "description" : "Numeric value of the data point.",
            "format" : "double",
            "example" : 1992.0506
          }
        },
        "description" : "A single numeric data point of a data input."
      },
      "OrganizationInfo" : {
        "type" : "object",
        "properties" : {
          "carrierSettings" : {
            "$ref" : "#/components/schemas/OrganizationInfo_carrierSettings"
          },
          "id" : {
            "type" : "string",
            "description" : "ID of the organization.",
            "example" : "123"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of organization.",
            "example" : "Charlie's Dining Services"
          }
        },
        "description" : "Information about your organization."
      },
      "OrganizationInfoResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/OrganizationInfo"
          }
        },
        "description" : "Information about an organization."
      },
      "ParentId" : {
        "type" : "string",
        "description" : "The id of the parent asset that the asset belongs to.",
        "example" : "123abcde-4567-8910-1112-fghi1314jklm"
      },
      "ParentTag" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/TaggedObjectId"
          },
          "name" : {
            "$ref" : "#/components/schemas/ParentTagName"
          }
        },
        "description" : "If this tag is part a hierarchical tag tree, this is the parent tag, otherwise this will be omitted."
      },
      "ParentTagId" : {
        "type" : "string",
        "description" : "If this tag is part a hierarchical tag tree, this is the ID of the parent tag, otherwise this will be omitted.",
        "example" : "4815"
      },
      "ParentTagName" : {
        "type" : "string",
        "description" : "The tag name.",
        "example" : "US West Vehicles"
      },
      "PatchTagRequest" : {
        "type" : "object",
        "properties" : {
          "addresses" : {
            "type" : "array",
            "description" : "The addresses that belong to this tag.",
            "items" : {
              "$ref" : "#/components/schemas/TaggedObjectId"
            }
          },
          "assets" : {
            "type" : "array",
            "description" : "The trailers, unpowered, and powered assets that belong to this tag.",
            "items" : {
              "$ref" : "#/components/schemas/TaggedObjectId"
            }
          },
          "drivers" : {
            "type" : "array",
            "description" : "The drivers that belong to this tag.",
            "items" : {
              "$ref" : "#/components/schemas/TaggedObjectId"
            }
          },
          "externalIds" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
            "example" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            }
          },
          "machines" : {
            "type" : "array",
            "description" : "The machines that belong to this tag.",
            "items" : {
              "$ref" : "#/components/schemas/TaggedObjectId"
            }
          },
          "name" : {
            "maxLength" : 191,
            "minLength" : 1,
            "type" : "string",
            "description" : "Name of this tag.",
            "example" : "California"
          },
          "parentTagId" : {
            "type" : "string",
            "description" : "If this tag is part a hierarchical tag tree, this is the ID of the parent tag, otherwise this will be omitted.",
            "example" : "4815"
          },
          "sensors" : {
            "type" : "array",
            "description" : "The sensors that belong to this tag.",
            "items" : {
              "$ref" : "#/components/schemas/TaggedObjectId"
            }
          },
          "vehicles" : {
            "type" : "array",
            "description" : "The vehicles that belong to this tag.",
            "items" : {
              "$ref" : "#/components/schemas/TaggedObjectId"
            }
          }
        }
      },
      "PowerTakeOffDurationMs" : {
        "type" : "number",
        "description" : "Time spent with power take off enabled while idling in milliseconds."
      },
      "ReplaceTagRequest" : {
        "type" : "object",
        "properties" : {
          "addresses" : {
            "type" : "array",
            "description" : "The addresses that belong to this tag.",
            "items" : {
              "$ref" : "#/components/schemas/TaggedObjectId"
            }
          },
          "assets" : {
            "type" : "array",
            "description" : "The trailers, unpowered, and powered assets that belong to this tag.",
            "items" : {
              "$ref" : "#/components/schemas/TaggedObjectId"
            }
          },
          "drivers" : {
            "type" : "array",
            "description" : "The drivers that belong to this tag.",
            "items" : {
              "$ref" : "#/components/schemas/TaggedObjectId"
            }
          },
          "machines" : {
            "type" : "array",
            "description" : "The machines that belong to this tag.",
            "items" : {
              "$ref" : "#/components/schemas/TaggedObjectId"
            }
          },
          "name" : {
            "maxLength" : 191,
            "minLength" : 1,
            "type" : "string",
            "description" : "Name of this tag.",
            "example" : "California"
          },
          "parentTagId" : {
            "type" : "string",
            "description" : "If this tag is part a hierarchical tag tree, this is the ID of the parent tag, otherwise this will be omitted.",
            "example" : "4815"
          },
          "sensors" : {
            "type" : "array",
            "description" : "The sensors that belong to this tag.",
            "items" : {
              "$ref" : "#/components/schemas/TaggedObjectId"
            }
          },
          "vehicles" : {
            "type" : "array",
            "description" : "The vehicles that belong to this tag.",
            "items" : {
              "$ref" : "#/components/schemas/TaggedObjectId"
            }
          }
        }
      },
      "ResolvedBy" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The Id of user who is resolving the defect.",
            "example" : "11"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of user who is resolving the defect. Must be \"mechanic\".",
            "example" : "mechanic",
            "enum" : [ "mechanic" ]
          }
        },
        "description" : "Information about the user who is resolving a defect."
      },
      "RouteFeedResponse" : {
        "type" : "array",
        "description" : "All of the route updates that have occurred since the 'after' cursor response.",
        "items" : {
          "$ref" : "#/components/schemas/RouteFeedResponse_inner"
        }
      },
      "RouteSettingsRequestBody" : {
        "type" : "object",
        "properties" : {
          "routeCompletionCondition" : {
            "type" : "string",
            "description" : "Defaults to 'arriveLastStop' which ends the route upon arriving at the final stop. The condition 'departLastStop' \nends the route upon departing the last stop. If 'arriveLastStop' is set, then the departure time of the final stop should not be set.",
            "example" : "arriveLastStop",
            "enum" : [ "arriveLastStop", "departLastStop" ],
            "default" : "arriveLastStop"
          },
          "routeStartingCondition" : {
            "type" : "string",
            "description" : "Defaults to 'departFirstStop' which starts the route upon departing the first stop in the route.\n The condition 'arriveFirstStop' starts the route upon arriving at the first stop in the route. If 'departFirstStop' is set,\nthe arrival time of the first stop should not be set.",
            "example" : "departFirstStop",
            "enum" : [ "departFirstStop", "arriveFirstStop" ],
            "default" : "departFirstStop"
          }
        },
        "description" : "An optional dictionary, only necessary to override the defaults for route start and end conditions.",
        "example" : {
          "routeCompletionCondition" : "arriveLastStop",
          "routeStartingCondition" : "departFirstStop"
        }
      },
      "RouteSettingsResponseBody" : {
        "type" : "object",
        "properties" : {
          "routeCompletionCondition" : {
            "type" : "string",
            "description" : "Defaults to 'arriveLastStop' which ends the route upon arriving at the final stop. The condition 'departLastStop' \nends the route upon departing the last stop. If 'arriveLastStop' is set, then the departure time of the final stop should not be set.",
            "example" : "arriveLastStop",
            "enum" : [ "arriveLastStop", "departLastStop" ],
            "default" : "arriveLastStop"
          },
          "routeStartingCondition" : {
            "type" : "string",
            "description" : "Defaults to 'departFirstStop' which starts the route upon departing the first stop in the route.\n The condition 'arriveFirstStop' starts the route upon arriving at the first stop in the route. If 'departFirstStop' is set,\nthe arrival time of the first stop should not be set.",
            "example" : "departFirstStop",
            "enum" : [ "departFirstStop", "arriveFirstStop" ],
            "default" : "departFirstStop"
          }
        },
        "description" : "An optional dictionary, only necessary to override the defaults for route start and end conditions.",
        "example" : {
          "routeCompletionCondition" : "arriveLastStop",
          "routeStartingCondition" : "departFirstStop"
        }
      },
      "RoutesCreateRouteBadRequestResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Invalid value for parameter."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "Bad request parameters",
        "example" : {
          "message" : "Invalid value for parameter.",
          "requestId" : "8916e1c1"
        }
      },
      "RoutesCreateRouteInternalErrorResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Failed to execute GraphQL query."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "An internal server error occurred",
        "example" : {
          "message" : "Failed to execute GraphQL query.",
          "requestId" : "8916e1c1"
        }
      },
      "RoutesCreateRouteNotFoundResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Object not found."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "Resource not found",
        "example" : {
          "message" : "Object not found.",
          "requestId" : "8916e1c1"
        }
      },
      "RoutesCreateRouteNotImplementedResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Not implemented."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "Endpoint is not yet implemented",
        "example" : {
          "message" : "Not implemented.",
          "requestId" : "8916e1c1"
        }
      },
      "RoutesCreateRouteRequestBody" : {
        "required" : [ "name", "stops" ],
        "type" : "object",
        "properties" : {
          "driverId" : {
            "type" : "string",
            "description" : "ID of the driver",
            "example" : "1234"
          },
          "externalIds" : {
            "type" : "object",
            "properties" : { },
            "description" : "A map of external ids",
            "example" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Name for the route",
            "example" : "Bid 123"
          },
          "notes" : {
            "maxLength" : 2000,
            "type" : "string",
            "description" : "Notes about the route.",
            "example" : "These are my notes"
          },
          "settings" : {
            "$ref" : "#/components/schemas/RouteSettingsRequestBody"
          },
          "stops" : {
            "minItems" : 2,
            "type" : "array",
            "description" : "List of stops along the route",
            "example" : [ {
              "addressId" : "45934",
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "name" : "Stop #1",
              "notes" : "These are my notes",
              "scheduledArrivalTime" : "2019-06-13T19:08:25Z",
              "scheduledDepartureTime" : "2019-06-13T19:08:25Z",
              "singleUseLocation" : {
                "address" : "1234 Main St, San Jose, CA",
                "latitude" : 123.456,
                "longitude" : 37.459
              }
            }, {
              "addressId" : "45934",
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "name" : "Stop #1",
              "notes" : "These are my notes",
              "scheduledArrivalTime" : "2019-06-13T19:08:25Z",
              "scheduledDepartureTime" : "2019-06-13T19:08:25Z",
              "singleUseLocation" : {
                "address" : "1234 Main St, San Jose, CA",
                "latitude" : 123.456,
                "longitude" : 37.459
              }
            } ],
            "items" : {
              "$ref" : "#/components/schemas/RoutesStopRequestObjectRequestBody"
            }
          },
          "vehicleId" : {
            "type" : "string",
            "description" : "ID of the vehicle",
            "example" : "453546"
          }
        },
        "example" : {
          "driverId" : "1234",
          "externalIds" : {
            "maintenanceId" : "250020",
            "payrollId" : "ABFS18600"
          },
          "name" : "Bid 123",
          "notes" : "These are my notes",
          "settings" : {
            "routeCompletionCondition" : "arriveLastStop",
            "routeStartingCondition" : "departFirstStop"
          },
          "stops" : [ {
            "addressId" : "45934",
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "name" : "Stop #1",
            "notes" : "These are my notes",
            "scheduledArrivalTime" : "2019-06-13T19:08:25Z",
            "scheduledDepartureTime" : "2019-06-13T19:08:25Z",
            "singleUseLocation" : {
              "address" : "1234 Main St, San Jose, CA",
              "latitude" : 123.456,
              "longitude" : 37.459
            }
          }, {
            "addressId" : "45934",
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "name" : "Stop #1",
            "notes" : "These are my notes",
            "scheduledArrivalTime" : "2019-06-13T19:08:25Z",
            "scheduledDepartureTime" : "2019-06-13T19:08:25Z",
            "singleUseLocation" : {
              "address" : "1234 Main St, San Jose, CA",
              "latitude" : 123.456,
              "longitude" : 37.459
            }
          }, {
            "addressId" : "45934",
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "name" : "Stop #1",
            "notes" : "These are my notes",
            "scheduledArrivalTime" : "2019-06-13T19:08:25Z",
            "scheduledDepartureTime" : "2019-06-13T19:08:25Z",
            "singleUseLocation" : {
              "address" : "1234 Main St, San Jose, CA",
              "latitude" : 123.456,
              "longitude" : 37.459
            }
          } ],
          "vehicleId" : "453546"
        }
      },
      "RoutesCreateRouteResponseBody" : {
        "required" : [ "id", "name", "scheduledRouteEndTime", "scheduledRouteStartTime", "stops" ],
        "type" : "object",
        "properties" : {
          "driver" : {
            "$ref" : "#/components/schemas/GoaDriverTinyResponseResponseBody"
          },
          "externalIds" : {
            "type" : "object",
            "properties" : { },
            "description" : "A map of external ids",
            "example" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "ID of the route",
            "example" : "342341"
          },
          "name" : {
            "type" : "string",
            "description" : "Route name",
            "example" : "Bid 123"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes for the route",
            "example" : "These are my notes"
          },
          "scheduledRouteEndTime" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2019-06-13T19:08:25Z"
          },
          "scheduledRouteStartTime" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2019-06-13T19:08:25Z"
          },
          "settings" : {
            "$ref" : "#/components/schemas/RouteSettingsResponseBody"
          },
          "stops" : {
            "minItems" : 2,
            "type" : "array",
            "description" : "List of stops along the route",
            "example" : [ {
              "address" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "494123",
                "name" : "Company Office #1"
              },
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "324231",
              "name" : "Stop #1",
              "notes" : "These are my notes",
              "scheduledArrivalTime" : "2019-06-13T19:08:25Z",
              "scheduledDepartureTime" : "2019-06-13T19:08:25Z",
              "singleUseLocation" : {
                "address" : "1234 Main St, San Jose, CA",
                "latitude" : 123.456,
                "longitude" : 37.459
              }
            }, {
              "address" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "494123",
                "name" : "Company Office #1"
              },
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "324231",
              "name" : "Stop #1",
              "notes" : "These are my notes",
              "scheduledArrivalTime" : "2019-06-13T19:08:25Z",
              "scheduledDepartureTime" : "2019-06-13T19:08:25Z",
              "singleUseLocation" : {
                "address" : "1234 Main St, San Jose, CA",
                "latitude" : 123.456,
                "longitude" : 37.459
              }
            }, {
              "address" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "494123",
                "name" : "Company Office #1"
              },
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "324231",
              "name" : "Stop #1",
              "notes" : "These are my notes",
              "scheduledArrivalTime" : "2019-06-13T19:08:25Z",
              "scheduledDepartureTime" : "2019-06-13T19:08:25Z",
              "singleUseLocation" : {
                "address" : "1234 Main St, San Jose, CA",
                "latitude" : 123.456,
                "longitude" : 37.459
              }
            } ],
            "items" : {
              "$ref" : "#/components/schemas/RoutesStopResponseObjectResponseBody"
            }
          },
          "vehicle" : {
            "$ref" : "#/components/schemas/GoaVehicleTinyResponseResponseBody"
          }
        },
        "example" : {
          "driver" : {
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "id" : "45646",
            "name" : "Driver Bob"
          },
          "externalIds" : {
            "maintenanceId" : "250020",
            "payrollId" : "ABFS18600"
          },
          "id" : "342341",
          "name" : "Bid 123",
          "notes" : "These are my notes",
          "scheduledRouteEndTime" : "2019-06-13T19:08:25Z",
          "scheduledRouteStartTime" : "2019-06-13T19:08:25Z",
          "settings" : {
            "routeCompletionCondition" : "arriveLastStop",
            "routeStartingCondition" : "departFirstStop"
          },
          "stops" : [ {
            "address" : {
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "494123",
              "name" : "Company Office #1"
            },
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "id" : "324231",
            "name" : "Stop #1",
            "notes" : "These are my notes",
            "scheduledArrivalTime" : "2019-06-13T19:08:25Z",
            "scheduledDepartureTime" : "2019-06-13T19:08:25Z",
            "singleUseLocation" : {
              "address" : "1234 Main St, San Jose, CA",
              "latitude" : 123.456,
              "longitude" : 37.459
            }
          }, {
            "address" : {
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "494123",
              "name" : "Company Office #1"
            },
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "id" : "324231",
            "name" : "Stop #1",
            "notes" : "These are my notes",
            "scheduledArrivalTime" : "2019-06-13T19:08:25Z",
            "scheduledDepartureTime" : "2019-06-13T19:08:25Z",
            "singleUseLocation" : {
              "address" : "1234 Main St, San Jose, CA",
              "latitude" : 123.456,
              "longitude" : 37.459
            }
          }, {
            "address" : {
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "494123",
              "name" : "Company Office #1"
            },
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "id" : "324231",
            "name" : "Stop #1",
            "notes" : "These are my notes",
            "scheduledArrivalTime" : "2019-06-13T19:08:25Z",
            "scheduledDepartureTime" : "2019-06-13T19:08:25Z",
            "singleUseLocation" : {
              "address" : "1234 Main St, San Jose, CA",
              "latitude" : 123.456,
              "longitude" : 37.459
            }
          } ],
          "vehicle" : {
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "id" : "494123",
            "name" : "Fleet Truck #1"
          }
        }
      },
      "RoutesPatchRouteBadRequestResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Invalid value for parameter."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "Bad request parameters",
        "example" : {
          "message" : "Invalid value for parameter.",
          "requestId" : "8916e1c1"
        }
      },
      "RoutesPatchRouteInternalErrorResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Failed to execute GraphQL query."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "An internal server error occurred",
        "example" : {
          "message" : "Failed to execute GraphQL query.",
          "requestId" : "8916e1c1"
        }
      },
      "RoutesPatchRouteNotFoundResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Object not found."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "Resource not found",
        "example" : {
          "message" : "Object not found.",
          "requestId" : "8916e1c1"
        }
      },
      "RoutesPatchRouteNotImplementedResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Not implemented."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "Endpoint is not yet implemented",
        "example" : {
          "message" : "Not implemented.",
          "requestId" : "8916e1c1"
        }
      },
      "RoutesPatchRouteRequestBody" : {
        "type" : "object",
        "properties" : {
          "driverId" : {
            "type" : "string",
            "description" : "ID of the driver",
            "example" : "1234"
          },
          "externalIds" : {
            "type" : "object",
            "properties" : { },
            "description" : "A map of external ids",
            "example" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Name for the route",
            "example" : "Bid 123"
          },
          "notes" : {
            "maxLength" : 2000,
            "type" : "string",
            "description" : "Notes about the route.",
            "example" : "These are my notes"
          },
          "settings" : {
            "$ref" : "#/components/schemas/RouteSettingsRequestBody"
          },
          "stops" : {
            "type" : "array",
            "description" : "List of stops along the route",
            "example" : [ {
              "addressId" : "45934",
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "name" : "Stop #1",
              "notes" : "These are my notes",
              "scheduledArrivalTime" : "2019-06-13T19:08:25Z",
              "scheduledDepartureTime" : "2019-06-13T19:08:25Z",
              "singleUseLocation" : {
                "address" : "1234 Main St, San Jose, CA",
                "latitude" : 123.456,
                "longitude" : 37.459
              }
            }, {
              "addressId" : "45934",
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "name" : "Stop #1",
              "notes" : "These are my notes",
              "scheduledArrivalTime" : "2019-06-13T19:08:25Z",
              "scheduledDepartureTime" : "2019-06-13T19:08:25Z",
              "singleUseLocation" : {
                "address" : "1234 Main St, San Jose, CA",
                "latitude" : 123.456,
                "longitude" : 37.459
              }
            } ],
            "items" : {
              "$ref" : "#/components/schemas/RoutesStopRequestObjectRequestBody"
            }
          },
          "vehicleId" : {
            "type" : "string",
            "description" : "ID of the vehicle",
            "example" : "453546"
          }
        },
        "example" : {
          "driverId" : "1234",
          "externalIds" : {
            "maintenanceId" : "250020",
            "payrollId" : "ABFS18600"
          },
          "name" : "Bid 123",
          "notes" : "These are my notes",
          "settings" : {
            "routeCompletionCondition" : "arriveLastStop",
            "routeStartingCondition" : "departFirstStop"
          },
          "stops" : [ {
            "addressId" : "45934",
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "name" : "Stop #1",
            "notes" : "These are my notes",
            "scheduledArrivalTime" : "2019-06-13T19:08:25Z",
            "scheduledDepartureTime" : "2019-06-13T19:08:25Z",
            "singleUseLocation" : {
              "address" : "1234 Main St, San Jose, CA",
              "latitude" : 123.456,
              "longitude" : 37.459
            }
          }, {
            "addressId" : "45934",
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "name" : "Stop #1",
            "notes" : "These are my notes",
            "scheduledArrivalTime" : "2019-06-13T19:08:25Z",
            "scheduledDepartureTime" : "2019-06-13T19:08:25Z",
            "singleUseLocation" : {
              "address" : "1234 Main St, San Jose, CA",
              "latitude" : 123.456,
              "longitude" : 37.459
            }
          } ],
          "vehicleId" : "453546"
        }
      },
      "RoutesPatchRouteResponseBody" : {
        "required" : [ "id", "name", "scheduledRouteEndTime", "scheduledRouteStartTime", "stops" ],
        "type" : "object",
        "properties" : {
          "driver" : {
            "$ref" : "#/components/schemas/GoaDriverTinyResponseResponseBody"
          },
          "externalIds" : {
            "type" : "object",
            "properties" : { },
            "description" : "A map of external ids",
            "example" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "ID of the route",
            "example" : "342341"
          },
          "name" : {
            "type" : "string",
            "description" : "Route name",
            "example" : "Bid 123"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes for the route",
            "example" : "These are my notes"
          },
          "scheduledRouteEndTime" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2019-06-13T19:08:25Z"
          },
          "scheduledRouteStartTime" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2019-06-13T19:08:25Z"
          },
          "settings" : {
            "$ref" : "#/components/schemas/RouteSettingsResponseBody"
          },
          "stops" : {
            "minItems" : 2,
            "type" : "array",
            "description" : "List of stops along the route",
            "example" : [ {
              "address" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "494123",
                "name" : "Company Office #1"
              },
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "324231",
              "name" : "Stop #1",
              "notes" : "These are my notes",
              "scheduledArrivalTime" : "2019-06-13T19:08:25Z",
              "scheduledDepartureTime" : "2019-06-13T19:08:25Z",
              "singleUseLocation" : {
                "address" : "1234 Main St, San Jose, CA",
                "latitude" : 123.456,
                "longitude" : 37.459
              }
            }, {
              "address" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "494123",
                "name" : "Company Office #1"
              },
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "324231",
              "name" : "Stop #1",
              "notes" : "These are my notes",
              "scheduledArrivalTime" : "2019-06-13T19:08:25Z",
              "scheduledDepartureTime" : "2019-06-13T19:08:25Z",
              "singleUseLocation" : {
                "address" : "1234 Main St, San Jose, CA",
                "latitude" : 123.456,
                "longitude" : 37.459
              }
            } ],
            "items" : {
              "$ref" : "#/components/schemas/RoutesStopResponseObjectResponseBody"
            }
          },
          "vehicle" : {
            "$ref" : "#/components/schemas/GoaVehicleTinyResponseResponseBody"
          }
        },
        "example" : {
          "driver" : {
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "id" : "45646",
            "name" : "Driver Bob"
          },
          "externalIds" : {
            "maintenanceId" : "250020",
            "payrollId" : "ABFS18600"
          },
          "id" : "342341",
          "name" : "Bid 123",
          "notes" : "These are my notes",
          "scheduledRouteEndTime" : "2019-06-13T19:08:25Z",
          "scheduledRouteStartTime" : "2019-06-13T19:08:25Z",
          "settings" : {
            "routeCompletionCondition" : "arriveLastStop",
            "routeStartingCondition" : "departFirstStop"
          },
          "stops" : [ {
            "address" : {
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "494123",
              "name" : "Company Office #1"
            },
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "id" : "324231",
            "name" : "Stop #1",
            "notes" : "These are my notes",
            "scheduledArrivalTime" : "2019-06-13T19:08:25Z",
            "scheduledDepartureTime" : "2019-06-13T19:08:25Z",
            "singleUseLocation" : {
              "address" : "1234 Main St, San Jose, CA",
              "latitude" : 123.456,
              "longitude" : 37.459
            }
          }, {
            "address" : {
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "494123",
              "name" : "Company Office #1"
            },
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "id" : "324231",
            "name" : "Stop #1",
            "notes" : "These are my notes",
            "scheduledArrivalTime" : "2019-06-13T19:08:25Z",
            "scheduledDepartureTime" : "2019-06-13T19:08:25Z",
            "singleUseLocation" : {
              "address" : "1234 Main St, San Jose, CA",
              "latitude" : 123.456,
              "longitude" : 37.459
            }
          } ],
          "vehicle" : {
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "id" : "494123",
            "name" : "Fleet Truck #1"
          }
        }
      },
      "RoutesSingleUseAddressObjectRequestBody" : {
        "required" : [ "latitude", "longitude" ],
        "type" : "object",
        "properties" : {
          "address" : {
            "type" : "string",
            "description" : "Address of the stop.",
            "example" : "1234 Main St, San Jose, CA"
          },
          "latitude" : {
            "type" : "number",
            "description" : "The latitude of the location",
            "format" : "double",
            "example" : 123.456
          },
          "longitude" : {
            "type" : "number",
            "description" : "The longitude of the location",
            "format" : "double",
            "example" : 37.459
          }
        },
        "description" : "This field is used to indicate stops along the route for which an address has not been persisted. This field is mutually exclusive with addressId.",
        "example" : {
          "address" : "1234 Main St, San Jose, CA",
          "latitude" : 123.456,
          "longitude" : 37.459
        }
      },
      "RoutesSingleUseAddressObjectResponseBody" : {
        "required" : [ "latitude", "longitude" ],
        "type" : "object",
        "properties" : {
          "address" : {
            "type" : "string",
            "description" : "Address of the stop.",
            "example" : "1234 Main St, San Jose, CA"
          },
          "latitude" : {
            "type" : "number",
            "description" : "The latitude of the location",
            "format" : "double",
            "example" : 123.456
          },
          "longitude" : {
            "type" : "number",
            "description" : "The longitude of the location",
            "format" : "double",
            "example" : 37.459
          }
        },
        "description" : "This field is used to indicate stops along the route for which an address has not been persisted. This field is mutually exclusive with addressId.",
        "example" : {
          "address" : "1234 Main St, San Jose, CA",
          "latitude" : 123.456,
          "longitude" : 37.459
        }
      },
      "RoutesStopRequestObjectRequestBody" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "addressId" : {
            "type" : "string",
            "description" : "ID of the address. An address [externalId](https://developers.samsara.com/docs/external-ids#using-external-ids) can also be used interchangeably here.",
            "example" : "45934"
          },
          "externalIds" : {
            "type" : "object",
            "properties" : { },
            "description" : "A map of external ids",
            "example" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the stop",
            "example" : "Stop #1"
          },
          "notes" : {
            "maxLength" : 2000,
            "type" : "string",
            "description" : "Notes for the stop",
            "example" : "These are my notes"
          },
          "scheduledArrivalTime" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2019-06-13T19:08:25Z"
          },
          "scheduledDepartureTime" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2019-06-13T19:08:25Z"
          },
          "singleUseLocation" : {
            "$ref" : "#/components/schemas/RoutesSingleUseAddressObjectRequestBody"
          }
        },
        "example" : {
          "addressId" : "45934",
          "externalIds" : {
            "maintenanceId" : "250020",
            "payrollId" : "ABFS18600"
          },
          "name" : "Stop #1",
          "notes" : "These are my notes",
          "scheduledArrivalTime" : "2019-06-13T19:08:25Z",
          "scheduledDepartureTime" : "2019-06-13T19:08:25Z",
          "singleUseLocation" : {
            "address" : "1234 Main St, San Jose, CA",
            "latitude" : 123.456,
            "longitude" : 37.459
          }
        }
      },
      "RoutesStopResponseObjectResponseBody" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "address" : {
            "$ref" : "#/components/schemas/GoaAddressTinyResponseResponseBody"
          },
          "externalIds" : {
            "type" : "object",
            "properties" : { },
            "description" : "A map of external ids",
            "example" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the stop",
            "example" : "324231"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the stop",
            "example" : "Stop #1"
          },
          "notes" : {
            "maxLength" : 2000,
            "type" : "string",
            "description" : "Notes for the stop",
            "example" : "These are my notes"
          },
          "scheduledArrivalTime" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2019-06-13T19:08:25Z"
          },
          "scheduledDepartureTime" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2019-06-13T19:08:25Z"
          },
          "singleUseLocation" : {
            "$ref" : "#/components/schemas/RoutesSingleUseAddressObjectResponseBody"
          }
        },
        "example" : {
          "address" : {
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "id" : "494123",
            "name" : "Company Office #1"
          },
          "externalIds" : {
            "maintenanceId" : "250020",
            "payrollId" : "ABFS18600"
          },
          "id" : "324231",
          "name" : "Stop #1",
          "notes" : "These are my notes",
          "scheduledArrivalTime" : "2019-06-13T19:08:25Z",
          "scheduledDepartureTime" : "2019-06-13T19:08:25Z",
          "singleUseLocation" : {
            "address" : "1234 Main St, San Jose, CA",
            "latitude" : 123.456,
            "longitude" : 37.459
          }
        }
      },
      "SafetyEvent" : {
        "type" : "object",
        "properties" : {
          "behaviorLabels" : {
            "$ref" : "#/components/schemas/SafetyEventBehaviorLabels"
          },
          "coachingState" : {
            "$ref" : "#/components/schemas/SafetyEventCoachingState"
          },
          "downloadForwardVideoUrl" : {
            "$ref" : "#/components/schemas/SafetyEventDownloadForwardVideoUrl"
          },
          "downloadInwardVideoUrl" : {
            "$ref" : "#/components/schemas/SafetyEventDownloadInwardVideoUrl"
          },
          "downloadTrackedInwardVideoUrl" : {
            "$ref" : "#/components/schemas/SafetyEventDownloadTrackedInwardVideoUrl"
          },
          "driver" : {
            "$ref" : "#/components/schemas/SafetyEventDriver"
          },
          "id" : {
            "$ref" : "#/components/schemas/SafetyEventId"
          },
          "location" : {
            "$ref" : "#/components/schemas/SafetyEventLocation"
          },
          "maxAccelerationGForce" : {
            "$ref" : "#/components/schemas/SafetyEventMaxAccelerationGForce"
          },
          "time" : {
            "$ref" : "#/components/schemas/SafetyEventTime"
          },
          "vehicle" : {
            "$ref" : "#/components/schemas/SafetyEventVehicle"
          }
        },
        "description" : "A safety event."
      },
      "SafetyEventBehaviorLabel" : {
        "required" : [ "label", "source" ],
        "type" : "object",
        "properties" : {
          "label" : {
            "$ref" : "#/components/schemas/SafetyEventBehaviorLabelType"
          },
          "source" : {
            "$ref" : "#/components/schemas/SafetyEventBehaviorLabelSource"
          }
        },
        "description" : "The label and source of the label associated with the safety event."
      },
      "SafetyEventBehaviorLabelSource" : {
        "type" : "string",
        "description" : "The source of the label associated with the safety event.",
        "enum" : [ "automated", "userGenerated" ]
      },
      "SafetyEventBehaviorLabelType" : {
        "type" : "string",
        "description" : "The label associated with the safety event. This list often changes, so it is recommended that clients gracefully handle any types not enumerated in this list.",
        "enum" : [ "genericTailgating", "genericDistraction", "defensiveDriving", "rollingStop", "nearCollison", "speeding", "obstructedCamera", "didNotYield", "noSeatbelt", "mobileUsage", "drowsy", "laneDeparture", "followingDistanceSevere", "followingDistanceModerate", "lateResponse", "acceleration", "braking", "harshTurn", "crash", "rolloverProtection", "yawControl", "ranRedLight", "forwardCollisionWarning", "eatingDrinking", "smoking", "followingDistance", "edgeDistractedDriving" ]
      },
      "SafetyEventBehaviorLabels" : {
        "type" : "array",
        "description" : "The most up-to-date behavior labels associated with the safety event. These labels can be updated by the Safety Report Admin.",
        "items" : {
          "$ref" : "#/components/schemas/SafetyEventBehaviorLabel"
        }
      },
      "SafetyEventCoachingState" : {
        "type" : "string",
        "description" : "The current coaching status of the event.",
        "enum" : [ "needsReview", "coached", "dismissed", "reviewed", "archived", "manualReview", "needsCoaching", "autoDismissed", "needsRecognition", "recognized", "invalid" ]
      },
      "SafetyEventDownloadForwardVideoUrl" : {
        "type" : "string",
        "description" : "URL to download the forward video.",
        "example" : "https://s3.console.aws.amazon.com/s3/buckets/samsara-dashcam-videos/21575/212014918400828/1553060687222/huKA7IhpBV-camera-video-segment-1244214895.mp4"
      },
      "SafetyEventDownloadInwardVideoUrl" : {
        "type" : "string",
        "description" : "URL to download the inward video.",
        "example" : "https://s3.console.aws.amazon.com/s3/buckets/samsara-dashcam-videos/21575/212014918400828/1553060687222/huKA7IhpBV-camera-video-segment-1244214895.mp4"
      },
      "SafetyEventDownloadTrackedInwardVideoUrl" : {
        "type" : "string",
        "description" : "URL to download the tracked inward video.",
        "example" : "https://s3.console.aws.amazon.com/s3/buckets/samsara-dashcam-videos/21575/212014918400828/1553060687222/huKA7IhpBV-camera-video-segment-1244214895.mp4"
      },
      "SafetyEventDriver" : {
        "$ref" : "#/components/schemas/driverTinyResponse"
      },
      "SafetyEventId" : {
        "type" : "string",
        "description" : "The unique Samsara ID of the safety event.",
        "example" : "212014918174029-1550954461759"
      },
      "SafetyEventLocation" : {
        "$ref" : "#/components/schemas/location"
      },
      "SafetyEventMaxAccelerationGForce" : {
        "type" : "number",
        "description" : "The maximum acceleration value as a multiplier on the force of gravity (g).",
        "example" : 0.123
      },
      "SafetyEventTime" : {
        "type" : "string",
        "description" : "The time the safety event occurred in RFC 3339 milliseconds format.",
        "example" : "2019-06-13T19:08:25.455Z"
      },
      "SafetyEventVehicle" : {
        "$ref" : "#/components/schemas/vehicleTinyResponse"
      },
      "SafetyEventsListResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SafetyEvent"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/paginationResponse"
          }
        },
        "description" : "List of safety events."
      },
      "Serial" : {
        "type" : "string",
        "description" : "The serial number of the gateway installed in the vehicle.",
        "example" : "VG12345"
      },
      "StringDataPoint" : {
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/time"
          },
          "value" : {
            "type" : "string",
            "description" : "String value of the data point.",
            "format" : "string",
            "example" : "On"
          }
        },
        "description" : "A single string data point of a data input."
      },
      "TachographActivity" : {
        "type" : "object",
        "properties" : {
          "endTime" : {
            "type" : "string",
            "description" : "End time of state in RFC 3339 format.",
            "example" : "2020-01-03T16:04:05Z07:00"
          },
          "isManualEntry" : {
            "type" : "boolean",
            "description" : "A flag indicating whether the activity was manually entered by the driver. If this is `true`, the state cannot be \"UNKNOWN\"",
            "example" : false
          },
          "startTime" : {
            "type" : "string",
            "description" : "Start time of state in RFC 3339 format.",
            "example" : "2020-01-02T15:04:05Z07:00"
          },
          "state" : {
            "type" : "string",
            "description" : "Tachograph activity state",
            "enum" : [ "BREAK/REST", "WORK", "AVAILABILITY", "DRIVING", "UNKNOWN" ]
          }
        },
        "description" : "Tachograph activity"
      },
      "TachographActivityList" : {
        "type" : "array",
        "description" : "List of all driver tachograph activities in a specified time range.",
        "items" : {
          "$ref" : "#/components/schemas/TachographActivity"
        }
      },
      "TachographActivityListWrapper" : {
        "type" : "object",
        "properties" : {
          "activity" : {
            "$ref" : "#/components/schemas/TachographActivityList"
          },
          "driver" : {
            "$ref" : "#/components/schemas/driverTinyResponse"
          }
        }
      },
      "TachographDriverFile" : {
        "type" : "object",
        "properties" : {
          "cardNumber" : {
            "type" : "string",
            "description" : "Tachograph card number associated with the file.",
            "example" : "1000000492436002"
          },
          "createdAtTime" : {
            "type" : "string",
            "description" : "Creation time of files in RFC 3339 format. This is either the download time from the tachograph itself (for files downloaded via Samsara VG) or upload time (for files manually uploaded via Samsara UI).",
            "example" : "2020-01-02T15:04:05Z07:00"
          },
          "id" : {
            "type" : "string",
            "description" : "ID of the file.",
            "example" : "4aff772c-a7bb-45e6-8e41-6a53e34feb83"
          },
          "url" : {
            "type" : "string",
            "description" : "A temporary URL which can be used to download the file. The link can be used multiple times and expires after an hour.",
            "example" : "https://samsara-tachograph-files.s3.us-west-2.amazonaws.com/123/456/789/4aff772c-a7bb-45e6-8e41-6a53e34feb83.ddd"
          }
        },
        "description" : "Tachograph driver file"
      },
      "TachographDriverFileData" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/TachographDriverFileListWrapper"
        }
      },
      "TachographDriverFileList" : {
        "type" : "array",
        "description" : "List of all tachograph driver files in a specified time range.",
        "items" : {
          "$ref" : "#/components/schemas/TachographDriverFile"
        }
      },
      "TachographDriverFileListWrapper" : {
        "type" : "object",
        "properties" : {
          "driver" : {
            "$ref" : "#/components/schemas/driverTinyResponse"
          },
          "files" : {
            "$ref" : "#/components/schemas/TachographDriverFileList"
          }
        }
      },
      "TachographDriverFilesResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/TachographDriverFileData"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/paginationResponse"
          }
        },
        "description" : "List of all driver tachograph files in a specified time range."
      },
      "TachographVehicleFile" : {
        "type" : "object",
        "properties" : {
          "createdAtTime" : {
            "type" : "string",
            "description" : "Creation time of files in RFC 3339 format. This is either the download time from the tachograph itself (for files downloaded via Samsara VG) or upload time (for files manually uploaded via Samsara UI).",
            "example" : "2020-01-02T15:04:05Z07:00"
          },
          "id" : {
            "type" : "string",
            "description" : "ID of the file.",
            "example" : "4aff772c-a7bb-45e6-8e41-6a53e34feb83"
          },
          "url" : {
            "type" : "string",
            "description" : "A temporary URL which can be used to download the file. The link can be used multiple times and expires after an hour.",
            "example" : "https://samsara-tachograph-files.s3.us-west-2.amazonaws.com/123/456/789/4aff772c-a7bb-45e6-8e41-6a53e34feb83.ddd"
          },
          "vehicleIdentificationNumber" : {
            "type" : "string",
            "description" : "VIN associated with the vehicle file.",
            "example" : "1000000492436002"
          }
        },
        "description" : "Tachograph vehicle file"
      },
      "TachographVehicleFileData" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/TachographVehicleFileListWrapper"
        }
      },
      "TachographVehicleFileList" : {
        "type" : "array",
        "description" : "List of all tachograph vehicle files in a specified time range.",
        "items" : {
          "$ref" : "#/components/schemas/TachographVehicleFile"
        }
      },
      "TachographVehicleFileListWrapper" : {
        "type" : "object",
        "properties" : {
          "files" : {
            "$ref" : "#/components/schemas/TachographVehicleFileList"
          },
          "vehicle" : {
            "$ref" : "#/components/schemas/vehicleTinyResponse"
          }
        }
      },
      "TachographVehicleFilesResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/TachographVehicleFileData"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/paginationResponse"
          }
        },
        "description" : "List of all vehicle tachograph files in a specified time range."
      },
      "Tag" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TinyTag"
        }, {
          "type" : "object",
          "properties" : {
            "addresses" : {
              "type" : "array",
              "description" : "The addresses that belong to this tag.",
              "items" : {
                "$ref" : "#/components/schemas/TaggedObject"
              }
            },
            "assets" : {
              "type" : "array",
              "description" : "The trailers, unpowered, and powered assets that belong to this tag.",
              "items" : {
                "$ref" : "#/components/schemas/TaggedObject"
              }
            },
            "drivers" : {
              "type" : "array",
              "description" : "The drivers that belong to this tag.",
              "items" : {
                "$ref" : "#/components/schemas/TaggedObject"
              }
            },
            "externalIds" : {
              "type" : "object",
              "properties" : { },
              "description" : "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
              "example" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              }
            },
            "machines" : {
              "type" : "array",
              "description" : "The machines that belong to thistag.",
              "items" : {
                "$ref" : "#/components/schemas/TaggedObject"
              }
            },
            "parentTag" : {
              "$ref" : "#/components/schemas/ParentTag"
            },
            "sensors" : {
              "type" : "array",
              "description" : "The sensors that belong to this tag.",
              "items" : {
                "$ref" : "#/components/schemas/TaggedObject"
              }
            },
            "vehicles" : {
              "type" : "array",
              "description" : "The vehicles that belong to this tag.",
              "items" : {
                "$ref" : "#/components/schemas/TaggedObject"
              }
            }
          }
        } ]
      },
      "TagId" : {
        "type" : "string",
        "description" : "Unique Samsara ID of this tag.",
        "example" : "342417"
      },
      "TagIds" : {
        "type" : "array",
        "description" : "The ids of the tags that the asset should belong to.",
        "items" : {
          "type" : "string",
          "example" : "123"
        }
      },
      "TagName" : {
        "maxLength" : 191,
        "minLength" : 1,
        "type" : "string",
        "description" : "Name of this tag.",
        "example" : "California"
      },
      "TagResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tag"
          }
        },
        "description" : "A single tag."
      },
      "TaggedObject" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/TaggedObjectId"
          },
          "name" : {
            "$ref" : "#/components/schemas/TaggedObjectName"
          }
        }
      },
      "TaggedObjectId" : {
        "type" : "string",
        "description" : "The object ID.",
        "example" : "23502866574"
      },
      "TaggedObjectName" : {
        "type" : "string",
        "description" : "The object name.",
        "example" : "Driver Don"
      },
      "TinyTag" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/TagId"
          },
          "name" : {
            "$ref" : "#/components/schemas/TagName"
          },
          "parentTagId" : {
            "$ref" : "#/components/schemas/ParentTagId"
          }
        }
      },
      "TrailerResponseObjectResponseBody" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "enabledForMobile" : {
            "type" : "boolean",
            "description" : "Indicates if the trailer is visible on the Samsara mobile apps.",
            "example" : true
          },
          "externalIds" : {
            "type" : "object",
            "properties" : { },
            "description" : "A map of external ids",
            "example" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "The unique Samsara ID of the Trailer. This is automatically generated when the Trailer object is created. It cannot be changed.",
            "example" : "494123"
          },
          "installedGateway" : {
            "$ref" : "#/components/schemas/GoaGatewayTinyResponseResponseBody"
          },
          "licensePlate" : {
            "maxLength" : 12,
            "type" : "string",
            "description" : "The license plate of the Trailer. **By default**: empty. Can be set or updated through the Samsara Dashboard or the API at any time.",
            "example" : "7TYP290"
          },
          "name" : {
            "type" : "string",
            "description" : "The human-readable name of the Trailer. This is set by a fleet administrator and will appear in both Samsara’s cloud dashboard as well as the Samsara Driver mobile app. By default, this name is the serial number of the Samsara Asset Gateway. It can be set or updated through the Samsara Dashboard or through the API at any time.",
            "example" : "Trailer-123"
          },
          "notes" : {
            "maxLength" : 255,
            "type" : "string",
            "description" : "These are generic notes about the Trailer. Empty by default. Can be set or updated through the Samsara Dashboard or the API at any time.",
            "example" : "These are my trailer notes",
            "default" : ""
          },
          "tags" : {
            "type" : "array",
            "description" : "The list of [tags](https://kb.samsara.com/hc/en-us/articles/360026674631-Using-Tags-and-Tag-Nesting) associated with the Vehicle. **By default**: empty. Can be set or updated through the Samsara Dashboard or the API at any time.",
            "example" : [ {
              "id" : "3914",
              "name" : "East Coast",
              "parentTagId" : "4815"
            }, {
              "id" : "3914",
              "name" : "East Coast",
              "parentTagId" : "4815"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/GoaTagTinyResponseResponseBody"
            }
          },
          "trailerSerialNumber" : {
            "type" : "string",
            "description" : "The serial number of the trailer.",
            "example" : "8V8WD530FLN016251"
          }
        },
        "description" : "TrailerResponseObjectResponseBody result type (default view)",
        "example" : {
          "enabledForMobile" : true,
          "externalIds" : {
            "maintenanceId" : "250020",
            "payrollId" : "ABFS18600"
          },
          "id" : "494123",
          "installedGateway" : {
            "model" : "VG34",
            "serial" : "GFRV-43N-VGX"
          },
          "licensePlate" : "7TYP290",
          "name" : "Trailer-123",
          "notes" : "These are my trailer notes",
          "tags" : [ {
            "id" : "3914",
            "name" : "East Coast",
            "parentTagId" : "4815"
          }, {
            "id" : "3914",
            "name" : "East Coast",
            "parentTagId" : "4815"
          }, {
            "id" : "3914",
            "name" : "East Coast",
            "parentTagId" : "4815"
          } ],
          "trailerSerialNumber" : "8V8WD530FLN016251"
        }
      },
      "TrailerResponseObjectResponseBodyCollection" : {
        "type" : "array",
        "description" : "TrailerResponseObjectCollectionResponseBody is the result type for an array of TrailerResponseObjectResponseBody (default view)",
        "example" : [ {
          "enabledForMobile" : true,
          "externalIds" : {
            "maintenanceId" : "250020",
            "payrollId" : "ABFS18600"
          },
          "id" : "494123",
          "installedGateway" : {
            "model" : "VG34",
            "serial" : "GFRV-43N-VGX"
          },
          "licensePlate" : "7TYP290",
          "name" : "Trailer-123",
          "notes" : "These are my trailer notes",
          "tags" : [ {
            "id" : "3914",
            "name" : "East Coast",
            "parentTagId" : "4815"
          }, {
            "id" : "3914",
            "name" : "East Coast",
            "parentTagId" : "4815"
          }, {
            "id" : "3914",
            "name" : "East Coast",
            "parentTagId" : "4815"
          }, {
            "id" : "3914",
            "name" : "East Coast",
            "parentTagId" : "4815"
          } ],
          "trailerSerialNumber" : "8V8WD530FLN016251"
        }, {
          "enabledForMobile" : true,
          "externalIds" : {
            "maintenanceId" : "250020",
            "payrollId" : "ABFS18600"
          },
          "id" : "494123",
          "installedGateway" : {
            "model" : "VG34",
            "serial" : "GFRV-43N-VGX"
          },
          "licensePlate" : "7TYP290",
          "name" : "Trailer-123",
          "notes" : "These are my trailer notes",
          "tags" : [ {
            "id" : "3914",
            "name" : "East Coast",
            "parentTagId" : "4815"
          }, {
            "id" : "3914",
            "name" : "East Coast",
            "parentTagId" : "4815"
          }, {
            "id" : "3914",
            "name" : "East Coast",
            "parentTagId" : "4815"
          }, {
            "id" : "3914",
            "name" : "East Coast",
            "parentTagId" : "4815"
          } ],
          "trailerSerialNumber" : "8V8WD530FLN016251"
        }, {
          "enabledForMobile" : true,
          "externalIds" : {
            "maintenanceId" : "250020",
            "payrollId" : "ABFS18600"
          },
          "id" : "494123",
          "installedGateway" : {
            "model" : "VG34",
            "serial" : "GFRV-43N-VGX"
          },
          "licensePlate" : "7TYP290",
          "name" : "Trailer-123",
          "notes" : "These are my trailer notes",
          "tags" : [ {
            "id" : "3914",
            "name" : "East Coast",
            "parentTagId" : "4815"
          }, {
            "id" : "3914",
            "name" : "East Coast",
            "parentTagId" : "4815"
          }, {
            "id" : "3914",
            "name" : "East Coast",
            "parentTagId" : "4815"
          }, {
            "id" : "3914",
            "name" : "East Coast",
            "parentTagId" : "4815"
          } ],
          "trailerSerialNumber" : "8V8WD530FLN016251"
        }, {
          "enabledForMobile" : true,
          "externalIds" : {
            "maintenanceId" : "250020",
            "payrollId" : "ABFS18600"
          },
          "id" : "494123",
          "installedGateway" : {
            "model" : "VG34",
            "serial" : "GFRV-43N-VGX"
          },
          "licensePlate" : "7TYP290",
          "name" : "Trailer-123",
          "notes" : "These are my trailer notes",
          "tags" : [ {
            "id" : "3914",
            "name" : "East Coast",
            "parentTagId" : "4815"
          }, {
            "id" : "3914",
            "name" : "East Coast",
            "parentTagId" : "4815"
          }, {
            "id" : "3914",
            "name" : "East Coast",
            "parentTagId" : "4815"
          }, {
            "id" : "3914",
            "name" : "East Coast",
            "parentTagId" : "4815"
          } ],
          "trailerSerialNumber" : "8V8WD530FLN016251"
        } ],
        "items" : {
          "$ref" : "#/components/schemas/TrailerResponseObjectResponseBody"
        }
      },
      "TrailersListTrailersBadRequestResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Invalid value for parameter."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "Bad request parameters",
        "example" : {
          "message" : "Invalid value for parameter.",
          "requestId" : "8916e1c1"
        }
      },
      "TrailersListTrailersInternalErrorResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Failed to execute GraphQL query."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "An internal server error occurred",
        "example" : {
          "message" : "Failed to execute GraphQL query.",
          "requestId" : "8916e1c1"
        }
      },
      "TrailersListTrailersNotFoundResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Object not found."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "Resource not found",
        "example" : {
          "message" : "Object not found.",
          "requestId" : "8916e1c1"
        }
      },
      "TrailersListTrailersNotImplementedResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Not implemented."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "Endpoint is not yet implemented",
        "example" : {
          "message" : "Not implemented.",
          "requestId" : "8916e1c1"
        }
      },
      "TrailersListTrailersResponseBody" : {
        "required" : [ "data", "pagination" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/TrailerResponseObjectResponseBodyCollection"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/GoaPaginationResponseResponseBody"
          }
        },
        "example" : {
          "data" : [ {
            "enabledForMobile" : true,
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "id" : "494123",
            "installedGateway" : {
              "model" : "VG34",
              "serial" : "GFRV-43N-VGX"
            },
            "licensePlate" : "7TYP290",
            "name" : "Trailer-123",
            "notes" : "These are my trailer notes",
            "tags" : [ {
              "id" : "3914",
              "name" : "East Coast",
              "parentTagId" : "4815"
            }, {
              "id" : "3914",
              "name" : "East Coast",
              "parentTagId" : "4815"
            }, {
              "id" : "3914",
              "name" : "East Coast",
              "parentTagId" : "4815"
            }, {
              "id" : "3914",
              "name" : "East Coast",
              "parentTagId" : "4815"
            } ],
            "trailerSerialNumber" : "8V8WD530FLN016251"
          }, {
            "enabledForMobile" : true,
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "id" : "494123",
            "installedGateway" : {
              "model" : "VG34",
              "serial" : "GFRV-43N-VGX"
            },
            "licensePlate" : "7TYP290",
            "name" : "Trailer-123",
            "notes" : "These are my trailer notes",
            "tags" : [ {
              "id" : "3914",
              "name" : "East Coast",
              "parentTagId" : "4815"
            }, {
              "id" : "3914",
              "name" : "East Coast",
              "parentTagId" : "4815"
            }, {
              "id" : "3914",
              "name" : "East Coast",
              "parentTagId" : "4815"
            }, {
              "id" : "3914",
              "name" : "East Coast",
              "parentTagId" : "4815"
            } ],
            "trailerSerialNumber" : "8V8WD530FLN016251"
          } ],
          "pagination" : {
            "endCursor" : "MjkY",
            "hasNextPage" : true
          }
        }
      },
      "UpdateAddressRequest" : {
        "type" : "object",
        "properties" : {
          "addressTypes" : {
            "type" : "array",
            "description" : "Reporting location type associated with the address (used for ELD reporting purposes).",
            "items" : {
              "type" : "string",
              "example" : "yard",
              "enum" : [ "yard", "shortHaul", "workforceSite" ]
            }
          },
          "contactIds" : {
            "type" : "array",
            "description" : "An array of Contact IDs associated with this Address.",
            "items" : {
              "type" : "string",
              "example" : "22408"
            }
          },
          "externalIds" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
            "example" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            }
          },
          "formattedAddress" : {
            "maxLength" : 1024,
            "type" : "string",
            "description" : "The full street address for this address/geofence, as it might be recognized by Google Maps.",
            "example" : "350 Rhode Island St, San Francisco, CA"
          },
          "geofence" : {
            "$ref" : "#/components/schemas/CreateAddressRequest_geofence"
          },
          "latitude" : {
            "type" : "number",
            "description" : "Latitude of the address. Will be geocoded from `formattedAddress` if not provided.",
            "format" : "double",
            "example" : 37.765363
          },
          "longitude" : {
            "type" : "number",
            "description" : "Longitude of the address. Will be geocoded from `formattedAddress` if not provided.",
            "format" : "double",
            "example" : -122.4029238
          },
          "name" : {
            "maxLength" : 255,
            "type" : "string",
            "description" : "Name of the address.",
            "example" : "Samsara HQ"
          },
          "notes" : {
            "maxLength" : 280,
            "type" : "string",
            "description" : "Notes about the address.",
            "example" : "Hours of operation: 8am - 6pm; Truck entrance on the Rhode Island street side."
          },
          "tagIds" : {
            "type" : "array",
            "description" : "An array of IDs of tags to associate with this address.",
            "items" : {
              "type" : "string",
              "example" : "3914"
            }
          }
        },
        "description" : "A request body to update an Address."
      },
      "UpdateAttributeRequest" : {
        "required" : [ "entityType" ],
        "type" : "object",
        "properties" : {
          "attributeType" : {
            "type" : "string",
            "description" : "Denotes the data type of the attribute's values.",
            "example" : "string",
            "enum" : [ "string", "number" ],
            "default" : "string"
          },
          "attributeValueQuantity" : {
            "type" : "string",
            "description" : "Defines whether or not this attribute can be used on the same entity many times (with different values).",
            "example" : "multi",
            "enum" : [ "single", "multi" ],
            "default" : "multi"
          },
          "entities" : {
            "type" : "array",
            "description" : "Entities that will be applied to this attribute",
            "items" : {
              "$ref" : "#/components/schemas/CreateAttributeRequest_entities"
            }
          },
          "entityType" : {
            "type" : "string",
            "description" : "Denotes the type of entity, driver or vehicle.",
            "example" : "vehicle",
            "enum" : [ "driver", "vehicle" ]
          },
          "name" : {
            "type" : "string",
            "description" : "Name",
            "example" : "License Certifications"
          },
          "numberValues" : {
            "type" : "array",
            "description" : "Number values that can be associated with this attribute",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "stringValues" : {
            "type" : "array",
            "description" : "String values that can be associated with this attribute",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "A request body to update an Attribute."
      },
      "UpdateContactRequest" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "maxLength" : 255,
            "type" : "string",
            "description" : "Email address of the contact.",
            "example" : "jane.jones@yahoo.com"
          },
          "firstName" : {
            "maxLength" : 255,
            "type" : "string",
            "description" : "First name of the contact.",
            "example" : "Jane"
          },
          "lastName" : {
            "maxLength" : 255,
            "type" : "string",
            "description" : "Last name of the contact.",
            "example" : "Jones"
          },
          "phone" : {
            "maxLength" : 255,
            "type" : "string",
            "description" : "Phone number of the contact.",
            "example" : "111-222-3344"
          }
        },
        "description" : "Information for adding a notification contact for alerts."
      },
      "UpdateDriverRequest" : {
        "type" : "object",
        "properties" : {
          "attributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateDriverRequest_attributes"
            }
          },
          "carrierSettings" : {
            "$ref" : "#/components/schemas/CreateDriverRequest_carrierSettings"
          },
          "currentIdCardCode" : {
            "type" : "string",
            "description" : "The ID Card Code on the back of the physical card assigned to the driver.  Contact Samsara if you would like to enable this feature.",
            "example" : "941767043"
          },
          "deactivatedAtTime" : {
            "type" : "string",
            "description" : "The date and time this driver is considered to be deactivated in RFC 3339 format.",
            "example" : "2019-05-18T20:27:35Z"
          },
          "driverActivationStatus" : {
            "type" : "string",
            "description" : "A value indicating whether the driver is active or deactivated.",
            "enum" : [ "active", "deactivated" ]
          },
          "eldAdverseWeatherExemptionEnabled" : {
            "type" : "boolean",
            "description" : "Flag indicating this driver may use Adverse Weather exemptions in ELD logs."
          },
          "eldBigDayExemptionEnabled" : {
            "type" : "boolean",
            "description" : "Flag indicating this driver may use Big Day exemption in ELD logs."
          },
          "eldDayStartHour" : {
            "type" : "integer",
            "description" : "`0` indicating midnight-to-midnight ELD driving hours, `12` to indicate noon-to-noon driving hours."
          },
          "eldExempt" : {
            "type" : "boolean",
            "description" : "Flag indicating this driver is exempt from the Electronic Logging Mandate."
          },
          "eldExemptReason" : {
            "type" : "string",
            "description" : "Reason that this driver is exempt from the Electronic Logging Mandate (see eldExempt).",
            "example" : "Bad driver"
          },
          "eldPcEnabled" : {
            "type" : "boolean",
            "description" : "Flag indicating this driver may select the Personal Conveyance duty status in ELD logs."
          },
          "eldYmEnabled" : {
            "type" : "boolean",
            "description" : "Flag indicating this driver may select the Yard Move duty status in ELD logs."
          },
          "externalIds" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
            "example" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            }
          },
          "licenseNumber" : {
            "type" : "string",
            "description" : "Driver's state issued license number. The combination of this number and `licenseState` must be unique.",
            "example" : "E1234567"
          },
          "licenseState" : {
            "type" : "string",
            "description" : "Abbreviation of US state, Canadian province, or US territory that issued driver's license.",
            "example" : "CA"
          },
          "locale" : {
            "type" : "string",
            "description" : "Locale override (uncommon). These are specified by ISO 3166-2 country codes for supported locales.",
            "enum" : [ "us", "at", "be", "ca", "gb", "fr", "de", "ie", "it", "lu", "mx", "nl", "es", "ch", "pr" ]
          },
          "name" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string",
            "description" : "Driver's name.",
            "example" : "Susan Jones"
          },
          "notes" : {
            "maxLength" : 4096,
            "type" : "string",
            "description" : "Notes about the driver.",
            "example" : "Also goes by the nickname Furious Fred."
          },
          "password" : {
            "type" : "string",
            "description" : "Password that the driver can use to login to the Samsara driver app.",
            "example" : "aSecurePassword1234"
          },
          "phone" : {
            "maxLength" : 255,
            "type" : "string",
            "description" : "Phone number of the driver.",
            "example" : "5558234327"
          },
          "staticAssignedVehicleId" : {
            "type" : "string",
            "description" : "ID of vehicle that the driver is permanently assigned to. (uncommon).",
            "example" : "456"
          },
          "tachographCardNumber" : {
            "type" : "string",
            "description" : "Driver's assigned tachograph card number (Europe specific)",
            "example" : "1000000492436002"
          },
          "tagIds" : {
            "type" : "array",
            "description" : "IDs of tags the driver is associated with.",
            "items" : {
              "type" : "string",
              "example" : "147"
            }
          },
          "timezone" : {
            "type" : "string",
            "description" : "Home terminal timezone, in order to indicate what time zone should be used to calculate the ELD logs. Driver timezones use [IANA timezone database](https://www.iana.org/time-zones) keys (e.g. `America/Los_Angeles`, `America/New_York`, `Europe/London`, etc.). You can find a mapping of common timezone formats to IANA timezone keys [here](https://unicode.org/cldr/charts/latest/supplemental/zone_tzid.html).",
            "example" : "America/Los_Angeles"
          },
          "username" : {
            "maxLength" : 189,
            "minLength" : 1,
            "type" : "string",
            "description" : "Driver's login username into the driver app. The username may not contain spaces or the '@' symbol. The username must be unique.",
            "example" : "SusanJones"
          },
          "vehicleGroupTagId" : {
            "type" : "string",
            "description" : "Tag ID which determines which vehicles a driver will see when selecting vehicles.",
            "example" : "342417"
          }
        },
        "description" : "Driver that should be updated."
      },
      "UpdateDvirRequest" : {
        "required" : [ "authorId", "isResolved" ],
        "type" : "object",
        "properties" : {
          "authorId" : {
            "type" : "string",
            "description" : "The user who is resolving the dvir.",
            "example" : "11"
          },
          "isResolved" : {
            "type" : "boolean",
            "description" : "Resolves the DVIR. Must be `true`."
          },
          "mechanicNotes" : {
            "type" : "string",
            "description" : "The mechanics notes on the DVIR.",
            "example" : "Replaced headlight on passenger side."
          },
          "signedAtTime" : {
            "type" : "string",
            "description" : "Time when user signed this DVIR. Defaults to now. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.",
            "example" : "2020-01-27T07:06:25Z"
          }
        },
        "description" : "Information about resolving a DVIR."
      },
      "UpdateUserRequest" : {
        "type" : "object",
        "properties" : {
          "authType" : {
            "type" : "string",
            "description" : "The authentication type the user uses to authenticate. To use SAML this organization must have a configured SAML integration.",
            "enum" : [ "default", "saml" ]
          },
          "name" : {
            "type" : "string",
            "description" : "The first and last name of the user.",
            "example" : "Bob Smith"
          },
          "roles" : {
            "type" : "array",
            "description" : "The list of roles that applies to this user. A user may have \"organizational\" roles, which apply to the user at the organizational level, and \"tag-specific\" roles, which apply to the user for a given tag.",
            "items" : {
              "$ref" : "#/components/schemas/CreateUserRequest_roles"
            }
          }
        },
        "description" : "The user update arguments"
      },
      "UpdateVehicleRequest" : {
        "type" : "object",
        "properties" : {
          "auxInputType1" : {
            "type" : "string",
            "description" : "The type of [auxiliary input](https://kb.samsara.com/hc/en-us/articles/232232368-Auxiliary-Inputs) configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.",
            "example" : "boom",
            "enum" : [ "none", "emergencyLights", "emergencyAlarm", "stopPaddle", "powerTakeOff", "plow", "sweeper", "salter", "reefer", "door", "boom", "auxiliaryEngine", "generator", "eightWayLights" ]
          },
          "auxInputType10" : {
            "type" : "string",
            "description" : "The type of [auxiliary input](https://kb.samsara.com/hc/en-us/articles/232232368-Auxiliary-Inputs) configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.",
            "example" : "boom",
            "enum" : [ "none", "emergencyLights", "emergencyAlarm", "stopPaddle", "powerTakeOff", "plow", "sweeper", "salter", "reefer", "door", "boom", "auxiliaryEngine", "generator", "eightWayLights" ]
          },
          "auxInputType2" : {
            "type" : "string",
            "description" : "The type of [auxiliary input](https://kb.samsara.com/hc/en-us/articles/232232368-Auxiliary-Inputs) configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.",
            "example" : "boom",
            "enum" : [ "none", "emergencyLights", "emergencyAlarm", "stopPaddle", "powerTakeOff", "plow", "sweeper", "salter", "reefer", "door", "boom", "auxiliaryEngine", "generator", "eightWayLights" ]
          },
          "auxInputType3" : {
            "type" : "string",
            "description" : "The type of [auxiliary input](https://kb.samsara.com/hc/en-us/articles/232232368-Auxiliary-Inputs) configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.",
            "example" : "boom",
            "enum" : [ "none", "emergencyLights", "emergencyAlarm", "stopPaddle", "powerTakeOff", "plow", "sweeper", "salter", "reefer", "door", "boom", "auxiliaryEngine", "generator", "eightWayLights" ]
          },
          "auxInputType4" : {
            "type" : "string",
            "description" : "The type of [auxiliary input](https://kb.samsara.com/hc/en-us/articles/232232368-Auxiliary-Inputs) configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.",
            "example" : "boom",
            "enum" : [ "none", "emergencyLights", "emergencyAlarm", "stopPaddle", "powerTakeOff", "plow", "sweeper", "salter", "reefer", "door", "boom", "auxiliaryEngine", "generator", "eightWayLights" ]
          },
          "auxInputType5" : {
            "type" : "string",
            "description" : "The type of [auxiliary input](https://kb.samsara.com/hc/en-us/articles/232232368-Auxiliary-Inputs) configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.",
            "example" : "boom",
            "enum" : [ "none", "emergencyLights", "emergencyAlarm", "stopPaddle", "powerTakeOff", "plow", "sweeper", "salter", "reefer", "door", "boom", "auxiliaryEngine", "generator", "eightWayLights" ]
          },
          "auxInputType6" : {
            "type" : "string",
            "description" : "The type of [auxiliary input](https://kb.samsara.com/hc/en-us/articles/232232368-Auxiliary-Inputs) configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.",
            "example" : "boom",
            "enum" : [ "none", "emergencyLights", "emergencyAlarm", "stopPaddle", "powerTakeOff", "plow", "sweeper", "salter", "reefer", "door", "boom", "auxiliaryEngine", "generator", "eightWayLights" ]
          },
          "auxInputType7" : {
            "type" : "string",
            "description" : "The type of [auxiliary input](https://kb.samsara.com/hc/en-us/articles/232232368-Auxiliary-Inputs) configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.",
            "example" : "boom",
            "enum" : [ "none", "emergencyLights", "emergencyAlarm", "stopPaddle", "powerTakeOff", "plow", "sweeper", "salter", "reefer", "door", "boom", "auxiliaryEngine", "generator", "eightWayLights" ]
          },
          "auxInputType8" : {
            "type" : "string",
            "description" : "The type of [auxiliary input](https://kb.samsara.com/hc/en-us/articles/232232368-Auxiliary-Inputs) configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.",
            "example" : "boom",
            "enum" : [ "none", "emergencyLights", "emergencyAlarm", "stopPaddle", "powerTakeOff", "plow", "sweeper", "salter", "reefer", "door", "boom", "auxiliaryEngine", "generator", "eightWayLights" ]
          },
          "auxInputType9" : {
            "type" : "string",
            "description" : "The type of [auxiliary input](https://kb.samsara.com/hc/en-us/articles/232232368-Auxiliary-Inputs) configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.",
            "example" : "boom",
            "enum" : [ "none", "emergencyLights", "emergencyAlarm", "stopPaddle", "powerTakeOff", "plow", "sweeper", "salter", "reefer", "door", "boom", "auxiliaryEngine", "generator", "eightWayLights" ]
          },
          "engineHours" : {
            "type" : "integer",
            "description" : "A manual override for the vehicle's engine hours. You may only override a vehicle's engine hours if it cannot be read from on-board diagnostics. When you provide a manual engine hours override, Samsara will begin updating a vehicle's engine hours based on when the Samsara Vehicle Gateway is recieving power or not.",
            "format" : "int64",
            "example" : 10943
          },
          "externalIds" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
            "example" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            }
          },
          "harshAccelerationSettingType" : {
            "type" : "string",
            "description" : "The harsh acceleration setting type. This setting influences the acceleration sensitivity from which a [harsh event](https://kb.samsara.com/hc/en-us/articles/360006938891-Harsh-Events) is triggered. **By default**, this setting is inferred by the Samsara Vehicle Gateway from the engine computer, but it may be set or updated through the Samsara Dashboard or the API at any time. If set to `off`, then no acceleration based harsh events are triggered for the vehicle.",
            "example" : "off",
            "enum" : [ "passengerCar", "lightTruck", "heavyDuty", "off", "automatic" ]
          },
          "licensePlate" : {
            "maxLength" : 12,
            "type" : "string",
            "description" : "The license plate of the Vehicle. **By default**: empty. Can be set or updated through the Samsara Dashboard or the API at any time.",
            "example" : "XHK1234"
          },
          "name" : {
            "type" : "string",
            "description" : "The human-readable name of the Vehicle. This is set by a fleet administrator and will appear in both Samsara’s cloud dashboard as well as the Samsara Driver mobile app. **By default**, this name is the serial number of the Samsara Vehicle Gateway. It can be set or updated through the Samsara Dashboard or through the API at any time.",
            "example" : "Truck A7"
          },
          "notes" : {
            "maxLength" : 255,
            "type" : "string",
            "description" : "These are generic notes about the Vehicle. Empty by default. Can be set or updated through the Samsara Dashboard or the API at any time.",
            "example" : "These are notes about this given vehicle."
          },
          "odometerMeters" : {
            "type" : "integer",
            "description" : "A manual override for the vehicle's odometer. You may only override a vehicle's odometer if it cannot be read from on-board diagnostics. When you provide a manual odometer override, Samsara will begin updating a vehicle's odometer using GPS distance traveled since this override was set. See [here](https://kb.samsara.com/hc/en-us/articles/115005273667) for more details.",
            "format" : "int64",
            "example" : 9182
          },
          "staticAssignedDriverId" : {
            "type" : "string",
            "description" : "ID for the static assigned driver of the vehicle.",
            "example" : "123"
          },
          "tagIds" : {
            "type" : "array",
            "description" : "An array of IDs of tags to associate with this vehicle.",
            "items" : {
              "type" : "string",
              "example" : "321"
            }
          },
          "vin" : {
            "maxLength" : 17,
            "minLength" : 11,
            "type" : "string",
            "description" : "The VIN of the Vehicle. Most of the time, this will be automatically read from the engine computer by the Samsara Vehicle Gateway. It will be empty if it cannot be read. It can be set or updated through the Samsara Dashboard or the API at any time.",
            "example" : "1FUJA6BD31LJ09646"
          }
        },
        "description" : "All the editable portions of the vehicle object."
      },
      "User" : {
        "required" : [ "authType", "email", "id", "name", "roles" ],
        "type" : "object",
        "properties" : {
          "authType" : {
            "$ref" : "#/components/schemas/UserAuthType"
          },
          "email" : {
            "$ref" : "#/components/schemas/UserEmail"
          },
          "id" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "name" : {
            "$ref" : "#/components/schemas/UserName"
          },
          "roles" : {
            "$ref" : "#/components/schemas/UserRoles"
          }
        },
        "description" : "A user object."
      },
      "UserAuthType" : {
        "type" : "string",
        "description" : "The authentication type the user uses to authenticate. To use SAML this organization must have a configured SAML integration.",
        "enum" : [ "default", "saml" ]
      },
      "UserEmail" : {
        "type" : "string",
        "description" : "The email address of this user.",
        "example" : "user@company.com"
      },
      "UserId" : {
        "type" : "string",
        "description" : "ID of the user.",
        "example" : "123"
      },
      "UserName" : {
        "type" : "string",
        "description" : "The first and last name of the user.",
        "example" : "Bob Smith"
      },
      "UserResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "description" : "A single user."
      },
      "UserResponseDataResponseBody" : {
        "required" : [ "authType", "email", "id", "name", "roles" ],
        "type" : "object",
        "properties" : {
          "authType" : {
            "type" : "string",
            "description" : "The authentication type the user uses to authenticate. To use SAML this organization must have a configured SAML integration.",
            "example" : "saml",
            "enum" : [ "default", "saml" ]
          },
          "email" : {
            "type" : "string",
            "description" : "The email address of this user.",
            "format" : "email",
            "example" : "user@company.com"
          },
          "id" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "ID of the user.",
            "example" : "123"
          },
          "name" : {
            "type" : "string",
            "description" : "The first and last name of the user.",
            "example" : "Bob Smith"
          },
          "roles" : {
            "type" : "array",
            "description" : "The list of roles that applies to this user. A user may have \"organizational\" roles, which apply to the user at the organizational level, and \"tag-specific\" roles, which apply to the user for a given tag.",
            "example" : [ {
              "role" : {
                "id" : "8a9371af-82d1-4158-bf91-4ecc8d3a114c",
                "name" : "Full Admin"
              },
              "tag" : {
                "id" : "3914",
                "name" : "East Coast",
                "parentTagId" : "4815"
              }
            }, {
              "role" : {
                "id" : "8a9371af-82d1-4158-bf91-4ecc8d3a114c",
                "name" : "Full Admin"
              },
              "tag" : {
                "id" : "3914",
                "name" : "East Coast",
                "parentTagId" : "4815"
              }
            } ],
            "items" : {
              "$ref" : "#/components/schemas/UserRoleAssignmentResponseBody"
            }
          }
        },
        "description" : "A user object.",
        "example" : {
          "authType" : "default",
          "email" : "user@company.com",
          "id" : "123",
          "name" : "Bob Smith",
          "roles" : [ {
            "role" : {
              "id" : "8a9371af-82d1-4158-bf91-4ecc8d3a114c",
              "name" : "Full Admin"
            },
            "tag" : {
              "id" : "3914",
              "name" : "East Coast",
              "parentTagId" : "4815"
            }
          }, {
            "role" : {
              "id" : "8a9371af-82d1-4158-bf91-4ecc8d3a114c",
              "name" : "Full Admin"
            },
            "tag" : {
              "id" : "3914",
              "name" : "East Coast",
              "parentTagId" : "4815"
            }
          }, {
            "role" : {
              "id" : "8a9371af-82d1-4158-bf91-4ecc8d3a114c",
              "name" : "Full Admin"
            },
            "tag" : {
              "id" : "3914",
              "name" : "East Coast",
              "parentTagId" : "4815"
            }
          } ]
        }
      },
      "UserRole" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The unique ID for the role.",
            "example" : "8a9371af-82d1-4158-bf91-4ecc8d3a114c"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the role.",
            "example" : "Full Admin"
          }
        },
        "description" : "A user role object."
      },
      "UserRoleAssignment" : {
        "type" : "object",
        "properties" : {
          "role" : {
            "$ref" : "#/components/schemas/UserRole"
          },
          "tag" : {
            "$ref" : "#/components/schemas/tagTinyResponse"
          }
        },
        "description" : "A role that applies to a user. If the role has a `tag`, then the role applies for that tag. If there is no `tag`, then the role applies at the organizational level. A user may have many tag-specific roles, but may only have one organizational level role. If the organizational level role has higher privileges than a tag-specific role, then the organizational role privileges will take precedence."
      },
      "UserRoleAssignmentRequest" : {
        "required" : [ "roleId" ],
        "type" : "object",
        "properties" : {
          "roleId" : {
            "type" : "string",
            "description" : "The unique ID for the role.",
            "example" : "8a9371af-82d1-4158-bf91-4ecc8d3a114c"
          },
          "tagId" : {
            "type" : "string",
            "description" : "ID of the tag this role applies to.",
            "example" : "3914"
          }
        },
        "description" : "A role that applies to a user. If the role has a `tagId`, then the role applies for that tag. If there is no `tagId`, then the role applies at the organizational level. A user may have many tag-specific roles, but may only have one organizational role. If the organizational level role has higher privileges than a tag-specific role, then the organizational role privileges will take precedence."
      },
      "UserRoleAssignmentRequestRequestBody" : {
        "required" : [ "roleId" ],
        "type" : "object",
        "properties" : {
          "roleId" : {
            "type" : "string",
            "description" : "The unique ID for the role.",
            "format" : "uuid",
            "example" : "8a9371af-82d1-4158-bf91-4ecc8d3a114c"
          },
          "tagId" : {
            "type" : "string",
            "description" : "ID of the tag to which this role applies.",
            "example" : "3914"
          }
        },
        "description" : "A role that applies to a user. If the role has a `tagId`, then the role applies for that tag. If there is no `tagId`, then the role applies at the organizational level. A user may have many tag-specific roles, but may only have one organizational role. If the organizational level role has higher privileges than a tag-specific role, then the organizational role privileges will take precedence.",
        "example" : {
          "roleId" : "8a9371af-82d1-4158-bf91-4ecc8d3a114c",
          "tagId" : "3914"
        }
      },
      "UserRoleAssignmentResponseBody" : {
        "type" : "object",
        "properties" : {
          "role" : {
            "$ref" : "#/components/schemas/UserRoleResponseBody"
          },
          "tag" : {
            "$ref" : "#/components/schemas/GoaTagTinyResponseResponseBody"
          }
        },
        "description" : "A role that applies to a user. If the role has a `tag`, then the role applies for that tag. If there is no `tag`, then the role applies at the organizational level. A user may have many tag-specific roles, but may only have one organizational level role. If the organizational level role has higher privileges than a tag-specific role, then the organizational role privileges will take precedence.",
        "example" : {
          "role" : {
            "id" : "8a9371af-82d1-4158-bf91-4ecc8d3a114c",
            "name" : "Full Admin"
          },
          "tag" : {
            "id" : "3914",
            "name" : "East Coast",
            "parentTagId" : "4815"
          }
        }
      },
      "UserRoleResponseBody" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The unique ID for the role",
            "format" : "uuid",
            "example" : "8a9371af-82d1-4158-bf91-4ecc8d3a114c"
          },
          "name" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "The name of the role.",
            "example" : "Full Admin"
          }
        },
        "description" : "A user role object.",
        "example" : {
          "id" : "8a9371af-82d1-4158-bf91-4ecc8d3a114c",
          "name" : "Full Admin"
        }
      },
      "UserRoles" : {
        "type" : "array",
        "description" : "The list of roles that applies to this user. A user may have \"organizational\" roles, which apply to the user at the organizational level, and \"tag-specific\" roles, which apply to the user for a given tag.",
        "items" : {
          "$ref" : "#/components/schemas/UserRoleAssignment"
        }
      },
      "UserRolesRequest" : {
        "type" : "array",
        "description" : "The list of roles that applies to this user. A user may have \"organizational\" roles, which apply to the user at the organizational level, and \"tag-specific\" roles, which apply to the user for a given tag.",
        "items" : {
          "$ref" : "#/components/schemas/UserRoleAssignmentRequest"
        }
      },
      "UsersCreateUserGoaBadRequestResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Invalid value for parameter."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "Bad Request parameters",
        "example" : {
          "message" : "Invalid value for parameter.",
          "requestId" : "8916e1c1"
        }
      },
      "UsersCreateUserGoaInternalErrorResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Failed to execute GraphQL query."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "An internal server error occurred",
        "example" : {
          "message" : "Failed to execute GraphQL query.",
          "requestId" : "8916e1c1"
        }
      },
      "UsersCreateUserGoaNotFoundResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Object not found."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "No vehicle found for id",
        "example" : {
          "message" : "Object not found.",
          "requestId" : "8916e1c1"
        }
      },
      "UsersCreateUserGoaNotImplementedResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Not implemented."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "Requested endpoint is not yet implemented",
        "example" : {
          "message" : "Not implemented.",
          "requestId" : "8916e1c1"
        }
      },
      "UsersCreateUserGoaRequestBody" : {
        "required" : [ "authType", "email", "name", "roles" ],
        "type" : "object",
        "properties" : {
          "authType" : {
            "type" : "string",
            "description" : "The authentication type the user uses to authenticate. To use SAML this organization must have a configured SAML integration.",
            "example" : "saml",
            "enum" : [ "default", "saml" ]
          },
          "email" : {
            "type" : "string",
            "description" : "The email address of this user.",
            "format" : "email",
            "example" : "user@company.com"
          },
          "name" : {
            "type" : "string",
            "description" : "The first and last name of the user.",
            "example" : "Bob Smith"
          },
          "roles" : {
            "type" : "array",
            "description" : "The list of roles that applies to this user. A user may have \"organizational\" roles, which apply to the user at the organizational level, and \"tag-specific\" roles, which apply to the user for a given tag.",
            "example" : [ {
              "roleId" : "8a9371af-82d1-4158-bf91-4ecc8d3a114c",
              "tagId" : "3914"
            }, {
              "roleId" : "8a9371af-82d1-4158-bf91-4ecc8d3a114c",
              "tagId" : "3914"
            }, {
              "roleId" : "8a9371af-82d1-4158-bf91-4ecc8d3a114c",
              "tagId" : "3914"
            }, {
              "roleId" : "8a9371af-82d1-4158-bf91-4ecc8d3a114c",
              "tagId" : "3914"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/UserRoleAssignmentRequestRequestBody"
            }
          }
        },
        "example" : {
          "authType" : "default",
          "email" : "user@company.com",
          "name" : "Bob Smith",
          "roles" : [ {
            "roleId" : "8a9371af-82d1-4158-bf91-4ecc8d3a114c",
            "tagId" : "3914"
          }, {
            "roleId" : "8a9371af-82d1-4158-bf91-4ecc8d3a114c",
            "tagId" : "3914"
          }, {
            "roleId" : "8a9371af-82d1-4158-bf91-4ecc8d3a114c",
            "tagId" : "3914"
          }, {
            "roleId" : "8a9371af-82d1-4158-bf91-4ecc8d3a114c",
            "tagId" : "3914"
          } ]
        }
      },
      "UsersCreateUserGoaResponseBody" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/UserResponseDataResponseBody"
          }
        },
        "description" : "CreateUserGoaResponseBody result type (default view)",
        "example" : {
          "data" : {
            "authType" : "saml",
            "email" : "user@company.com",
            "id" : "123",
            "name" : "Bob Smith",
            "roles" : [ {
              "role" : {
                "id" : "8a9371af-82d1-4158-bf91-4ecc8d3a114c",
                "name" : "Full Admin"
              },
              "tag" : {
                "id" : "3914",
                "name" : "East Coast",
                "parentTagId" : "4815"
              }
            }, {
              "role" : {
                "id" : "8a9371af-82d1-4158-bf91-4ecc8d3a114c",
                "name" : "Full Admin"
              },
              "tag" : {
                "id" : "3914",
                "name" : "East Coast",
                "parentTagId" : "4815"
              }
            }, {
              "role" : {
                "id" : "8a9371af-82d1-4158-bf91-4ecc8d3a114c",
                "name" : "Full Admin"
              },
              "tag" : {
                "id" : "3914",
                "name" : "East Coast",
                "parentTagId" : "4815"
              }
            } ]
          }
        }
      },
      "V1Asset" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "assetSerialNumber" : {
            "type" : "string",
            "description" : "Serial number of the host asset",
            "example" : "SNTEST123"
          },
          "cable" : {
            "type" : "array",
            "description" : "The cable connected to the asset",
            "items" : {
              "$ref" : "#/components/schemas/V1Asset_cable"
            }
          },
          "engineHours" : {
            "type" : "integer",
            "description" : "Engine hours",
            "example" : 104
          },
          "id" : {
            "type" : "integer",
            "description" : "Asset ID",
            "format" : "int64",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "description" : "Asset name",
            "example" : "Trailer 123"
          },
          "vehicleId" : {
            "type" : "integer",
            "description" : "The ID of the Vehicle associated to the Asset (if present)",
            "format" : "int64",
            "example" : 2
          }
        },
        "description" : "Basic information of an asset"
      },
      "V1AssetCurrentLocation" : {
        "type" : "object",
        "properties" : {
          "latitude" : {
            "type" : "number",
            "description" : "The latitude of the location in degrees.",
            "example" : 37.0
          },
          "location" : {
            "type" : "string",
            "description" : "The best effort (street,city,state) for the latitude and longitude.",
            "example" : "525 York, San Francisco, CA"
          },
          "longitude" : {
            "type" : "number",
            "description" : "The longitude of the location in degrees.",
            "example" : -122.7
          },
          "speedMilesPerHour" : {
            "type" : "number",
            "description" : "The speed calculated from GPS that the asset was traveling at in miles per hour.",
            "example" : 35.0
          },
          "timeMs" : {
            "type" : "number",
            "description" : "Time in Unix milliseconds since epoch when the asset was at the location.",
            "example" : 12314151
          }
        },
        "description" : "Current location of an asset"
      },
      "V1AssetCurrentLocationsResponse" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "assetSerialNumber" : {
            "type" : "string",
            "description" : "Asset serial number",
            "example" : "8dka2810"
          },
          "cable" : {
            "$ref" : "#/components/schemas/V1AssetCurrentLocationsResponse_cable"
          },
          "engineHours" : {
            "type" : "integer",
            "description" : "Engine hours",
            "example" : 104
          },
          "id" : {
            "type" : "integer",
            "description" : "Asset ID",
            "format" : "int64",
            "example" : 1
          },
          "location" : {
            "type" : "array",
            "description" : "Current location of an asset",
            "items" : {
              "$ref" : "#/components/schemas/V1AssetCurrentLocation"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Asset name",
            "example" : "Trailer 123"
          }
        },
        "description" : "Basic information of an asset"
      },
      "V1AssetLocationResponse" : {
        "type" : "array",
        "description" : "A list of historical asset locations.",
        "items" : {
          "$ref" : "#/components/schemas/V1AssetLocationResponse_inner"
        }
      },
      "V1AssetReeferResponse" : {
        "type" : "object",
        "properties" : {
          "assetType" : {
            "type" : "string",
            "description" : "Asset type",
            "example" : "Reefer (Thermo King)"
          },
          "id" : {
            "type" : "integer",
            "description" : "Asset ID",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "description" : "Asset name",
            "example" : "Reefer 123"
          },
          "reeferStats" : {
            "$ref" : "#/components/schemas/V1AssetReeferResponse_reeferStats"
          }
        },
        "description" : "Reefer-specific asset details"
      },
      "V1AssetsReefer" : {
        "type" : "object",
        "properties" : {
          "assetType" : {
            "type" : "string",
            "description" : "Asset type",
            "example" : "Thermo King"
          },
          "id" : {
            "type" : "integer",
            "description" : "Asset ID",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "description" : "Asset name",
            "example" : "Reefer 123"
          },
          "reeferStats" : {
            "$ref" : "#/components/schemas/V1AssetsReefer_reeferStats"
          }
        },
        "description" : "Reefer-specific details"
      },
      "V1CargoResponse" : {
        "type" : "object",
        "properties" : {
          "groupId" : {
            "type" : "integer",
            "description" : "Deprecated.",
            "format" : "int64",
            "example" : 101
          },
          "sensors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/V1CargoResponse_sensors"
            }
          }
        },
        "description" : "Contains the current cargo status of a sensor."
      },
      "V1DataInputHistoryResponse" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The ID of this data input",
            "format" : "int64",
            "example" : 12345
          },
          "name" : {
            "type" : "string",
            "description" : "Name of this data input",
            "example" : "Pump Flow"
          },
          "points" : {
            "type" : "array",
            "description" : "Data points from this data input",
            "items" : {
              "$ref" : "#/components/schemas/V1DataInputHistoryResponse_points"
            }
          }
        }
      },
      "V1DispatchJob" : {
        "allOf" : [ {
          "required" : [ "dispatch_route_id", "id", "job_state" ],
          "type" : "object",
          "properties" : {
            "arrived_at_ms" : {
              "type" : "integer",
              "description" : "The time at which the driver arrived at the job destination.",
              "format" : "int64",
              "example" : 1462881998034
            },
            "completed_at_ms" : {
              "type" : "integer",
              "description" : "The time at which the job was marked complete (e.g. started driving to the next destination).",
              "format" : "int64",
              "example" : 1462881998034
            },
            "dispatch_route_id" : {
              "type" : "integer",
              "description" : "ID of the route that this job belongs to.",
              "format" : "int64",
              "example" : 55
            },
            "documents" : {
              "type" : "array",
              "description" : "Document submissions associated with this job.",
              "items" : {
                "$ref" : "#/components/schemas/V1DispatchJobDocumentInfo"
              }
            },
            "driver_id" : {
              "type" : "integer",
              "description" : "ID of the driver assigned to the dispatch job.",
              "format" : "int64",
              "example" : 444
            },
            "en_route_at_ms" : {
              "type" : "integer",
              "description" : "The time at which the assigned driver started fulfilling the job (e.g. started driving to the destination).",
              "format" : "int64",
              "example" : 1462881998034
            },
            "estimated_arrival_ms" : {
              "type" : "integer",
              "description" : "The time at which the assigned driver is estimated to arrive at the job destination. Only valid for en-route jobs.",
              "format" : "int64",
              "example" : 1462881998034
            },
            "fleet_viewer_url" : {
              "type" : "string",
              "description" : "Fleet viewer url of the dispatch job.",
              "example" : "https://cloud.samsara.com/fleet/viewer/job/fleet_viewer_token"
            },
            "group_id" : {
              "type" : "integer",
              "description" : "Deprecated.",
              "format" : "int64",
              "example" : 101
            },
            "id" : {
              "type" : "integer",
              "description" : "ID of the Samsara dispatch job.",
              "format" : "int64",
              "example" : 773
            },
            "job_state" : {
              "$ref" : "#/components/schemas/V1JobStatus"
            },
            "skipped_at_ms" : {
              "type" : "integer",
              "description" : "The time at which the job was marked skipped.",
              "format" : "int64",
              "example" : 1462881998034
            },
            "vehicle_id" : {
              "type" : "integer",
              "description" : "ID of the vehicle used for the dispatch job.",
              "format" : "int64",
              "example" : 112
            }
          }
        }, {
          "$ref" : "#/components/schemas/V1DispatchJobCreate"
        } ]
      },
      "V1DispatchJobCreate" : {
        "required" : [ "scheduled_arrival_time_ms" ],
        "type" : "object",
        "properties" : {
          "destination_address" : {
            "type" : "string",
            "description" : "The address of the job destination, as it would be recognized if provided to maps.google.com. Optional if a valid destination address ID is provided.",
            "example" : "123 Main St, Philadelphia, PA 19106"
          },
          "destination_address_id" : {
            "type" : "integer",
            "description" : "ID of the job destination associated with an address book entry. Optional if valid values are provided for destination address and latitude/longitude. If a valid destination address ID is provided, address/latitude/longitude will be used from the address book entry. Name of the address book entry will only be used if the destination name is not provided.",
            "format" : "int64",
            "example" : 67890
          },
          "destination_lat" : {
            "type" : "number",
            "description" : "Latitude of the destination in decimal degrees. Optional if a valid destination address ID is provided.",
            "format" : "double",
            "example" : 123.456
          },
          "destination_lng" : {
            "type" : "number",
            "description" : "Longitude of the destination in decimal degrees. Optional if a valid destination address ID is provided.",
            "format" : "double",
            "example" : 37.459
          },
          "destination_name" : {
            "type" : "string",
            "description" : "The name of the job destination. If provided, it will take precedence over the name of the address book entry.",
            "example" : "ACME Inc. Philadelphia HQ"
          },
          "external_ids" : {
            "$ref" : "#/components/schemas/V1DispatchRouteJobExternalIds"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes regarding the details of this job, maximum of 2000 characters; newline characters ('\\n')can be used for formatting.",
            "example" : "Ensure crates are stacked no more than 3 high."
          },
          "scheduled_arrival_time_ms" : {
            "type" : "integer",
            "description" : "The time at which the assigned driver is scheduled to arrive at the job destination.",
            "format" : "int64",
            "example" : 1462881998034
          },
          "scheduled_departure_time_ms" : {
            "type" : "integer",
            "description" : "The time at which the assigned driver is scheduled to depart from the job destination.",
            "format" : "int64",
            "example" : 1462881998034
          }
        }
      },
      "V1DispatchJobDocumentInfo" : {
        "required" : [ "driverId", "id" ],
        "type" : "object",
        "properties" : {
          "driverId" : {
            "type" : "integer",
            "description" : "ID of driver that submitted the document.",
            "example" : 1234
          },
          "id" : {
            "type" : "string",
            "description" : "ID of document. This can be used to query for the document's info via the /v1/fleet/drivers/{driver_id}/documents/{document_id} endpoint",
            "example" : "201842424242"
          }
        }
      },
      "V1DispatchJobUpdate" : {
        "allOf" : [ {
          "required" : [ "id" ],
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "integer",
              "description" : "ID of the Samsara dispatch job to update",
              "format" : "int64",
              "example" : 42
            }
          }
        }, {
          "$ref" : "#/components/schemas/V1DispatchJobCreate"
        } ]
      },
      "V1DispatchJobWithoutETA" : {
        "allOf" : [ {
          "required" : [ "dispatch_route_id", "id", "job_state" ],
          "type" : "object",
          "properties" : {
            "arrived_at_ms" : {
              "type" : "integer",
              "description" : "The time at which the driver arrived at the job destination.",
              "format" : "int64",
              "example" : 1462881998034
            },
            "completed_at_ms" : {
              "type" : "integer",
              "description" : "The time at which the job was marked complete (e.g. started driving to the next destination).",
              "format" : "int64",
              "example" : 1462881998034
            },
            "dispatch_route_id" : {
              "type" : "integer",
              "description" : "ID of the route that this job belongs to.",
              "format" : "int64",
              "example" : 55
            },
            "documents" : {
              "type" : "array",
              "description" : "Document submissions associated with this job.",
              "items" : {
                "$ref" : "#/components/schemas/V1DispatchJobDocumentInfo"
              }
            },
            "driver_id" : {
              "type" : "integer",
              "description" : "ID of the driver assigned to the dispatch job.",
              "format" : "int64",
              "example" : 444
            },
            "en_route_at_ms" : {
              "type" : "integer",
              "description" : "The time at which the assigned driver started fulfilling the job (e.g. started driving to the destination).",
              "format" : "int64",
              "example" : 1462881998034
            },
            "fleet_viewer_url" : {
              "type" : "string",
              "description" : "Fleet viewer url of the dispatch job.",
              "example" : "https://cloud.samsara.com/fleet/viewer/job/fleet_viewer_token"
            },
            "group_id" : {
              "type" : "integer",
              "description" : "Deprecated.",
              "format" : "int64",
              "example" : 101
            },
            "id" : {
              "type" : "integer",
              "description" : "ID of the Samsara dispatch job.",
              "format" : "int64",
              "example" : 773
            },
            "job_state" : {
              "$ref" : "#/components/schemas/V1JobStatus"
            },
            "skipped_at_ms" : {
              "type" : "integer",
              "description" : "The time at which the job was marked skipped.",
              "format" : "int64",
              "example" : 1462881998034
            },
            "vehicle_id" : {
              "type" : "integer",
              "description" : "ID of the vehicle used for the dispatch job.",
              "format" : "int64",
              "example" : 112
            }
          }
        }, {
          "$ref" : "#/components/schemas/V1DispatchJobCreate"
        } ]
      },
      "V1DispatchRoute" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "dispatch_jobs" : {
              "type" : "array",
              "description" : "The dispatch jobs associated with this route.",
              "items" : {
                "$ref" : "#/components/schemas/V1DispatchJob"
              }
            },
            "id" : {
              "type" : "integer",
              "description" : "ID of the Samsara dispatch route.",
              "format" : "int64",
              "example" : 556
            }
          }
        }, {
          "$ref" : "#/components/schemas/V1DispatchRouteBase"
        } ]
      },
      "V1DispatchRouteBase" : {
        "type" : "object",
        "properties" : {
          "actual_end_ms" : {
            "type" : "integer",
            "description" : "The time in Unix epoch milliseconds that the route actually ended.",
            "format" : "int64",
            "example" : 1462882101000
          },
          "actual_start_ms" : {
            "type" : "integer",
            "description" : "The time in Unix epoch milliseconds that the route actually started.",
            "format" : "int64",
            "example" : 1462882098000
          },
          "complete_last_stop_on_arrival" : {
            "type" : "boolean",
            "description" : "When set to true (default), this causes the Route to complete on arrival at the final stop. When set to false, the last stop will capture arrival and departure separately as with other stops.",
            "default" : true
          },
          "driver_id" : {
            "type" : "integer",
            "description" : "ID of the driver assigned to the dispatch route. Note that driver_id and vehicle_id are mutually exclusive. If neither is specified, then the route is unassigned.",
            "format" : "int64",
            "example" : 555
          },
          "externalIds" : {
            "$ref" : "#/components/schemas/V1DispatchRouteExternalIds"
          },
          "group_id" : {
            "type" : "integer",
            "description" : "Deprecated.",
            "format" : "int64",
            "example" : 101
          },
          "name" : {
            "type" : "string",
            "description" : "Descriptive name of this route.",
            "example" : "Bid #123"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes regarding the details of this route; maximum of 2000 characters; newline characters ('\\n')can be used for formatting.",
            "example" : "Please make sure to confirm crate count at each stop on this route.\nTotal number of crates for route: 23."
          },
          "odometer_end_meters" : {
            "type" : "integer",
            "description" : "Odometer reading at the end of the route. Will not be returned if Route is not completed or if Odometer information is not available for the relevant vehicle.",
            "format" : "int64",
            "example" : 2000000
          },
          "odometer_start_meters" : {
            "type" : "integer",
            "description" : "Odometer reading at the start of the route. Will not be returned if Route has not started or if Odometer information is not available for the relevant vehicle.",
            "format" : "int64",
            "example" : 1000000
          },
          "scheduled_end_ms" : {
            "type" : "integer",
            "description" : "The time in Unix epoch milliseconds that the last job in the route is scheduled to end.",
            "format" : "int64",
            "example" : 1462881998034
          },
          "scheduled_meters" : {
            "type" : "integer",
            "description" : "The distance expected to be traveled for this route in meters.",
            "format" : "int64",
            "example" : 10000
          },
          "scheduled_start_ms" : {
            "type" : "integer",
            "description" : "The time in Unix epoch milliseconds that the route is scheduled to start.",
            "format" : "int64",
            "example" : 1462881998034
          },
          "start_location_address" : {
            "type" : "string",
            "description" : "The address of the route's starting location, as it would be recognized if provided to maps.google.com. Optional if a valid start location address ID is provided.",
            "example" : "123 Main St, Philadelphia, PA 19106"
          },
          "start_location_address_id" : {
            "type" : "integer",
            "description" : "ID of the start location associated with an address book entry. Optional if valid values are provided for start location address and latitude/longitude. If a valid start location address ID is provided, address/latitude/longitude will be used from the address book entry. Name of the address book entry will only be used if the start location name is not provided.",
            "format" : "int64",
            "example" : 67890
          },
          "start_location_lat" : {
            "type" : "number",
            "description" : "Latitude of the start location in decimal degrees. Optional if a valid start location address ID is provided.",
            "format" : "double",
            "example" : 123.456
          },
          "start_location_lng" : {
            "type" : "number",
            "description" : "Longitude of the start location in decimal degrees. Optional if a valid start location address ID is provided.",
            "format" : "double",
            "example" : 37.459
          },
          "start_location_name" : {
            "type" : "string",
            "description" : "The name of the route's starting location. If provided, it will take precedence over the name of the address book entry.",
            "example" : "ACME Inc. Philadelphia HQ"
          },
          "trailer_id" : {
            "type" : "integer",
            "description" : "ID of the trailer assigned to the dispatch route. Note that trailers can only be assigned to routes that have a Vehicle or Driver assigned to them.",
            "format" : "int64",
            "example" : 666
          },
          "vehicle_id" : {
            "type" : "integer",
            "description" : "ID of the vehicle assigned to the dispatch route. Note that vehicle_id and driver_id are mutually exclusive. If neither is specified, then the route is unassigned.",
            "format" : "int64",
            "example" : 444
          }
        }
      },
      "V1DispatchRouteCreate" : {
        "allOf" : [ {
          "required" : [ "dispatch_jobs" ],
          "type" : "object",
          "properties" : {
            "dispatch_jobs" : {
              "type" : "array",
              "description" : "The dispatch jobs to create for this route.",
              "items" : {
                "$ref" : "#/components/schemas/V1DispatchJobCreate"
              }
            }
          }
        }, {
          "$ref" : "#/components/schemas/V1DispatchRouteCreateBase"
        } ]
      },
      "V1DispatchRouteCreateBase" : {
        "required" : [ "name", "scheduled_start_ms" ],
        "type" : "object",
        "properties" : {
          "complete_last_stop_on_arrival" : {
            "type" : "boolean",
            "description" : "When set to true (default), this causes the Route to complete on arrival at the final stop. When set to false, the last stop will capture arrival and departure separately as with other stops.",
            "default" : true
          },
          "driver_id" : {
            "type" : "integer",
            "description" : "ID of the driver assigned to the dispatch route. Note that driver_id and vehicle_id are mutually exclusive. If neither is specified, then the route is unassigned.",
            "format" : "int64",
            "example" : 555
          },
          "externalIds" : {
            "$ref" : "#/components/schemas/V1DispatchRouteExternalIds"
          },
          "name" : {
            "type" : "string",
            "description" : "Descriptive name of this route.",
            "example" : "Bid #123"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes regarding the details of this route; maximum of 2000 characters; newline characters ('\\n')can be used for formatting.",
            "example" : "Please make sure to confirm crate count at each stop on this route.\nTotal number of crates for route: 23."
          },
          "scheduled_end_ms" : {
            "type" : "integer",
            "description" : "The time in Unix epoch milliseconds that the last job in the route is scheduled to end.",
            "format" : "int64",
            "example" : 1462881998034
          },
          "scheduled_meters" : {
            "type" : "integer",
            "description" : "The distance expected to be traveled for this route in meters.",
            "format" : "int64",
            "example" : 10000
          },
          "scheduled_start_ms" : {
            "type" : "integer",
            "description" : "The time in Unix epoch milliseconds that the route is scheduled to start.",
            "format" : "int64",
            "example" : 1462881998034
          },
          "start_location_address" : {
            "type" : "string",
            "description" : "The address of the route's starting location, as it would be recognized if provided to maps.google.com. Optional if a valid start location address ID is provided.",
            "example" : "123 Main St, Philadelphia, PA 19106"
          },
          "start_location_address_id" : {
            "type" : "integer",
            "description" : "ID of the start location associated with an address book entry. Optional if valid values are provided for start location address and latitude/longitude. If a valid start location address ID is provided, address/latitude/longitude will be used from the address book entry. Name of the address book entry will only be used if the start location name is not provided.",
            "format" : "int64",
            "example" : 67890
          },
          "start_location_lat" : {
            "type" : "number",
            "description" : "Latitude of the start location in decimal degrees. Optional if a valid start location address ID is provided.",
            "format" : "double",
            "example" : 123.456
          },
          "start_location_lng" : {
            "type" : "number",
            "description" : "Longitude of the start location in decimal degrees. Optional if a valid start location address ID is provided.",
            "format" : "double",
            "example" : 37.459
          },
          "start_location_name" : {
            "type" : "string",
            "description" : "The name of the route's starting location. If provided, it will take precedence over the name of the address book entry.",
            "example" : "ACME Inc. Philadelphia HQ"
          },
          "trailer_id" : {
            "type" : "integer",
            "description" : "ID of the trailer assigned to the dispatch route. Note that trailers can only be assigned to routes that have a Vehicle or Driver assigned to them.",
            "format" : "int64",
            "example" : 666
          },
          "vehicle_id" : {
            "type" : "integer",
            "description" : "ID of the vehicle assigned to the dispatch route. Note that vehicle_id and driver_id are mutually exclusive. If neither is specified, then the route is unassigned.",
            "format" : "int64",
            "example" : 444
          }
        }
      },
      "V1DispatchRouteExternalIds" : {
        "type" : "object",
        "description" : "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
        "example" : {
          "maintenanceId" : "250020",
          "payrollId" : "ABFS18600"
        }
      },
      "V1DispatchRouteHistoricalEntry" : {
        "type" : "object",
        "properties" : {
          "changed_at_ms" : {
            "type" : "integer",
            "description" : "Timestamp that the route was updated, represented as Unix milliseconds since epoch.",
            "format" : "int64",
            "example" : 1499411220000
          },
          "route" : {
            "$ref" : "#/components/schemas/V1DispatchRoute"
          }
        }
      },
      "V1DispatchRouteHistory" : {
        "type" : "object",
        "properties" : {
          "history" : {
            "type" : "array",
            "description" : "History of the route's state changes.",
            "items" : {
              "$ref" : "#/components/schemas/V1DispatchRouteHistoricalEntry"
            }
          }
        }
      },
      "V1DispatchRouteJobExternalIds" : {
        "type" : "object",
        "description" : "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
        "example" : {
          "maintenanceId" : "250020",
          "payrollId" : "ABFS18600"
        }
      },
      "V1DispatchRouteUpdate" : {
        "allOf" : [ {
          "required" : [ "dispatch_jobs" ],
          "type" : "object",
          "properties" : {
            "dispatch_jobs" : {
              "type" : "array",
              "description" : "The dispatch jobs for the route.",
              "items" : {
                "$ref" : "#/components/schemas/V1DispatchJobUpdate"
              }
            }
          }
        }, {
          "$ref" : "#/components/schemas/V1DispatchRouteUpdateBase"
        } ]
      },
      "V1DispatchRouteUpdateBase" : {
        "allOf" : [ {
          "required" : [ "id" ],
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "integer",
              "description" : "ID of route. This must match the route ID passed in URL.",
              "format" : "int64",
              "example" : 42
            }
          }
        }, {
          "$ref" : "#/components/schemas/V1DispatchRouteCreateBase"
        } ]
      },
      "V1DispatchRouteWithoutETA" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "dispatch_jobs" : {
              "type" : "array",
              "description" : "The dispatch jobs associated with this route.",
              "items" : {
                "$ref" : "#/components/schemas/V1DispatchJobWithoutETA"
              }
            },
            "id" : {
              "type" : "integer",
              "description" : "ID of the Samsara dispatch route.",
              "format" : "int64",
              "example" : 556
            }
          }
        }, {
          "$ref" : "#/components/schemas/V1DispatchRouteBase"
        } ]
      },
      "V1DispatchRoutes" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/V1DispatchRouteWithoutETA"
        }
      },
      "V1Document" : {
        "allOf" : [ {
          "required" : [ "documentType", "driverCreatedAtMs", "driverId", "fields", "id", "orgId", "serverCreatedAtMs", "serverUpdatedAtMs", "vehicleId" ],
          "type" : "object",
          "properties" : {
            "conditionalFieldSections" : {
              "$ref" : "#/components/schemas/V1DocumentConditionalFields"
            },
            "documentType" : {
              "type" : "string",
              "description" : "Name of the document type.",
              "example" : "Accident Report"
            },
            "driverCreatedAtMs" : {
              "type" : "integer",
              "description" : "The time in Unix epoch milliseconds that the document was created in the driver app.",
              "format" : "int64",
              "example" : 1462881998034
            },
            "driverId" : {
              "type" : "integer",
              "description" : "ID of the driver for whom the document is submitted.",
              "format" : "int64",
              "example" : 555
            },
            "fields" : {
              "$ref" : "#/components/schemas/V1DocumentFields"
            },
            "id" : {
              "type" : "string",
              "description" : "ID of the document.",
              "example" : "201842424242"
            },
            "orgId" : {
              "type" : "integer",
              "description" : "Organization ID that the document belongs to.",
              "format" : "int64",
              "example" : 555
            },
            "serverCreatedAtMs" : {
              "type" : "integer",
              "description" : "The time in Unix epoch milliseconds that the document was received by the server.",
              "format" : "int64",
              "example" : 1462881998034
            },
            "serverUpdatedAtMs" : {
              "type" : "integer",
              "description" : "The time in Unix epoch milliseconds that the document was updated on the server.",
              "format" : "int64",
              "example" : 1462881998034
            },
            "vehicleId" : {
              "type" : "integer",
              "description" : "ID of the vehicle the driver was signed into when the document was submitted. Will be `null` if the document `state` is `Required`.",
              "format" : "int64",
              "example" : 222
            }
          }
        }, {
          "$ref" : "#/components/schemas/V1DocumentBase"
        } ]
      },
      "V1DocumentBase" : {
        "required" : [ "dispatchJobId", "notes" ],
        "type" : "object",
        "properties" : {
          "dispatchJobId" : {
            "type" : "integer",
            "description" : "ID of the Samsara dispatch job for which the document is submitted.",
            "format" : "int64",
            "example" : 773
          },
          "name" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string",
            "description" : "Custom name of the document. If no custom name is given to the document, the admin dashboard and driver app will display the template name as the default document name.",
            "example" : "Fuel Receipt Wichita"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes submitted with this document.",
            "example" : "Fueled up before delivery."
          },
          "state" : {
            "type" : "string",
            "description" : "The condition of the document created for the driver. Can be either `Required` or `Submitted`. If no value is specified, `state` defaults to `Required`. `Required` documents are pre-populated documents for the Driver to fill out in the Driver App and have not yet been submitted. `Submitted` documents have been submitted by the driver in the Driver App. `Archived` documents have been archived by the admin in the cloud dashboard.",
            "example" : "Submitted",
            "enum" : [ "Required", "Submitted", "Archived" ],
            "default" : "Required"
          }
        }
      },
      "V1DocumentConditionalFields" : {
        "type" : "array",
        "description" : "An array of objects that describe a set of fields conditionally shown by a multiple choice value.",
        "example" : [ {
          "conditionalFieldFirstIndex" : 1,
          "conditionalFieldLastIndex" : 4,
          "triggeringFieldIndex" : 0,
          "triggeringFieldValue" : "Yes"
        } ],
        "items" : {
          "$ref" : "#/components/schemas/V1DocumentConditionalFields_inner"
        }
      },
      "V1DocumentCreate" : {
        "allOf" : [ {
          "required" : [ "documentTypeUuid", "fields" ],
          "type" : "object",
          "properties" : {
            "documentTypeUuid" : {
              "type" : "string",
              "description" : "Universally unique identifier for the document type that this document is being created for.",
              "example" : "4aff772c-a7bb-45e6-8e41-6a53e34feb83"
            },
            "fields" : {
              "$ref" : "#/components/schemas/V1DocumentCreateFields"
            }
          },
          "description" : "Arguments to create a document."
        }, {
          "$ref" : "#/components/schemas/V1DocumentCreateBase"
        } ]
      },
      "V1DocumentCreateBase" : {
        "type" : "object",
        "properties" : {
          "dispatchJobId" : {
            "type" : "integer",
            "description" : "ID of the Samsara dispatch job for which the document is submitted.",
            "format" : "int64",
            "example" : 773
          },
          "name" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string",
            "description" : "Custom name of the document. If no custom name is given to the document, the admin dashboard and driver app will display the template name as the default document name.",
            "example" : "Fuel Receipt Wichita"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes submitted with this document.",
            "example" : "Fueled up before delivery."
          },
          "state" : {
            "type" : "string",
            "description" : "The condition of the document created for the driver. Can be either `Required` or `Submitted`. If no value is specified, `state` defaults to `Required`. `Required` documents are pre-populated documents for the Driver to fill out in the Driver App and have not yet been submitted. `Submitted` documents will show up as submitted by the driver through the driver app.",
            "example" : "Required",
            "enum" : [ "Required", "Submitted" ],
            "default" : "Required"
          }
        }
      },
      "V1DocumentCreateFields" : {
        "type" : "array",
        "description" : "List of fields for the document. The fields must be listed in the order that that they appear in the document type. Values of fields can be set to null or omitted if the document state is set to \"Required\".",
        "example" : [ {
          "label" : "Example number field label",
          "numberValue" : 999,
          "valueType" : "ValueType_Number"
        }, {
          "label" : "text",
          "stringValue" : "example string",
          "valueType" : "ValueType_String"
        }, {
          "label" : "Example multi choice label",
          "multipleChoiceValue" : [ {
            "selected" : false,
            "value" : "option 1"
          }, {
            "selected" : true,
            "value" : "option 2"
          } ],
          "valueType" : "ValueType_MultipleChoice"
        }, {
          "dateTimeValue" : {
            "dateTimeMs" : 10855639004823
          },
          "label" : "Example date time label",
          "valueType" : "ValueType_DateTime"
        }, {
          "label" : "Example photo label",
          "valueType" : "ValueType_Photo"
        }, {
          "label" : "Example signature label",
          "valueType" : "ValueType_Signature"
        } ],
        "items" : {
          "$ref" : "#/components/schemas/V1DocumentCreateFields_inner"
        }
      },
      "V1DocumentFieldType" : {
        "required" : [ "label", "valueType" ],
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string",
            "description" : "Name of this field type.",
            "example" : "Fuel Cost ($)"
          },
          "multipleChoiceValueTypeMetadata" : {
            "$ref" : "#/components/schemas/V1DocumentFieldType_multipleChoiceValueTypeMetadata"
          },
          "numberValueTypeMetadata" : {
            "$ref" : "#/components/schemas/V1DocumentFieldType_numberValueTypeMetadata"
          },
          "signatureValueTypeMetadata" : {
            "$ref" : "#/components/schemas/V1DocumentFieldType_signatureValueTypeMetadata"
          },
          "valueType" : {
            "type" : "string",
            "description" : "The type of value this field can have.\nValid values: `ValueType_Number`, `ValueType_String`, `ValueType_Photo`, `ValueType_MultipleChoice`, `ValueType_Signature`, `ValueType_DateTime`.",
            "example" : "ValueType_Number"
          }
        }
      },
      "V1DocumentFields" : {
        "type" : "array",
        "description" : "An array of field objects associated with a document.",
        "example" : [ {
          "label" : "Was there an accident?",
          "multipleChoiceValue" : [ {
            "selected" : false,
            "value" : "Yes"
          }, {
            "selected" : true,
            "value" : "No"
          } ],
          "value" : [ {
            "selected" : false,
            "value" : "Yes"
          }, {
            "selected" : true,
            "value" : "No"
          } ],
          "valueType" : "ValueType_MultipleChoice"
        }, {
          "label" : "Number of cars involved",
          "numberValue" : 123,
          "value" : 123,
          "valueType" : "ValueType_Number"
        }, {
          "label" : "Description of Accident",
          "stringValue" : "Example text value",
          "value" : "Example text value",
          "valueType" : "ValueType_String"
        }, {
          "label" : "Images of the damaged cars",
          "photoValue" : [ {
            "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
          } ],
          "value" : [ {
            "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456",
            "uuid" : "f5271458-21f9-4a9f-a290-780c6d8840ff"
          } ],
          "valueType" : "ValueType_Photo"
        }, {
          "barcodeValue" : [ {
            "barcodeType" : "org.gs1.EAN-13",
            "barcodeValue" : "0853883003114"
          }, {
            "barcodeType" : "org.gs1.EAN-13",
            "barcodeValue" : "0036000318036"
          } ],
          "label" : "Accident Ticket Barcode",
          "value" : [ {
            "barcodeType" : "org.gs1.EAN-13",
            "barcodeValue" : "0853883003114"
          }, {
            "barcodeType" : "org.gs1.EAN-13",
            "barcodeValue" : "0036000318036"
          } ],
          "valueType" : "ValueType_Barcode"
        }, {
          "dateTimeValue" : {
            "dateTimeMs" : 1596681182972
          },
          "label" : "Today's Date",
          "value" : {
            "dateTimeMs" : 1596681182972
          },
          "valueType" : "ValueType_DateTime"
        }, {
          "label" : "Sign Signature",
          "signatureValue" : {
            "name" : "John Smith",
            "signedAtMs" : 1596681191327,
            "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
          },
          "value" : {
            "name" : "John Smith",
            "signedAtMs" : 1596681191327,
            "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456",
            "uuid" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7"
          },
          "valueType" : "ValueType_Signature"
        } ],
        "items" : {
          "$ref" : "#/components/schemas/V1DocumentFields_inner"
        }
      },
      "V1DocumentType" : {
        "required" : [ "fieldTypes", "orgId", "uuid" ],
        "type" : "object",
        "properties" : {
          "fieldTypes" : {
            "type" : "array",
            "description" : "The fields associated with this document type.",
            "items" : {
              "$ref" : "#/components/schemas/V1DocumentFieldType"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the document type.",
            "example" : "Fuel Receipt"
          },
          "orgId" : {
            "type" : "integer",
            "description" : "ID for the organization this document belongs to.",
            "format" : "int64",
            "example" : 773
          },
          "uuid" : {
            "type" : "string",
            "description" : "Universally unique identifier for the document type. Can be passed in as the `documentTypeUuid` when creating a document for this document type.",
            "example" : "4aff772c-a7bb-45e6-8e41-6a53e34feb83"
          }
        }
      },
      "V1DocumentTypes" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/V1DocumentType"
        }
      },
      "V1Documents" : {
        "type" : "object",
        "properties" : {
          "driverDocuments" : {
            "type" : "array",
            "description" : "List of documents.",
            "items" : {
              "$ref" : "#/components/schemas/V1Document"
            }
          }
        },
        "description" : "List of documents."
      },
      "V1DoorResponse" : {
        "type" : "object",
        "properties" : {
          "groupId" : {
            "type" : "integer",
            "description" : "Deprecated.",
            "format" : "int64",
            "example" : 101
          },
          "sensors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/V1DoorResponse_sensors"
            }
          }
        },
        "description" : "Contains the current door status of a sensor."
      },
      "V1DriverDailyLogResponse" : {
        "type" : "object",
        "properties" : {
          "days" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/V1DriverDailyLogResponse_days"
            }
          }
        }
      },
      "V1DriverSafetyScoreResponse" : {
        "type" : "object",
        "properties" : {
          "crashCount" : {
            "type" : "integer",
            "description" : "Crash event count",
            "example" : 0
          },
          "driverId" : {
            "type" : "integer",
            "description" : "Driver ID",
            "example" : 1234
          },
          "harshAccelCount" : {
            "type" : "integer",
            "description" : "Harsh acceleration event count",
            "example" : 1
          },
          "harshBrakingCount" : {
            "type" : "integer",
            "description" : "Harsh braking event count",
            "example" : 2
          },
          "harshEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/V1SafetyReportHarshEvent"
            }
          },
          "harshTurningCount" : {
            "type" : "integer",
            "description" : "Harsh turning event count",
            "example" : 0
          },
          "safetyScore" : {
            "type" : "integer",
            "description" : "Safety Score",
            "example" : 97
          },
          "safetyScoreRank" : {
            "type" : "string",
            "description" : "Safety Score Rank",
            "example" : "26"
          },
          "timeOverSpeedLimitMs" : {
            "type" : "integer",
            "description" : "Amount of time driven over the speed limit in milliseconds",
            "example" : 3769
          },
          "totalDistanceDrivenMeters" : {
            "type" : "integer",
            "description" : "Total distance driven in meters",
            "example" : 291836
          },
          "totalHarshEventCount" : {
            "type" : "integer",
            "description" : "Total harsh event count",
            "example" : 3
          },
          "totalTimeDrivenMs" : {
            "type" : "integer",
            "description" : "Amount of time driven in milliseconds",
            "example" : 19708293
          }
        },
        "description" : "Safety score details for a driver"
      },
      "V1DvirBase" : {
        "type" : "object",
        "properties" : {
          "authorSignature" : {
            "$ref" : "#/components/schemas/V1DvirBase_authorSignature"
          },
          "defectsCorrected" : {
            "type" : "boolean",
            "description" : "Signifies if the defects on the vehicle corrected after the DVIR is done.",
            "example" : true
          },
          "defectsNeedNotBeCorrected" : {
            "type" : "boolean",
            "description" : "Signifies if the defects on this vehicle can be ignored.",
            "example" : false
          },
          "id" : {
            "type" : "integer",
            "description" : "The id of this DVIR record.",
            "format" : "int64",
            "example" : 19
          },
          "inspectionType" : {
            "type" : "string",
            "description" : "Inspection type of the DVIR.",
            "example" : "pre trip"
          },
          "mechanicNotes" : {
            "type" : "string",
            "description" : "The mechanics notes on the DVIR.",
            "example" : "The vehicle is now safe."
          },
          "mechanicOrAgentSignature" : {
            "$ref" : "#/components/schemas/V1DvirBase_mechanicOrAgentSignature"
          },
          "nextDriverSignature" : {
            "$ref" : "#/components/schemas/V1DvirBase_nextDriverSignature"
          },
          "odometerMiles" : {
            "type" : "integer",
            "description" : "The odometer reading in miles for the vehicle when the DVIR was done.",
            "format" : "int64",
            "example" : 49912
          },
          "startedAtMs" : {
            "type" : "integer",
            "description" : "Timestamp when driver began filling out this DVIR, in UNIX milliseconds.",
            "format" : "int64",
            "example" : 1453449599999
          },
          "timeMs" : {
            "type" : "integer",
            "description" : "Timestamp of when this DVIR was signed & completed, in UNIX milliseconds.",
            "format" : "int64",
            "example" : 1453449599999
          },
          "trailerDefects" : {
            "type" : "array",
            "description" : "Defects registered for the trailer which was part of the DVIR.",
            "items" : {
              "$ref" : "#/components/schemas/V1DvirDefectBase"
            }
          },
          "trailerId" : {
            "type" : "integer",
            "description" : "The id of the trailer which was part of the DVIR.",
            "example" : 19
          },
          "trailerName" : {
            "type" : "string",
            "description" : "The name of the trailer which was part of the DVIR.",
            "example" : "Storer's Trailer 19"
          },
          "vehicle" : {
            "$ref" : "#/components/schemas/V1DvirBase_vehicle"
          },
          "vehicleCondition" : {
            "type" : "string",
            "description" : "The condition of vechile on which DVIR was done.",
            "example" : "SATISFACTORY"
          },
          "vehicleDefects" : {
            "type" : "array",
            "description" : "Defects registered for the vehicle which was part of the DVIR.",
            "items" : {
              "$ref" : "#/components/schemas/V1DvirDefectBase"
            }
          }
        }
      },
      "V1DvirDefectBase" : {
        "type" : "object",
        "properties" : {
          "comment" : {
            "type" : "string",
            "description" : "The comment describing the type of DVIR defect.",
            "example" : "Air Compressor not working"
          },
          "defectType" : {
            "type" : "string",
            "description" : "The type of DVIR defect. Possible values: [`AIR_COMPRESSOR`, `AIR_CONDITIONER`, `AIR_LINES`, `BATTERY`, `BELTS_HOSES`, `BRAKE_ACCESSORIES`, `BRAKE_CHECK`, `BRAKE_CONNECTIONS`, `BRAKES`, `CLUTCH`, `COUPLING_DEVICES`, `DEFROSTER_HEATER`, `DOORS`, `DRIVE_LINE`, `EMERGENCY_DOOR_AND_BUZZER`, `ENGINE`, `ENTRANCE_STEPS`, `EXHAUST`, `FIFTH_WHEEL`, `FIRST_AID_KIT`, `FLUID_LEVELS`, `FRAME_ASSEMBLY`, `FRONT_AXLE`, `FUEL_TANKS`, `HORN`, `INTERIOR_AND_FLOOR`, `LANDING_GEAR`, `LIGHTS`, `MIRRORS`, `MUFFLER`, `OIL_PRESSURE`, `OTHER`, `RADIATOR`, `REAR_END`, `REFLECTORS`, `ROOF`, `SAFETY_EQUIPMENT`, `STARTER`, `STEERING`, `STOP_ARM_CONTROL`, `STOP_ARM`, `SUSPENSION`, `TIRE_CHAINS`, `TIRES`, `TRANSMISSION`, `TRIP_RECORDER`, `WHEELS_RIMS`, `WINDOWS`, `WINDSHIELD_WIPERS`, `UNSET`]",
            "example" : "AIR_COMPRESSOR"
          },
          "id" : {
            "type" : "integer",
            "description" : "The id of this defect.",
            "format" : "int64",
            "example" : 18
          },
          "resolved" : {
            "type" : "boolean",
            "description" : "Signifies if this defect is resolved.",
            "example" : true
          },
          "resolvedAt" : {
            "type" : "integer",
            "description" : "Timestamp when this defect was resolved, in UNIX milliseconds.  Will not be returned if the defect is unresolved.",
            "format" : "int64",
            "example" : 1453449599999
          },
          "resolvedByDriverId" : {
            "type" : "integer",
            "description" : "ID of the driver who resolved this defect. Will not be returned if the defect is unresolved or resolvedByMechanicId is returned.",
            "format" : "int64",
            "example" : 2581
          },
          "resolvedByMechanicId" : {
            "type" : "integer",
            "description" : "ID of the mechanic who resolved this defect. Will not be returned if the defect is unresolved or resolvedByDriverId is returned.",
            "format" : "int64",
            "example" : 14849
          }
        }
      },
      "V1DvirListResponse" : {
        "type" : "object",
        "properties" : {
          "dvirs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/V1DvirBase"
            }
          }
        }
      },
      "V1ErrorResponse" : {
        "type" : "string",
        "description" : "Error message describing why the request failed."
      },
      "V1FleetVehicleLocation" : {
        "type" : "object",
        "properties" : {
          "latitude" : {
            "type" : "number",
            "description" : "The latitude of the location in degrees.",
            "format" : "double",
            "example" : 37.2
          },
          "location" : {
            "type" : "string",
            "description" : "The best effort (street,city,state) for the latitude and longitude.",
            "example" : "525 York, San Francisco, CA"
          },
          "longitude" : {
            "type" : "number",
            "description" : "The longitude of the location in degrees.",
            "format" : "double",
            "example" : -122.5
          },
          "speedMilesPerHour" : {
            "type" : "number",
            "description" : "The speed calculated from GPS that the asset was traveling at in miles per hour.",
            "format" : "double",
            "example" : 35.2
          },
          "timeMs" : {
            "type" : "number",
            "description" : "Time in Unix milliseconds since epoch when the asset was at the location.",
            "format" : "int64",
            "example" : 1535586471332
          }
        },
        "description" : "Contains the location and speed of a vehicle at a particular time"
      },
      "V1FleetVehicleLocations" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/V1FleetVehicleLocation"
        }
      },
      "V1FleetVehiclesLocations" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/V1FleetVehiclesLocations_inner"
        }
      },
      "V1HosAuthenticationLogsResponse" : {
        "type" : "object",
        "properties" : {
          "authenticationLogs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/V1HosAuthenticationLogsResponse_authenticationLogs"
            }
          }
        }
      },
      "V1HosLogsResponse" : {
        "type" : "object",
        "properties" : {
          "logs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/V1HosLogsResponse_logs"
            }
          }
        }
      },
      "V1HumidityResponse" : {
        "type" : "object",
        "properties" : {
          "groupId" : {
            "type" : "integer",
            "description" : "Deprecated.",
            "format" : "int64",
            "example" : 101
          },
          "sensors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/V1HumidityResponse_sensors"
            }
          }
        },
        "description" : "Contains the current humidity of a sensor."
      },
      "V1JobStatus" : {
        "type" : "string",
        "description" : "The state of the dispatch job.",
        "example" : "JobState_Arrived",
        "enum" : [ "JobState_Unassigned", "JobState_Scheduled", "JobState_EnRoute", "JobState_Arrived", "JobState_Completed", "JobState_Skipped" ]
      },
      "V1JobUpdateObject" : {
        "type" : "object",
        "properties" : {
          "changed_at_ms" : {
            "type" : "integer",
            "description" : "Timestamp that this event was updated, represented as Unix milliseconds since epoch.",
            "format" : "int64",
            "example" : 1462881998034
          },
          "job_id" : {
            "type" : "integer",
            "description" : "ID of the Samsara job.",
            "format" : "int64",
            "example" : 773
          },
          "job_state" : {
            "$ref" : "#/components/schemas/V1JobStatus"
          },
          "prev_job_state" : {
            "$ref" : "#/components/schemas/V1JobStatus"
          },
          "route" : {
            "$ref" : "#/components/schemas/V1DispatchRoute"
          },
          "route_id" : {
            "type" : "integer",
            "description" : "ID of the Samsara dispatch route.",
            "format" : "int64",
            "example" : 556
          }
        }
      },
      "V1Machine" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "ID of the machine.",
            "format" : "int64",
            "example" : 123
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the machine.",
            "example" : "Freezer ABC"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes about the machine",
            "example" : "This is in the left hallway behind the conveyor belt"
          }
        },
        "description" : "Contains information about a machine."
      },
      "V1MachineHistoryResponse" : {
        "type" : "object",
        "properties" : {
          "machines" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/V1MachineHistoryResponse_machines"
            }
          }
        },
        "description" : "Contains the results for a machine history request"
      },
      "V1Message" : {
        "required" : [ "driverId", "text" ],
        "type" : "object",
        "properties" : {
          "driverId" : {
            "type" : "integer",
            "description" : "ID of the driver for whom the message is sent to or sent by.",
            "format" : "int64",
            "example" : 555
          },
          "text" : {
            "type" : "string",
            "description" : "The text sent in the message.",
            "example" : "This is a message."
          }
        }
      },
      "V1MessageResponse" : {
        "required" : [ "driverId", "isRead", "sender", "sentAtMs", "text" ],
        "type" : "object",
        "properties" : {
          "driverId" : {
            "type" : "integer",
            "description" : "ID of the driver for whom the message is sent to or sent by.",
            "format" : "int64",
            "example" : 555
          },
          "isRead" : {
            "type" : "boolean",
            "description" : "True if the message was read by the recipient.",
            "example" : true
          },
          "sender" : {
            "$ref" : "#/components/schemas/V1MessageSender"
          },
          "sentAtMs" : {
            "type" : "integer",
            "description" : "The time in Unix epoch milliseconds that the message is sent to the recipient.",
            "format" : "int64",
            "example" : 1462881998034
          },
          "text" : {
            "type" : "string",
            "description" : "The text sent in the message.",
            "example" : "This is a message."
          }
        }
      },
      "V1MessageSender" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of user that is sending the message.",
            "example" : "John Doe"
          },
          "type" : {
            "type" : "string",
            "description" : "Type of user that is sending the message. It will be either dispatch or driver.",
            "example" : "dispatch"
          }
        }
      },
      "V1Messages" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/V1Message"
        }
      },
      "V1MessagesResponse" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/V1MessageResponse"
        }
      },
      "V1Pagination" : {
        "required" : [ "endCursor", "hasNextPage", "hasPrevPage", "startCursor" ],
        "type" : "object",
        "properties" : {
          "endCursor" : {
            "type" : "string",
            "description" : "Cursor identifier representing the last element in the response. This value should be used in conjunction with a subsequent request's 'startingAfter' query parameter.",
            "example" : "MTU5MTEzNjA2OTU0MzQ3"
          },
          "hasNextPage" : {
            "type" : "boolean",
            "description" : "True if there are more pages of results after this response."
          },
          "hasPrevPage" : {
            "type" : "boolean",
            "description" : "True if there are more pages of results before this response."
          },
          "startCursor" : {
            "type" : "string",
            "description" : "Cursor identifier representing the first element in the response. This value should be used in conjunction with a subsequent request's 'ending_before' query parameter.",
            "example" : "MTU5MTEzNjA2OTU0MzQ3"
          }
        }
      },
      "V1ProgramsForTheCameraResponse" : {
        "type" : "array",
        "description" : "Contains the list of Programs configured on the given Camera.",
        "items" : {
          "$ref" : "#/components/schemas/V1ProgramsForTheCameraResponse_inner"
        }
      },
      "V1SafetyReportHarshEvent" : {
        "type" : "object",
        "properties" : {
          "harshEventType" : {
            "type" : "string",
            "description" : "Type of the harsh event",
            "example" : "Harsh Braking"
          },
          "timestampMs" : {
            "type" : "integer",
            "description" : "Timestamp that the harsh event occurred in Unix milliseconds since epoch",
            "example" : 1535590776000
          },
          "vehicleId" : {
            "type" : "integer",
            "description" : "Vehicle associated with the harsh event",
            "example" : 212014918086169
          }
        },
        "description" : "List of harsh events"
      },
      "V1Sensor" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "ID of the sensor.",
            "format" : "int64",
            "example" : 123
          },
          "macAddress" : {
            "type" : "string",
            "description" : "MAC address of the sensor.",
            "example" : "11:11:11:11:11:11"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the sensor.",
            "example" : "Freezer ABC"
          }
        },
        "description" : "Contains information about a sensor."
      },
      "V1SensorHistoryResponse" : {
        "type" : "object",
        "properties" : {
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/V1SensorHistoryResponse_results"
            }
          }
        },
        "description" : "Contains the results for a sensor history request. Each result contains a timestamp and datapoint for each requested (sensor, field) pair."
      },
      "V1TemperatureResponse" : {
        "type" : "object",
        "properties" : {
          "groupId" : {
            "type" : "integer",
            "description" : "Deprecated.",
            "format" : "int64",
            "example" : 101
          },
          "sensors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/V1TemperatureResponse_sensors"
            }
          }
        },
        "description" : "Contains the current temperatures of a sensor."
      },
      "V1TrailerAssignmentResponse" : {
        "type" : "object",
        "properties" : {
          "driverId" : {
            "type" : "integer",
            "description" : "The ID of the driver associated with this trailer.",
            "format" : "int64",
            "example" : 2047
          },
          "endMs" : {
            "type" : "integer",
            "description" : "The time at which the driver ended the assignment. If the assignment is current, this value will be omitted.",
            "format" : "int64",
            "example" : 1462881998034
          },
          "startMs" : {
            "type" : "integer",
            "description" : "The time at which the driver started the assignment",
            "format" : "int64",
            "example" : 1462878398034
          }
        }
      },
      "V1TrailerAssignmentsResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/V1TrailerBase"
        }, {
          "type" : "object",
          "properties" : {
            "trailerAssignments" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/V1TrailerAssignmentResponse"
              }
            }
          }
        } ]
      },
      "V1TrailerBase" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "ID of the trailer",
            "format" : "int64",
            "example" : 2041
          },
          "name" : {
            "type" : "string",
            "description" : "Assignment trailer name (given when creating trailer via the trailer portal)",
            "format" : "string",
            "example" : "myTrailer"
          }
        }
      },
      "V1TripResponse" : {
        "type" : "object",
        "properties" : {
          "trips" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/V1TripResponse_trips"
            }
          }
        },
        "description" : "Contains the trips for the vehicle in the requested timeframe. A trip is represented as an object that contains startMs, startLocation, startAddress, startCoordinates, endMs, endLocation, endAddress and endCoordinates. Ongoing trips will be returned with 9223372036854775807 as their endMs."
      },
      "V1VehicleHarshEventResponse" : {
        "required" : [ "harshEventType", "incidentReportUrl" ],
        "type" : "object",
        "properties" : {
          "downloadForwardVideoUrl" : {
            "type" : "string",
            "description" : "URL for downloading the forward facing video",
            "example" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com/123/212123456789012/1539201872984/abC123De4-camera-video-segment-123456789.mp4?..."
          },
          "downloadInwardVideoUrl" : {
            "type" : "string",
            "description" : "URL for downloading the inward facing video",
            "example" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com/123/212123456789012/1539201872984/abC123De4-camera-video-segment-driver-123456789.mp4?..."
          },
          "downloadTrackedInwardVideoUrl" : {
            "type" : "string",
            "description" : "URL for downloading the tracked inward facing video",
            "example" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com/123/212123456789012/1539201872984/abC123De4-camera-video-segment-driver-123456789.tracked.mp4?..."
          },
          "harshEventType" : {
            "type" : "string",
            "description" : "Type of the harsh event. One of: [Crash, Harsh Acceleration, Harsh Braking, Harsh Turn, ROP Engine, ROP Brake, YC Engine, YC Brake, Harsh Event]",
            "example" : "Harsh Braking"
          },
          "incidentReportUrl" : {
            "type" : "string",
            "description" : "URL of the associated incident report page",
            "example" : "https://cloud.samsara.com/o/1234/fleet/reports/safety/vehicle/212123456789012/incident/1539201882984"
          },
          "isDistracted" : {
            "type" : "boolean",
            "description" : "Whether the driver was deemed distracted during this harsh event",
            "example" : true
          },
          "location" : {
            "$ref" : "#/components/schemas/V1VehicleHarshEventResponse_location"
          }
        },
        "description" : "Harsh event details for a vehicle"
      },
      "V1VehicleLocation" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "driverId" : {
            "type" : "integer",
            "description" : "The ID of the driver currently assigned to this vehicle.",
            "example" : 1
          },
          "heading" : {
            "type" : "number",
            "description" : "Heading in degrees.",
            "format" : "double",
            "example" : 246.42
          },
          "id" : {
            "type" : "integer",
            "description" : "ID of the vehicle.",
            "format" : "int64",
            "example" : 112
          },
          "latitude" : {
            "type" : "number",
            "description" : "Latitude in decimal degrees.",
            "format" : "double",
            "example" : 123.456
          },
          "location" : {
            "type" : "string",
            "description" : "Text representation of nearest identifiable location to (latitude, longitude) coordinates.",
            "example" : "1 Main St, Dallas, TX"
          },
          "longitude" : {
            "type" : "number",
            "description" : "Longitude in decimal degrees.",
            "format" : "double",
            "example" : 32.897
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the vehicle.",
            "example" : "Truck A7"
          },
          "odometerMeters" : {
            "type" : "integer",
            "description" : "The number of meters reported by the odometer.",
            "format" : "int64",
            "example" : 71774705
          },
          "odometerType" : {
            "type" : "string",
            "description" : "The source of data for odometerMeters. Will be either GPS or OBD",
            "example" : "GPS",
            "enum" : [ "GPS", "OBD" ]
          },
          "onTrip" : {
            "type" : "boolean",
            "description" : "Whether or not a trip is currently in progress for this vehicle. More information available via /fleet/trips endpoint.",
            "example" : true
          },
          "routeIds" : {
            "type" : "array",
            "description" : "A list of currently active route IDs that the vehicle is in.",
            "example" : [ 2244514, 2311654 ],
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "speed" : {
            "type" : "number",
            "description" : "Speed in miles per hour.",
            "format" : "double",
            "example" : 64.37
          },
          "time" : {
            "type" : "integer",
            "description" : "The time the reported location was logged, reported as a UNIX timestamp in milliseconds.",
            "example" : 1462881998034
          },
          "vin" : {
            "type" : "string",
            "description" : "Vehicle Identification Number (VIN) of the vehicle.",
            "example" : "JTNBB46KX73011966"
          }
        },
        "description" : "Contains the location, in latitude and longitude, of a vehicle."
      },
      "V1VehicleMaintenance" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "ID of the vehicle.",
            "format" : "int64",
            "example" : 112
          },
          "j1939" : {
            "$ref" : "#/components/schemas/V1VehicleMaintenance_j1939"
          },
          "passenger" : {
            "$ref" : "#/components/schemas/V1VehicleMaintenance_passenger"
          }
        },
        "description" : "Contains any J1939/Passenger engine light warnings and engine faults."
      },
      "V1VehicleSafetyScoreResponse" : {
        "type" : "object",
        "properties" : {
          "crashCount" : {
            "type" : "integer",
            "description" : "Crash event count",
            "example" : 0
          },
          "harshAccelCount" : {
            "type" : "integer",
            "description" : "Harsh acceleration event count",
            "example" : 1
          },
          "harshBrakingCount" : {
            "type" : "integer",
            "description" : "Harsh braking event count",
            "example" : 2
          },
          "harshEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/V1SafetyReportHarshEvent"
            }
          },
          "harshTurningCount" : {
            "type" : "integer",
            "description" : "Harsh turning event count",
            "example" : 0
          },
          "safetyScore" : {
            "type" : "integer",
            "description" : "Safety Score",
            "example" : 97
          },
          "safetyScoreRank" : {
            "type" : "string",
            "description" : "Safety Score Rank",
            "example" : "26"
          },
          "timeOverSpeedLimitMs" : {
            "type" : "integer",
            "description" : "Amount of time driven over the speed limit in milliseconds",
            "example" : 3769
          },
          "totalDistanceDrivenMeters" : {
            "type" : "integer",
            "description" : "Total distance driven in meters",
            "example" : 291836
          },
          "totalHarshEventCount" : {
            "type" : "integer",
            "description" : "Total harsh event count",
            "example" : 3
          },
          "totalTimeDrivenMs" : {
            "type" : "integer",
            "description" : "Amount of time driven in milliseconds",
            "example" : 19708293
          },
          "vehicleId" : {
            "type" : "integer",
            "description" : "Vehicle ID",
            "example" : 4321
          }
        },
        "description" : "Safety score details for a vehicle"
      },
      "V1VisionCamerasResponse" : {
        "type" : "array",
        "description" : "Contains the list of Cameras installed in the org.",
        "items" : {
          "$ref" : "#/components/schemas/V1VisionCamerasResponse_inner"
        }
      },
      "V1VisionRunByCameraResponse" : {
        "type" : "object",
        "properties" : {
          "cameraId" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1234512345123
          },
          "endedAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 0
          },
          "inspectionResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/V1VisionRunByCameraResponse_inspectionResults"
            }
          },
          "isOngoing" : {
            "type" : "boolean",
            "example" : true
          },
          "program" : {
            "$ref" : "#/components/schemas/V1VisionRunByCameraResponse_program"
          },
          "runSummary" : {
            "$ref" : "#/components/schemas/V1VisionRunByCameraResponse_runSummary"
          },
          "startedAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1553808606097
          }
        }
      },
      "V1VisionRunsByCameraAndProgramResponse" : {
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1234512345123
          },
          "endedAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 0
          },
          "programId" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1
          },
          "reportMetadata" : {
            "$ref" : "#/components/schemas/V1VisionRunByCameraResponse_runSummary"
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/V1VisionRunByCameraResponse_inspectionResults"
            }
          },
          "startedAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1553808606097
          }
        }
      },
      "V1VisionRunsByCameraResponse" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/V1VisionRunsByCameraResponse_inner"
        }
      },
      "V1VisionRunsResponse" : {
        "type" : "object",
        "properties" : {
          "visionRuns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/V1VisionRunsResponse_visionRuns"
            }
          }
        }
      },
      "V1VisionStepResults" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/V1VisionStepResults_inner"
        }
      },
      "V1allRouteJobUpdates" : {
        "type" : "object",
        "properties" : {
          "job_updates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/V1JobUpdateObject"
            }
          },
          "sequence_id" : {
            "type" : "string",
            "description" : "Sequence ID of the last update returned in the response",
            "example" : "eyJpZCI6MywiY3JlYXRlZF9hdCI6MTQ5OTQyOTIyMDAwMn0="
          }
        }
      },
      "Vehicle" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "auxInputType1" : {
            "$ref" : "#/components/schemas/VehicleAuxInputType1"
          },
          "auxInputType10" : {
            "$ref" : "#/components/schemas/VehicleAuxInputType10"
          },
          "auxInputType2" : {
            "$ref" : "#/components/schemas/VehicleAuxInputType2"
          },
          "auxInputType3" : {
            "$ref" : "#/components/schemas/VehicleAuxInputType3"
          },
          "auxInputType4" : {
            "$ref" : "#/components/schemas/VehicleAuxInputType4"
          },
          "auxInputType5" : {
            "$ref" : "#/components/schemas/VehicleAuxInputType5"
          },
          "auxInputType6" : {
            "$ref" : "#/components/schemas/VehicleAuxInputType6"
          },
          "auxInputType7" : {
            "$ref" : "#/components/schemas/VehicleAuxInputType7"
          },
          "auxInputType8" : {
            "$ref" : "#/components/schemas/VehicleAuxInputType8"
          },
          "auxInputType9" : {
            "$ref" : "#/components/schemas/VehicleAuxInputType9"
          },
          "cameraSerial" : {
            "$ref" : "#/components/schemas/CameraSerial"
          },
          "externalIds" : {
            "$ref" : "#/components/schemas/VehicleExternalIds"
          },
          "harshAccelerationSettingType" : {
            "$ref" : "#/components/schemas/VehicleHarshAccelerationSettingType"
          },
          "id" : {
            "$ref" : "#/components/schemas/VehicleId"
          },
          "licensePlate" : {
            "$ref" : "#/components/schemas/VehicleLicensePlate"
          },
          "make" : {
            "$ref" : "#/components/schemas/VehicleMake"
          },
          "model" : {
            "$ref" : "#/components/schemas/VehicleModel"
          },
          "name" : {
            "$ref" : "#/components/schemas/VehicleName"
          },
          "notes" : {
            "$ref" : "#/components/schemas/VehicleNotes"
          },
          "serial" : {
            "$ref" : "#/components/schemas/Serial"
          },
          "staticAssignedDriver" : {
            "$ref" : "#/components/schemas/VehicleStaticAssignedDriver"
          },
          "tags" : {
            "$ref" : "#/components/schemas/VehicleTags"
          },
          "vin" : {
            "$ref" : "#/components/schemas/VehicleVin"
          },
          "year" : {
            "$ref" : "#/components/schemas/VehicleYear"
          }
        },
        "description" : "The vehicle object."
      },
      "VehicleAssignmentObjectResponseBody" : {
        "required" : [ "assignmentType", "isPassenger", "startTime", "vehicle" ],
        "type" : "object",
        "properties" : {
          "assignmentType" : {
            "type" : "string",
            "description" : "Assignment type of the driver-vehicle assignment, indicating the provenance of the assignment. The only type of assignment supported right now is `driverApp` assignments. This list could change, so it is recommended that clients gracefully handle any types not enumerated in this list.",
            "example" : "driverApp",
            "enum" : [ "driverApp" ]
          },
          "endTime" : {
            "type" : "string",
            "description" : " An end time in RFC 3339 format. Omitted if not applicable. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "example" : "2019-06-13T19:08:25Z"
          },
          "isPassenger" : {
            "type" : "boolean",
            "description" : "Boolean indicating whether the driver is a passenger.",
            "example" : false
          },
          "startTime" : {
            "type" : "string",
            "description" : " A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "example" : "2019-06-13T19:08:25Z"
          },
          "vehicle" : {
            "$ref" : "#/components/schemas/GoaVehicleTinyResponseResponseBody"
          }
        },
        "example" : {
          "assignmentType" : "driverApp",
          "endTime" : "2019-06-13T19:08:25Z",
          "isPassenger" : false,
          "startTime" : "2019-06-13T19:08:25Z",
          "vehicle" : {
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "id" : "494123",
            "name" : "Fleet Truck #1"
          }
        }
      },
      "VehicleAuxInputType" : {
        "type" : "string",
        "description" : "The type of [auxiliary input](https://kb.samsara.com/hc/en-us/articles/232232368-Auxiliary-Inputs) configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.",
        "example" : "boom",
        "enum" : [ "none", "emergencyLights", "emergencyAlarm", "stopPaddle", "powerTakeOff", "plow", "sweeper", "salter", "reefer", "door", "boom", "auxiliaryEngine", "generator", "eightWayLights" ]
      },
      "VehicleAuxInputType1" : {
        "$ref" : "#/components/schemas/VehicleAuxInputType"
      },
      "VehicleAuxInputType10" : {
        "$ref" : "#/components/schemas/VehicleAuxInputType"
      },
      "VehicleAuxInputType2" : {
        "$ref" : "#/components/schemas/VehicleAuxInputType"
      },
      "VehicleAuxInputType3" : {
        "$ref" : "#/components/schemas/VehicleAuxInputType"
      },
      "VehicleAuxInputType4" : {
        "$ref" : "#/components/schemas/VehicleAuxInputType"
      },
      "VehicleAuxInputType5" : {
        "$ref" : "#/components/schemas/VehicleAuxInputType"
      },
      "VehicleAuxInputType6" : {
        "$ref" : "#/components/schemas/VehicleAuxInputType"
      },
      "VehicleAuxInputType7" : {
        "$ref" : "#/components/schemas/VehicleAuxInputType"
      },
      "VehicleAuxInputType8" : {
        "$ref" : "#/components/schemas/VehicleAuxInputType"
      },
      "VehicleAuxInputType9" : {
        "$ref" : "#/components/schemas/VehicleAuxInputType"
      },
      "VehicleCameraMediaObjectResponseBody" : {
        "type" : "object",
        "properties" : {
          "cameras" : {
            "type" : "array",
            "description" : "List of camera objects.",
            "example" : [ {
              "id" : "230942",
              "images" : [ {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              }, {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              }, {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              } ],
              "name" : "GTTU-ASS-UXD",
              "serial" : "CSS6-23A-HJF"
            }, {
              "id" : "230942",
              "images" : [ {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              }, {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              }, {
                "captureTime" : "2015-09-15T14:00:12-04:00",
                "imageData" : [ {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                }, {
                  "cameraView" : "`frontFacing`",
                  "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                  "urlExpiryTime" : "2019-06-13T19:08:25Z"
                } ]
              } ],
              "name" : "GTTU-ASS-UXD",
              "serial" : "CSS6-23A-HJF"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/CameraObjectResponseBody"
            }
          },
          "externalIds" : {
            "type" : "object",
            "properties" : { },
            "description" : "A map of external ids",
            "example" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "ID of the vehicle.",
            "example" : "494123"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the vehicle.",
            "example" : "H055494"
          }
        },
        "example" : {
          "cameras" : [ {
            "id" : "230942",
            "images" : [ {
              "captureTime" : "2015-09-15T14:00:12-04:00",
              "imageData" : [ {
                "cameraView" : "`frontFacing`",
                "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                "urlExpiryTime" : "2019-06-13T19:08:25Z"
              }, {
                "cameraView" : "`frontFacing`",
                "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                "urlExpiryTime" : "2019-06-13T19:08:25Z"
              }, {
                "cameraView" : "`frontFacing`",
                "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                "urlExpiryTime" : "2019-06-13T19:08:25Z"
              } ]
            }, {
              "captureTime" : "2015-09-15T14:00:12-04:00",
              "imageData" : [ {
                "cameraView" : "`frontFacing`",
                "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                "urlExpiryTime" : "2019-06-13T19:08:25Z"
              }, {
                "cameraView" : "`frontFacing`",
                "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                "urlExpiryTime" : "2019-06-13T19:08:25Z"
              }, {
                "cameraView" : "`frontFacing`",
                "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                "urlExpiryTime" : "2019-06-13T19:08:25Z"
              } ]
            }, {
              "captureTime" : "2015-09-15T14:00:12-04:00",
              "imageData" : [ {
                "cameraView" : "`frontFacing`",
                "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                "urlExpiryTime" : "2019-06-13T19:08:25Z"
              }, {
                "cameraView" : "`frontFacing`",
                "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                "urlExpiryTime" : "2019-06-13T19:08:25Z"
              }, {
                "cameraView" : "`frontFacing`",
                "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                "urlExpiryTime" : "2019-06-13T19:08:25Z"
              } ]
            } ],
            "name" : "GTTU-ASS-UXD",
            "serial" : "CSS6-23A-HJF"
          }, {
            "id" : "230942",
            "images" : [ {
              "captureTime" : "2015-09-15T14:00:12-04:00",
              "imageData" : [ {
                "cameraView" : "`frontFacing`",
                "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                "urlExpiryTime" : "2019-06-13T19:08:25Z"
              }, {
                "cameraView" : "`frontFacing`",
                "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                "urlExpiryTime" : "2019-06-13T19:08:25Z"
              }, {
                "cameraView" : "`frontFacing`",
                "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                "urlExpiryTime" : "2019-06-13T19:08:25Z"
              } ]
            }, {
              "captureTime" : "2015-09-15T14:00:12-04:00",
              "imageData" : [ {
                "cameraView" : "`frontFacing`",
                "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                "urlExpiryTime" : "2019-06-13T19:08:25Z"
              }, {
                "cameraView" : "`frontFacing`",
                "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                "urlExpiryTime" : "2019-06-13T19:08:25Z"
              }, {
                "cameraView" : "`frontFacing`",
                "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                "urlExpiryTime" : "2019-06-13T19:08:25Z"
              } ]
            }, {
              "captureTime" : "2015-09-15T14:00:12-04:00",
              "imageData" : [ {
                "cameraView" : "`frontFacing`",
                "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                "urlExpiryTime" : "2019-06-13T19:08:25Z"
              }, {
                "cameraView" : "`frontFacing`",
                "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                "urlExpiryTime" : "2019-06-13T19:08:25Z"
              }, {
                "cameraView" : "`frontFacing`",
                "url" : "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com",
                "urlExpiryTime" : "2019-06-13T19:08:25Z"
              } ]
            } ],
            "name" : "GTTU-ASS-UXD",
            "serial" : "CSS6-23A-HJF"
          } ],
          "externalIds" : {
            "maintenanceId" : "250020",
            "payrollId" : "ABFS18600"
          },
          "id" : "494123",
          "name" : "H055494"
        }
      },
      "VehicleEngineHours" : {
        "type" : "integer",
        "description" : "A manual override for the vehicle's engine hours. You may only override a vehicle's engine hours if it cannot be read from on-board diagnostics. When you provide a manual engine hours override, Samsara will begin updating a vehicle's engine hours based on when the Samsara Vehicle Gateway is recieving power or not.",
        "format" : "int64",
        "example" : 10943
      },
      "VehicleExternalIds" : {
        "type" : "object",
        "description" : "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
        "example" : {
          "maintenanceId" : "250020",
          "payrollId" : "ABFS18600"
        }
      },
      "VehicleHarshAccelerationSettingType" : {
        "type" : "string",
        "description" : "The harsh acceleration setting type. This setting influences the acceleration sensitivity from which a [harsh event](https://kb.samsara.com/hc/en-us/articles/360006938891-Harsh-Events) is triggered. **By default**, this setting is inferred by the Samsara Vehicle Gateway from the engine computer, but it may be set or updated through the Samsara Dashboard or the API at any time. If set to `off`, then no acceleration based harsh events are triggered for the vehicle.",
        "example" : "off",
        "enum" : [ "passengerCar", "lightTruck", "heavyDuty", "off", "automatic" ]
      },
      "VehicleId" : {
        "type" : "string",
        "description" : "The unique Samsara ID of the Vehicle. This is automatically generated when the Vehicle object is created. It cannot be changed.",
        "example" : "112"
      },
      "VehicleLicensePlate" : {
        "maxLength" : 12,
        "type" : "string",
        "description" : "The license plate of the Vehicle. **By default**: empty. Can be set or updated through the Samsara Dashboard or the API at any time.",
        "example" : "XHK1234"
      },
      "VehicleLocation" : {
        "required" : [ "latitude", "longitude", "time" ],
        "type" : "object",
        "properties" : {
          "heading" : {
            "$ref" : "#/components/schemas/VehicleLocationHeading"
          },
          "latitude" : {
            "$ref" : "#/components/schemas/VehicleLocationLatitude"
          },
          "longitude" : {
            "$ref" : "#/components/schemas/VehicleLocationLongitude"
          },
          "reverseGeo" : {
            "$ref" : "#/components/schemas/VehicleLocationReverseGeo"
          },
          "speed" : {
            "$ref" : "#/components/schemas/VehicleLocationSpeed"
          },
          "time" : {
            "$ref" : "#/components/schemas/VehicleLocationTime"
          }
        },
        "description" : "Vehicle location event."
      },
      "VehicleLocationHeading" : {
        "type" : "number",
        "description" : "Heading of the vehicle in degrees.",
        "format" : "double",
        "example" : 120
      },
      "VehicleLocationLatitude" : {
        "type" : "number",
        "description" : "GPS latitude represented in degrees",
        "format" : "double",
        "example" : 122.142
      },
      "VehicleLocationLongitude" : {
        "type" : "number",
        "description" : "GPS longitude represented in degrees",
        "format" : "double",
        "example" : -93.343
      },
      "VehicleLocationReverseGeo" : {
        "type" : "object",
        "properties" : {
          "formattedLocation" : {
            "type" : "string",
            "description" : "Formatted address of the reverse geocoding data.",
            "example" : "16 N Fair Oaks Ave, Pasadena, CA 91103"
          }
        },
        "description" : "Reverse geocoded information."
      },
      "VehicleLocationSpeed" : {
        "type" : "number",
        "description" : "GPS speed of the vehicle in miles per hour.",
        "format" : "double",
        "example" : 48.3
      },
      "VehicleLocationTime" : {
        "$ref" : "#/components/schemas/time"
      },
      "VehicleLocationsListResponse" : {
        "required" : [ "data", "pagination" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "description" : "A list of vehicles and an array of location events for each vehicle.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleLocationsListResponse_data"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/paginationResponse"
          }
        },
        "description" : "List of vehicle location events and pagination info."
      },
      "VehicleLocationsResponse" : {
        "required" : [ "data", "pagination" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "description" : "List of the most recent locations for the specified vehicles.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleLocationsResponse_data"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/paginationResponse"
          }
        },
        "description" : "Most recent vehicle locations and pagination info."
      },
      "VehicleMake" : {
        "maxLength" : 255,
        "type" : "string",
        "description" : "The Vehicle’s manufacturing make. Automatically read from the engine computer if available. Empty if not available. Cannot be manually set.",
        "example" : "Ford"
      },
      "VehicleModel" : {
        "maxLength" : 255,
        "type" : "string",
        "description" : "The Vehicle’s manufacturing model. Automatically read from the engine computer if available. Empty if not available. Cannot be manually set.",
        "example" : "F150"
      },
      "VehicleName" : {
        "type" : "string",
        "description" : "The human-readable name of the Vehicle. This is set by a fleet administrator and will appear in both Samsara’s cloud dashboard as well as the Samsara Driver mobile app. **By default**, this name is the serial number of the Samsara Vehicle Gateway. It can be set or updated through the Samsara Dashboard or through the API at any time.",
        "example" : "Truck A7"
      },
      "VehicleNotes" : {
        "maxLength" : 255,
        "type" : "string",
        "description" : "These are generic notes about the Vehicle. Empty by default. Can be set or updated through the Samsara Dashboard or the API at any time.",
        "example" : "These are notes about this given vehicle."
      },
      "VehicleOdometerMeters" : {
        "type" : "integer",
        "description" : "A manual override for the vehicle's odometer. You may only override a vehicle's odometer if it cannot be read from on-board diagnostics. When you provide a manual odometer override, Samsara will begin updating a vehicle's odometer using GPS distance traveled since this override was set. See [here](https://kb.samsara.com/hc/en-us/articles/115005273667) for more details.",
        "format" : "int64",
        "example" : 9182
      },
      "VehicleResponse" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Vehicle"
          }
        },
        "description" : "A single vehicle."
      },
      "VehicleStaticAssignedDriver" : {
        "$ref" : "#/components/schemas/driverTinyResponse"
      },
      "VehicleStaticAssignedDriverId" : {
        "type" : "string",
        "description" : "ID for the static assigned driver of the vehicle.",
        "example" : "123"
      },
      "VehicleStatsAmbientAirTempMilliC" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "type" : "integer",
            "description" : "The ambient air temperature reading in millidegree Celsius.",
            "format" : "int64",
            "example" : 31110
          }
        },
        "description" : "Vehicle ambient air temperature reading."
      },
      "VehicleStatsAmbientAirTempMilliCValue" : {
        "type" : "integer",
        "description" : "The ambient air temperature reading in millidegree Celsius.",
        "format" : "int64",
        "example" : 31110
      },
      "VehicleStatsAmbientAirTempMilliCWithDecoration" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "decorations" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations"
          },
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "type" : "integer",
            "description" : "The ambient air temperature reading in millidegree Celsius.",
            "format" : "int64",
            "example" : 31110
          }
        },
        "description" : "Vehicle ambient air temperature reading."
      },
      "VehicleStatsAuxInput" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "$ref" : "#/components/schemas/VehicleAuxInputType"
          },
          "time" : {
            "$ref" : "#/components/schemas/vehicleStatsAuxInputTime"
          },
          "value" : {
            "type" : "boolean",
            "description" : "Boolean indicating the state of the auxiliary equipment.",
            "example" : true
          }
        },
        "description" : "Data for auxiliary digio equipment."
      },
      "VehicleStatsAuxInputDecoration" : {
        "required" : [ "name", "value" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The type of [auxiliary input](https://kb.samsara.com/hc/en-us/articles/232232368-Auxiliary-Inputs) configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.",
            "example" : "boom",
            "enum" : [ "none", "emergencyLights", "emergencyAlarm", "stopPaddle", "powerTakeOff", "plow", "sweeper", "salter", "reefer", "door", "boom", "auxiliaryEngine", "generator", "eightWayLights" ]
          },
          "value" : {
            "$ref" : "#/components/schemas/VehicleStatsAuxInputValue"
          }
        }
      },
      "VehicleStatsAuxInputValue" : {
        "type" : "boolean",
        "description" : "Boolean indicating the state of the auxiliary equipment.",
        "example" : true
      },
      "VehicleStatsAuxInputWithDecoration" : {
        "type" : "object",
        "properties" : {
          "decorations" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations"
          },
          "name" : {
            "$ref" : "#/components/schemas/VehicleAuxInputType"
          },
          "time" : {
            "$ref" : "#/components/schemas/vehicleStatsAuxInputTime"
          },
          "value" : {
            "type" : "boolean",
            "description" : "Boolean indicating the state of the auxiliary equipment.",
            "example" : true
          }
        },
        "description" : "Data for auxiliary digio equipment."
      },
      "VehicleStatsBarometricPressurePa" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "type" : "integer",
            "description" : "The barometric pressure reading in pascals.",
            "format" : "int64",
            "example" : 99000
          }
        },
        "description" : "Vehicle barometric pressure reading."
      },
      "VehicleStatsBarometricPressurePaValue" : {
        "type" : "integer",
        "description" : "The barometric pressure reading in pascals.",
        "format" : "int64",
        "example" : 99000
      },
      "VehicleStatsBarometricPressurePaWithDecoration" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "decorations" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations"
          },
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "type" : "integer",
            "description" : "The barometric pressure reading in pascals.",
            "format" : "int64",
            "example" : 100
          }
        },
        "description" : "Vehicle barometric pressure reading."
      },
      "VehicleStatsBatteryMilliVoltsValue" : {
        "type" : "integer",
        "description" : "The battery voltage in millivolts.",
        "format" : "int64",
        "example" : 7991
      },
      "VehicleStatsBatteryVoltage" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "type" : "integer",
            "description" : "The battery voltage in millivolts.",
            "format" : "int64",
            "example" : 7991
          }
        },
        "description" : "Vehicle battery voltage reading."
      },
      "VehicleStatsBatteryVoltageWithDecoration" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "decorations" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations"
          },
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "type" : "integer",
            "description" : "The battery voltage in millivolts.",
            "format" : "int64",
            "example" : 7991
          }
        },
        "description" : "Vehicle battery voltage reading."
      },
      "VehicleStatsDecorations" : {
        "type" : "object",
        "properties" : {
          "ambientAirTemperatureMilliC" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations_ambientAirTemperatureMilliC"
          },
          "auxInput1" : {
            "$ref" : "#/components/schemas/VehicleStatsAuxInputDecoration"
          },
          "auxInput10" : {
            "$ref" : "#/components/schemas/VehicleStatsAuxInputDecoration"
          },
          "auxInput2" : {
            "$ref" : "#/components/schemas/VehicleStatsAuxInputDecoration"
          },
          "auxInput3" : {
            "$ref" : "#/components/schemas/VehicleStatsAuxInputDecoration"
          },
          "auxInput4" : {
            "$ref" : "#/components/schemas/VehicleStatsAuxInputDecoration"
          },
          "auxInput5" : {
            "$ref" : "#/components/schemas/VehicleStatsAuxInputDecoration"
          },
          "auxInput6" : {
            "$ref" : "#/components/schemas/VehicleStatsAuxInputDecoration"
          },
          "auxInput7" : {
            "$ref" : "#/components/schemas/VehicleStatsAuxInputDecoration"
          },
          "auxInput8" : {
            "$ref" : "#/components/schemas/VehicleStatsAuxInputDecoration"
          },
          "auxInput9" : {
            "$ref" : "#/components/schemas/VehicleStatsAuxInputDecoration"
          },
          "barometricPressurePa" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations_barometricPressurePa"
          },
          "batteryMilliVolts" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations_batteryMilliVolts"
          },
          "defLevelMilliPercent" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations_defLevelMilliPercent"
          },
          "ecuSpeedMph" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations_ecuSpeedMph"
          },
          "engineCoolantTemperatureMilliC" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations_engineCoolantTemperatureMilliC"
          },
          "engineLoadPercent" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations_engineLoadPercent"
          },
          "engineOilPressureKPa" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations_engineOilPressureKPa"
          },
          "engineRpm" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations_engineRpm"
          },
          "engineStates" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations_engineStates"
          },
          "faultCodes" : {
            "$ref" : "#/components/schemas/VehicleStatsFaultCodesValue"
          },
          "fuelPercents" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations_fuelPercents"
          },
          "gps" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations_gps"
          },
          "gpsDistanceMeters" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations_gpsDistanceMeters"
          },
          "gpsOdometerMeters" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations_gpsOdometerMeters"
          },
          "intakeManifoldTemperatureMilliC" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations_intakeManifoldTemperatureMilliC"
          },
          "obdEngineSeconds" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations_obdEngineSeconds"
          },
          "obdOdometerMeters" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations_obdOdometerMeters"
          },
          "tirePressure" : {
            "$ref" : "#/components/schemas/VehicleStatsTirePressures"
          }
        },
        "description" : "Decorated values for the primary vehicle stat datapoints."
      },
      "VehicleStatsDefLevelMilliPercent" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "maximum" : 99999,
            "minimum" : 0,
            "type" : "integer",
            "description" : "The Diesel Exhaust Fluid (DEF) level in milli percentage points (e.g. `99001`, `49999`, etc).",
            "format" : "int64",
            "example" : 54200
          }
        },
        "description" : "The Diesel Exhaust Fluid (DEF) milli percentage reading."
      },
      "VehicleStatsDefLevelMilliPercentValue" : {
        "maximum" : 99999,
        "minimum" : 0,
        "type" : "integer",
        "description" : "The Diesel Exhaust Fluid (DEF) level in milli percentage points (e.g. `99001`, `49999`, etc).",
        "format" : "int64",
        "example" : 54200
      },
      "VehicleStatsDefLevelMilliPercentWithDecoration" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "decorations" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations"
          },
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "maximum" : 99999,
            "minimum" : 0,
            "type" : "integer",
            "description" : "The Diesel Exhaust Fluid (DEF) level in milli percentage points (e.g. `99001`, `49999`, etc).",
            "format" : "int64",
            "example" : 54200
          }
        },
        "description" : "The Diesel Exhaust Fluid (DEF) milli percentage reading."
      },
      "VehicleStatsEcuSpeedMph" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "type" : "number",
            "description" : "The speed of the vehicle in miles per hour.",
            "format" : "double",
            "example" : 32.1
          }
        },
        "description" : "The speed of the vehicle in miles per hour, as reported by the ECU."
      },
      "VehicleStatsEcuSpeedMphValue" : {
        "type" : "number",
        "description" : "The speed of the vehicle in miles per hour, as reported by the ECU.",
        "format" : "double",
        "example" : 58.3
      },
      "VehicleStatsEcuSpeedMphWithDecoration" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "decorations" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations"
          },
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "type" : "number",
            "description" : "The speed of the vehicle in miles per hour.",
            "format" : "double",
            "example" : 32.1
          }
        },
        "description" : "The speed of the vehicle in miles per hour, as reported by the ECU."
      },
      "VehicleStatsEngineCoolantTempMilliC" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "type" : "integer",
            "description" : "The engine coolant temperature reading in millidegree Celsius.",
            "format" : "int64",
            "example" : 31110
          }
        },
        "description" : "Vehicle engine coolant temperature reading."
      },
      "VehicleStatsEngineCoolantTempMilliCValue" : {
        "type" : "integer",
        "description" : "The engine coolant temperature reading in millidegree Celsius.",
        "format" : "int64",
        "example" : 31110
      },
      "VehicleStatsEngineCoolantTempMilliCWithDecoration" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "decorations" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations"
          },
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "type" : "integer",
            "description" : "The engine coolant temperature reading in millidegree Celsius.",
            "format" : "int64",
            "example" : 31110
          }
        },
        "description" : "Vehicle engine coolant temperature reading."
      },
      "VehicleStatsEngineLoadPercent" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "type" : "integer",
            "description" : "The engine load in percentage points (e.g. `99`, `50`, etc).",
            "format" : "int64",
            "example" : 54
          }
        },
        "description" : "The engine load percentage reading."
      },
      "VehicleStatsEngineLoadPercentValue" : {
        "type" : "integer",
        "description" : "The engine load in percentage points (e.g. `99`, `50`, etc).",
        "format" : "int64",
        "example" : 54
      },
      "VehicleStatsEngineLoadPercentWithDecoration" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "decorations" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations"
          },
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "type" : "integer",
            "description" : "The engine load in percentage points (e.g. `99`, `50`, etc).",
            "format" : "int64",
            "example" : 54
          }
        },
        "description" : "The engine load percentage reading."
      },
      "VehicleStatsEngineOilPressureKPa" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "type" : "integer",
            "description" : "The engine oil pressure reading in kilopascals.",
            "format" : "int64",
            "example" : 100
          }
        },
        "description" : "Vehicle engine oil pressure reading."
      },
      "VehicleStatsEngineOilPressureKPaValue" : {
        "type" : "integer",
        "description" : "The engine oil pressure reading in kilopascals.",
        "format" : "int64",
        "example" : 100
      },
      "VehicleStatsEngineOilPressureKPaWithDecoration" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "decorations" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations"
          },
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "type" : "integer",
            "description" : "The engine oil pressure reading in kilopascals.",
            "format" : "int64",
            "example" : 100
          }
        },
        "description" : "Vehicle engine oil pressure reading."
      },
      "VehicleStatsEngineRpm" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "type" : "integer",
            "description" : "The revolutions per minute of the engine.",
            "format" : "int64",
            "example" : 1000
          }
        },
        "description" : "Vehicle engine RPM reading."
      },
      "VehicleStatsEngineRpmValue" : {
        "type" : "integer",
        "description" : "The revolutions per minute of the engine.",
        "format" : "int64",
        "example" : 1000
      },
      "VehicleStatsEngineRpmWithDecoration" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "decorations" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations"
          },
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "type" : "integer",
            "description" : "The revolutions per minute of the engine.",
            "format" : "int64",
            "example" : 1000
          }
        },
        "description" : "Vehicle engine RPM reading."
      },
      "VehicleStatsEngineState" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "$ref" : "#/components/schemas/VehicleStatsEngineStateSetting"
          }
        },
        "description" : "Vehicle engine state event."
      },
      "VehicleStatsEngineStateSetting" : {
        "type" : "string",
        "description" : "The state of the engine.",
        "example" : "On",
        "enum" : [ "Off", "On", "Idle" ]
      },
      "VehicleStatsEngineStateWithDecoration" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "decorations" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations"
          },
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "$ref" : "#/components/schemas/VehicleStatsEngineStateSetting"
          }
        },
        "description" : "Vehicle engine state event."
      },
      "VehicleStatsFaultCodes" : {
        "required" : [ "time" ],
        "type" : "object",
        "properties" : {
          "canBusType" : {
            "$ref" : "#/components/schemas/VehicleStatsFaultCodesCanBusType"
          },
          "j1939" : {
            "$ref" : "#/components/schemas/VehicleStatsFaultCodesJ1939"
          },
          "obdii" : {
            "$ref" : "#/components/schemas/VehicleStatsFaultCodesOBDII"
          },
          "time" : {
            "$ref" : "#/components/schemas/vehicleStatsAuxInputTime"
          }
        },
        "description" : "Engine fault codes read from J1939 and OBDII vehicles."
      },
      "VehicleStatsFaultCodesCanBusType" : {
        "type" : "string",
        "description" : "The CAN bus type of the vehicle.",
        "example" : "CANBUS_J1939_500"
      },
      "VehicleStatsFaultCodesIgnitionType" : {
        "type" : "string",
        "description" : "The ignition type of this passenger vehicle. Valid values are \"spark\" and \"compression\"",
        "enum" : [ "spark", "compression" ]
      },
      "VehicleStatsFaultCodesJ1939" : {
        "type" : "object",
        "properties" : {
          "checkEngineLights" : {
            "$ref" : "#/components/schemas/VehicleStatsFaultCodesJ1939Lights"
          },
          "diagnosticTroubleCodes" : {
            "$ref" : "#/components/schemas/VehicleStatsFaultCodesJ1939TroubleCodes"
          }
        },
        "description" : "Vehicle fault codes for J1939 vehicles."
      },
      "VehicleStatsFaultCodesJ1939Lights" : {
        "required" : [ "emissionsIsOn", "protectIsOn", "stopIsOn", "warningIsOn" ],
        "type" : "object",
        "properties" : {
          "emissionsIsOn" : {
            "type" : "boolean",
            "description" : "True if the MIL status is nonzero.",
            "example" : true
          },
          "protectIsOn" : {
            "type" : "boolean",
            "description" : "True if the engine protect lamp status is nonzero.",
            "example" : false
          },
          "stopIsOn" : {
            "type" : "boolean",
            "description" : "True if the red lamp status is nonzero.",
            "example" : false
          },
          "warningIsOn" : {
            "type" : "boolean",
            "description" : "True if the amber lamp status is nonzero.",
            "example" : false
          }
        },
        "description" : "Status of engine lights on J1939 vehicles."
      },
      "VehicleStatsFaultCodesJ1939TroubleCode" : {
        "required" : [ "fmiId", "milStatus", "occurrenceCount", "spnId", "txId" ],
        "type" : "object",
        "properties" : {
          "fmiDescription" : {
            "type" : "string",
            "description" : "A short description of the FMI identifier, if available.",
            "example" : "Voltage Below Normal"
          },
          "fmiId" : {
            "type" : "integer",
            "description" : "The FMI identifier.",
            "format" : "int32",
            "example" : 9
          },
          "milStatus" : {
            "type" : "integer",
            "description" : "The MIL status, indicating a check engine light.",
            "format" : "int32",
            "example" : 1
          },
          "occurrenceCount" : {
            "type" : "integer",
            "description" : "The number of times this fault has triggered.",
            "format" : "int32",
            "example" : 1
          },
          "sourceAddressName" : {
            "type" : "string",
            "description" : "The source address name corresponding to the txId",
            "example" : "Engine #1"
          },
          "spnDescription" : {
            "type" : "string",
            "description" : "A short description of the SPN identifier, if available.",
            "example" : "System Diagnostic Code #1"
          },
          "spnId" : {
            "type" : "integer",
            "description" : "The SPN identifier.",
            "format" : "int32",
            "example" : 3031
          },
          "txId" : {
            "$ref" : "#/components/schemas/VehicleStatsFaultCodesTxId"
          },
          "vendorSpecificFields" : {
            "$ref" : "#/components/schemas/VehicleStatsFaultCodesVendorSpecificFields"
          }
        },
        "description" : "Diagnostic trouble code for J1939 vehicles."
      },
      "VehicleStatsFaultCodesJ1939TroubleCodes" : {
        "type" : "array",
        "description" : "Diagnostic trouble codes for J1939 vehicles.",
        "items" : {
          "$ref" : "#/components/schemas/VehicleStatsFaultCodesJ1939TroubleCode"
        }
      },
      "VehicleStatsFaultCodesOBDII" : {
        "type" : "object",
        "properties" : {
          "checkEngineLightIsOn" : {
            "type" : "boolean",
            "description" : "True if the check engine light is illuminated (MIL status field is nonzero for any faults).",
            "example" : true
          },
          "diagnosticTroubleCodes" : {
            "type" : "array",
            "description" : "Diagnostic trouble codes for passenger vehicles.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsFaultCodesOBDIITroubleCode"
            }
          }
        },
        "description" : "Vehicle fault codes for passenger vehicles."
      },
      "VehicleStatsFaultCodesOBDIITroubleCode" : {
        "required" : [ "txId" ],
        "type" : "object",
        "properties" : {
          "confirmedDtcs" : {
            "type" : "array",
            "description" : "Confirmed DTC codes.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsFaultCodesPassengerDtc"
            }
          },
          "ignitionType" : {
            "$ref" : "#/components/schemas/VehicleStatsFaultCodesIgnitionType"
          },
          "milStatus" : {
            "type" : "boolean",
            "description" : "The MIL status, indicating a check engine light.",
            "example" : true
          },
          "monitorStatus" : {
            "$ref" : "#/components/schemas/VehicleStatsFaultCodesPassengerMonitorStatus"
          },
          "pendingDtcs" : {
            "type" : "array",
            "description" : "Pending DTC codes.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsFaultCodesPassengerDtc"
            }
          },
          "permanentDtcs" : {
            "type" : "array",
            "description" : "Permanent DTC codes.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsFaultCodesPassengerDtc"
            }
          },
          "txId" : {
            "$ref" : "#/components/schemas/VehicleStatsFaultCodesTxId"
          }
        },
        "description" : "Diagnostic trouble code for passenger vehicles."
      },
      "VehicleStatsFaultCodesPassengerDtc" : {
        "required" : [ "dtcId" ],
        "type" : "object",
        "properties" : {
          "dtcDescription" : {
            "type" : "string",
            "description" : "The DTC description, if available.",
            "example" : "Fuel Rail/System Pressure - Too Low Bank 1"
          },
          "dtcId" : {
            "type" : "integer",
            "description" : "The DTC identifier.",
            "format" : "int32",
            "example" : 135
          },
          "dtcShortCode" : {
            "type" : "string",
            "description" : "The DTC short code, if available.",
            "example" : "P0087"
          }
        },
        "description" : "Passenger vehicle DTC information"
      },
      "VehicleStatsFaultCodesPassengerMonitorStatus" : {
        "type" : "object",
        "properties" : {
          "catalyst" : {
            "$ref" : "#/components/schemas/VehicleStatsFaultCodesPassengerMonitorStatusValue"
          },
          "comprehensive" : {
            "$ref" : "#/components/schemas/VehicleStatsFaultCodesPassengerMonitorStatusValue"
          },
          "egr" : {
            "$ref" : "#/components/schemas/VehicleStatsFaultCodesPassengerMonitorStatusValue"
          },
          "evapSystem" : {
            "$ref" : "#/components/schemas/VehicleStatsFaultCodesPassengerMonitorStatusValue"
          },
          "fuel" : {
            "$ref" : "#/components/schemas/VehicleStatsFaultCodesPassengerMonitorStatusValue"
          },
          "heatedCatalyst" : {
            "$ref" : "#/components/schemas/VehicleStatsFaultCodesPassengerMonitorStatusValue"
          },
          "heatedO2Sensor" : {
            "$ref" : "#/components/schemas/VehicleStatsFaultCodesPassengerMonitorStatusValue"
          },
          "isoSaeReserved" : {
            "$ref" : "#/components/schemas/VehicleStatsFaultCodesPassengerMonitorStatusValue"
          },
          "misfire" : {
            "$ref" : "#/components/schemas/VehicleStatsFaultCodesPassengerMonitorStatusValue"
          },
          "notReadyCount" : {
            "type" : "integer",
            "description" : "Count of the number of sensors reporting N: Not Complete"
          },
          "o2Sensor" : {
            "$ref" : "#/components/schemas/VehicleStatsFaultCodesPassengerMonitorStatusValue"
          },
          "secondaryAir" : {
            "$ref" : "#/components/schemas/VehicleStatsFaultCodesPassengerMonitorStatusValue"
          }
        },
        "description" : "Readings from engine sensors"
      },
      "VehicleStatsFaultCodesPassengerMonitorStatusValue" : {
        "type" : "string",
        "description" : "Enum of monitor status:\n-U: Unsupported\n-N: Not Complete\n-R: Complete\n",
        "enum" : [ "N", "R", "U" ]
      },
      "VehicleStatsFaultCodesTxId" : {
        "type" : "integer",
        "description" : "The TX identifier.",
        "format" : "int32",
        "example" : 0
      },
      "VehicleStatsFaultCodesValue" : {
        "type" : "object",
        "properties" : {
          "canBusType" : {
            "type" : "string",
            "description" : "The CAN bus type of the vehicle.",
            "example" : "CANBUS_J1939_500"
          },
          "j1939" : {
            "$ref" : "#/components/schemas/VehicleStatsFaultCodesValue_j1939"
          },
          "obdii" : {
            "$ref" : "#/components/schemas/VehicleStatsFaultCodesValue_obdii"
          }
        },
        "description" : "Fault codes for the vehicle"
      },
      "VehicleStatsFaultCodesVendorSpecificFields" : {
        "type" : "object",
        "properties" : {
          "dtcDescription" : {
            "type" : "string",
            "description" : "The DTC description, if available.",
            "example" : "false"
          },
          "repairInstructionsUrl" : {
            "type" : "string",
            "description" : "A link to vendor repair instructions, if available.",
            "example" : "false"
          }
        },
        "description" : "Vendor specific data for J1939 vehicles."
      },
      "VehicleStatsFaultCodesWithDecoration" : {
        "required" : [ "time" ],
        "type" : "object",
        "properties" : {
          "canBusType" : {
            "$ref" : "#/components/schemas/VehicleStatsFaultCodesCanBusType"
          },
          "decorations" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations"
          },
          "j1939" : {
            "$ref" : "#/components/schemas/VehicleStatsFaultCodesJ1939"
          },
          "obdii" : {
            "$ref" : "#/components/schemas/VehicleStatsFaultCodesOBDII"
          },
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          }
        },
        "description" : "Engine fault codes read from J1939 and OBDII vehicles."
      },
      "VehicleStatsFuelPercent" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "type" : "integer",
            "description" : "The engine fuel level in percentage points (e.g. `99`, `50`, etc).",
            "format" : "int64",
            "example" : 54
          }
        },
        "description" : "Vehicle fuel percentage reading."
      },
      "VehicleStatsFuelPercentValue" : {
        "type" : "integer",
        "description" : "The engine fuel level in percentage points (e.g. `99`, `50`, etc).",
        "format" : "int64",
        "example" : 54
      },
      "VehicleStatsFuelPercentWithDecoration" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "decorations" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations"
          },
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "type" : "integer",
            "description" : "The engine fuel level in percentage points (e.g. `99`, `50`, etc).",
            "format" : "int64",
            "example" : 54
          }
        },
        "description" : "Vehicle fuel percentage reading."
      },
      "VehicleStatsGps" : {
        "required" : [ "latitude", "longitude", "time" ],
        "type" : "object",
        "properties" : {
          "headingDegrees" : {
            "$ref" : "#/components/schemas/VehicleLocationHeading"
          },
          "latitude" : {
            "$ref" : "#/components/schemas/VehicleLocationLatitude"
          },
          "longitude" : {
            "$ref" : "#/components/schemas/VehicleLocationLongitude"
          },
          "reverseGeo" : {
            "$ref" : "#/components/schemas/VehicleLocationReverseGeo"
          },
          "speedMilesPerHour" : {
            "$ref" : "#/components/schemas/VehicleLocationSpeed"
          },
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          }
        },
        "description" : "GPS location data for the vehicle."
      },
      "VehicleStatsGpsDistanceMeters" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "type" : "number",
            "description" : "Number of meters the vehicle has traveled since the gateway was installed, based on GPS calculations.",
            "format" : "double",
            "example" : 81029.591434899
          }
        },
        "description" : "Vehicle GPS distance event."
      },
      "VehicleStatsGpsDistanceMetersValue" : {
        "type" : "number",
        "description" : "Number of meters the vehicle has traveled since the gateway was installed, based on GPS calculations.",
        "format" : "double",
        "example" : 81029.591434899
      },
      "VehicleStatsGpsDistanceMetersWithDecoration" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "decorations" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations"
          },
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "type" : "number",
            "description" : "Number of meters the vehicle has traveled since the gateway was installed, based on GPS calculations.",
            "format" : "double",
            "example" : 81029.591434899
          }
        },
        "description" : "Vehicle GPS distance event."
      },
      "VehicleStatsGpsOdometerMeters" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "type" : "integer",
            "description" : "Number of meters the vehicle has traveled according to the GPS calculations and the manually-specified odometer reading.",
            "format" : "int64",
            "example" : 14010293
          }
        },
        "description" : "Vehicle GPS odometer event."
      },
      "VehicleStatsGpsOdometerMetersValue" : {
        "type" : "integer",
        "description" : "Number of meters the vehicle has traveled according to the GPS calculations and the manually-specified odometer reading.",
        "format" : "int64",
        "example" : 14010293
      },
      "VehicleStatsGpsOdometerMetersWithDecoration" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "decorations" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations"
          },
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "type" : "integer",
            "description" : "Number of meters the vehicle has traveled according to the GPS calculations and the manually-specified odometer reading.",
            "format" : "int64",
            "example" : 14010293
          }
        },
        "description" : "Vehicle GPS odometer event."
      },
      "VehicleStatsIntakeManifoldTempMilliC" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "type" : "integer",
            "description" : "The intake manifold temperature reading in millidegree Celsius.",
            "format" : "int64",
            "example" : 88000
          }
        },
        "description" : "Vehicle intake manifold temperature reading."
      },
      "VehicleStatsIntakeManifoldTempMilliCValue" : {
        "type" : "integer",
        "description" : "The intake manifold temperature reading in millidegree Celsius.",
        "format" : "int64",
        "example" : 88000
      },
      "VehicleStatsIntakeManifoldTempMilliCWithDecoration" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "decorations" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations"
          },
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "type" : "integer",
            "description" : "The intake manifold temperature reading in millidegree Celsius.",
            "format" : "int64",
            "example" : 88000
          }
        },
        "description" : "Vehicle intake manifold temperature reading."
      },
      "VehicleStatsListGps" : {
        "required" : [ "latitude", "longitude", "time" ],
        "type" : "object",
        "properties" : {
          "decorations" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations"
          },
          "headingDegrees" : {
            "$ref" : "#/components/schemas/VehicleLocationHeading"
          },
          "latitude" : {
            "$ref" : "#/components/schemas/VehicleLocationLatitude"
          },
          "longitude" : {
            "$ref" : "#/components/schemas/VehicleLocationLongitude"
          },
          "reverseGeo" : {
            "$ref" : "#/components/schemas/VehicleLocationReverseGeo"
          },
          "speedMilesPerHour" : {
            "$ref" : "#/components/schemas/VehicleLocationSpeed"
          },
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          }
        },
        "description" : "GPS location data for the vehicle."
      },
      "VehicleStatsListResponse" : {
        "required" : [ "data", "pagination" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "description" : "A list of vehicles and an array of stat events for each vehicle.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsListResponse_data"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/paginationResponse"
          }
        },
        "description" : "List of vehicle stat events and pagination info."
      },
      "VehicleStatsListSyntheticEngineSeconds" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "decorations" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations"
          },
          "time" : {
            "$ref" : "#/components/schemas/vehicleStatsAuxInputTime"
          },
          "value" : {
            "$ref" : "#/components/schemas/VehicleStatsSyntheticEngineSecondsValue"
          }
        },
        "description" : "A list of synthetic engine seconds for the vehicle."
      },
      "VehicleStatsNfcCardScan" : {
        "required" : [ "card", "time" ],
        "type" : "object",
        "properties" : {
          "card" : {
            "$ref" : "#/components/schemas/VehicleStatsNfcCardScan_card"
          },
          "time" : {
            "$ref" : "#/components/schemas/vehicleStatsAuxInputTime"
          }
        },
        "description" : "Data for the nfc card and the time that it was scanned."
      },
      "VehicleStatsNfcCardScanWithDecoration" : {
        "required" : [ "card", "time" ],
        "type" : "object",
        "properties" : {
          "card" : {
            "$ref" : "#/components/schemas/VehicleStatsNfcCardScan_card"
          },
          "decorations" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations"
          },
          "time" : {
            "$ref" : "#/components/schemas/vehicleStatsAuxInputTime"
          }
        },
        "description" : "Data for the nfc card and the time that it was scanned."
      },
      "VehicleStatsObdEngineSeconds" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "type" : "integer",
            "description" : "Number of seconds the vehicle's engine has been on according to the on-board diagnostics.",
            "format" : "int64",
            "example" : 9723103
          }
        },
        "description" : "Vehicle OBD engine seconds reading."
      },
      "VehicleStatsObdEngineSecondsValue" : {
        "type" : "integer",
        "description" : "Number of seconds the vehicle's engine has been on according to the on-board diagnostics.",
        "format" : "int64",
        "example" : 9723103
      },
      "VehicleStatsObdEngineSecondsWithDecoration" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "decorations" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations"
          },
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "type" : "integer",
            "description" : "Number of seconds the vehicle's engine has been on according to the on-board diagnostics.",
            "format" : "int64",
            "example" : 9723103
          }
        },
        "description" : "Vehicle OBD engine seconds reading."
      },
      "VehicleStatsObdOdometerMeters" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "type" : "integer",
            "description" : "Number of meters the vehicle has traveled according to the on-board diagnostics.",
            "format" : "int64",
            "example" : 14010293
          }
        },
        "description" : "Vehicle OBD odometer reading."
      },
      "VehicleStatsObdOdometerMetersValue" : {
        "type" : "integer",
        "description" : "Number of meters the vehicle has traveled according to the on-board diagnostics.",
        "format" : "int64",
        "example" : 14010293
      },
      "VehicleStatsObdOdometerMetersWithDecoration" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "decorations" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations"
          },
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "type" : "integer",
            "description" : "Number of meters the vehicle has traveled according to the on-board diagnostics.",
            "format" : "int64",
            "example" : 14010293
          }
        },
        "description" : "Vehicle OBD odometer reading."
      },
      "VehicleStatsResponse" : {
        "required" : [ "data", "pagination" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "description" : "List of vehicles and a snapshot of the request stats.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsResponse_data"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/paginationResponse"
          }
        },
        "description" : "Vehicle stats snapshot and pagination info."
      },
      "VehicleStatsSyntheticEngineSeconds" : {
        "required" : [ "time", "value" ],
        "type" : "object",
        "properties" : {
          "decorations" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations"
          },
          "time" : {
            "$ref" : "#/components/schemas/vehicleStatsAuxInputTime"
          },
          "value" : {
            "$ref" : "#/components/schemas/VehicleStatsSyntheticEngineSecondsValue"
          }
        },
        "description" : "Data for the synthetic engine seconds for the vehicle"
      },
      "VehicleStatsSyntheticEngineSecondsValue" : {
        "type" : "integer",
        "description" : "Stats for the number of seconds the vehicle's engine has been on, calculated based on a manually-specified engine seconds reading and the number of seconds the vehicle has been on according to the engine state changes reported to the vehicle gateway since that reading was set. This stat will not be present for any vehicle that does not have the engine seconds reading set. The engine seconds reading can be set from the UI on the vehicle details page.",
        "format" : "int64",
        "example" : 14010293
      },
      "VehicleStatsTime" : {
        "$ref" : "#/components/schemas/time"
      },
      "VehicleStatsTirePressure" : {
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "$ref" : "#/components/schemas/VehicleStatsTirePressures"
          }
        },
        "description" : "Vehicle tire pressure readings."
      },
      "VehicleStatsTirePressureWithDecoration" : {
        "type" : "object",
        "properties" : {
          "decorations" : {
            "$ref" : "#/components/schemas/VehicleStatsDecorations"
          },
          "time" : {
            "$ref" : "#/components/schemas/VehicleStatsTime"
          },
          "value" : {
            "$ref" : "#/components/schemas/VehicleStatsTirePressures"
          }
        },
        "description" : "Vehicle tire pressure readings."
      },
      "VehicleStatsTirePressures" : {
        "type" : "object",
        "properties" : {
          "backLeftTirePressureKPa" : {
            "type" : "integer",
            "description" : "The tire pressure of the rear left tire as seen when standing behind the vehicle in kilopascals.",
            "format" : "int64",
            "example" : 200
          },
          "backRightTirePressureKPa" : {
            "type" : "integer",
            "description" : "The tire pressure of the rear right tire as seen when standing behind the vehicle in kilopascals.",
            "format" : "int64",
            "example" : 200
          },
          "frontLeftTirePressureKPa" : {
            "type" : "integer",
            "description" : "The tire pressure of the front left tire as seen when standing behind the vehicle in kilopascals.",
            "format" : "int64",
            "example" : 200
          },
          "frontRightTirePressureKPa" : {
            "type" : "integer",
            "description" : "The tire pressure of the front right tire as seen when standing behind the vehicle in kilopascals.",
            "format" : "int64",
            "example" : 200
          }
        },
        "description" : "Tire pressure readings for each of four tires in kilopascals."
      },
      "VehicleSummary" : {
        "type" : "object",
        "properties" : {
          "distanceDrivenMeters" : {
            "$ref" : "#/components/schemas/DistanceDrivenMeters"
          },
          "driveTimeDurationMs" : {
            "$ref" : "#/components/schemas/DriveTimeDurationMs"
          },
          "fuelConsumedMl" : {
            "$ref" : "#/components/schemas/FuelConsumedMl"
          },
          "idleTimeDurationMs" : {
            "$ref" : "#/components/schemas/IdleTimeDurationMs"
          },
          "powerTakeOffDurationMs" : {
            "$ref" : "#/components/schemas/PowerTakeOffDurationMs"
          },
          "vehicle" : {
            "$ref" : "#/components/schemas/vehicleTinyResponse"
          }
        }
      },
      "VehicleTagIds" : {
        "type" : "array",
        "description" : "An array of IDs of tags to associate with this vehicle.",
        "items" : {
          "type" : "string",
          "example" : "321"
        }
      },
      "VehicleTags" : {
        "type" : "array",
        "description" : "The list of [tags](https://kb.samsara.com/hc/en-us/articles/360026674631-Using-Tags-and-Tag-Nesting) associated with the Vehicle. **By default**: empty. Can be set or updated through the Samsara Dashboard or the API at any time.",
        "items" : {
          "$ref" : "#/components/schemas/tagTinyResponse"
        }
      },
      "VehicleVin" : {
        "maxLength" : 17,
        "minLength" : 11,
        "type" : "string",
        "description" : "The VIN of the Vehicle. Most of the time, this will be automatically read from the engine computer by the Samsara Vehicle Gateway. It will be empty if it cannot be read. It can be set or updated through the Samsara Dashboard or the API at any time.",
        "example" : "1FUJA6BD31LJ09646"
      },
      "VehicleYear" : {
        "type" : "string",
        "description" : "The Vehicle’s manufacturing model. Automatically read from the engine computer if available. Empty if not available. Cannot be manually set.",
        "example" : "2008"
      },
      "VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsBadRequestResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Invalid value for parameter."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "Bad Request parameters",
        "example" : {
          "message" : "Invalid value for parameter.",
          "requestId" : "8916e1c1"
        }
      },
      "VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsInternalErrorResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Failed to execute GraphQL query."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "An internal server error occurred",
        "example" : {
          "message" : "Failed to execute GraphQL query.",
          "requestId" : "8916e1c1"
        }
      },
      "VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsNotFoundResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Object not found."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "Resource not found",
        "example" : {
          "message" : "Object not found.",
          "requestId" : "8916e1c1"
        }
      },
      "VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsNotImplementedResponseBody" : {
        "required" : [ "message", "requestId" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Message of error",
            "example" : "Not implemented."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request ID; used when reaching out to support for issues with requests.",
            "example" : "8916e1c1"
          }
        },
        "description" : "Requested endpoint is not yet implemented",
        "example" : {
          "message" : "Not implemented.",
          "requestId" : "8916e1c1"
        }
      },
      "VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsResponseBody" : {
        "required" : [ "data", "pagination" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "description" : "List of vehicles and their driver assignments.",
            "example" : [ {
              "driverAssignments" : [ {
                "assignmentType" : "driverApp",
                "driver" : {
                  "externalIds" : {
                    "maintenanceId" : "250020",
                    "payrollId" : "ABFS18600"
                  },
                  "id" : "45646",
                  "name" : "Driver Bob"
                },
                "endTime" : "2019-06-13T19:08:25Z",
                "isPassenger" : false,
                "startTime" : "2019-06-13T19:08:25Z"
              }, {
                "assignmentType" : "driverApp",
                "driver" : {
                  "externalIds" : {
                    "maintenanceId" : "250020",
                    "payrollId" : "ABFS18600"
                  },
                  "id" : "45646",
                  "name" : "Driver Bob"
                },
                "endTime" : "2019-06-13T19:08:25Z",
                "isPassenger" : false,
                "startTime" : "2019-06-13T19:08:25Z"
              } ],
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "494123",
              "name" : "Bus-123"
            }, {
              "driverAssignments" : [ {
                "assignmentType" : "driverApp",
                "driver" : {
                  "externalIds" : {
                    "maintenanceId" : "250020",
                    "payrollId" : "ABFS18600"
                  },
                  "id" : "45646",
                  "name" : "Driver Bob"
                },
                "endTime" : "2019-06-13T19:08:25Z",
                "isPassenger" : false,
                "startTime" : "2019-06-13T19:08:25Z"
              }, {
                "assignmentType" : "driverApp",
                "driver" : {
                  "externalIds" : {
                    "maintenanceId" : "250020",
                    "payrollId" : "ABFS18600"
                  },
                  "id" : "45646",
                  "name" : "Driver Bob"
                },
                "endTime" : "2019-06-13T19:08:25Z",
                "isPassenger" : false,
                "startTime" : "2019-06-13T19:08:25Z"
              } ],
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "494123",
              "name" : "Bus-123"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/VehiclesDriverAssignmentsObjectResponseBody"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/GoaPaginationResponseResponseBody"
          }
        },
        "example" : {
          "data" : [ {
            "driverAssignments" : [ {
              "assignmentType" : "driverApp",
              "driver" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "45646",
                "name" : "Driver Bob"
              },
              "endTime" : "2019-06-13T19:08:25Z",
              "isPassenger" : false,
              "startTime" : "2019-06-13T19:08:25Z"
            }, {
              "assignmentType" : "driverApp",
              "driver" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "45646",
                "name" : "Driver Bob"
              },
              "endTime" : "2019-06-13T19:08:25Z",
              "isPassenger" : false,
              "startTime" : "2019-06-13T19:08:25Z"
            } ],
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "id" : "494123",
            "name" : "Bus-123"
          }, {
            "driverAssignments" : [ {
              "assignmentType" : "driverApp",
              "driver" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "45646",
                "name" : "Driver Bob"
              },
              "endTime" : "2019-06-13T19:08:25Z",
              "isPassenger" : false,
              "startTime" : "2019-06-13T19:08:25Z"
            }, {
              "assignmentType" : "driverApp",
              "driver" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "45646",
                "name" : "Driver Bob"
              },
              "endTime" : "2019-06-13T19:08:25Z",
              "isPassenger" : false,
              "startTime" : "2019-06-13T19:08:25Z"
            } ],
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "id" : "494123",
            "name" : "Bus-123"
          } ],
          "pagination" : {
            "endCursor" : "MjkY",
            "hasNextPage" : true
          }
        }
      },
      "VehiclesDriverAssignmentsObjectResponseBody" : {
        "required" : [ "driverAssignments", "id" ],
        "type" : "object",
        "properties" : {
          "driverAssignments" : {
            "type" : "array",
            "description" : "List of driver assignment objects.",
            "example" : [ {
              "assignmentType" : "driverApp",
              "driver" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "45646",
                "name" : "Driver Bob"
              },
              "endTime" : "2019-06-13T19:08:25Z",
              "isPassenger" : false,
              "startTime" : "2019-06-13T19:08:25Z"
            }, {
              "assignmentType" : "driverApp",
              "driver" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "45646",
                "name" : "Driver Bob"
              },
              "endTime" : "2019-06-13T19:08:25Z",
              "isPassenger" : false,
              "startTime" : "2019-06-13T19:08:25Z"
            }, {
              "assignmentType" : "driverApp",
              "driver" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "45646",
                "name" : "Driver Bob"
              },
              "endTime" : "2019-06-13T19:08:25Z",
              "isPassenger" : false,
              "startTime" : "2019-06-13T19:08:25Z"
            }, {
              "assignmentType" : "driverApp",
              "driver" : {
                "externalIds" : {
                  "maintenanceId" : "250020",
                  "payrollId" : "ABFS18600"
                },
                "id" : "45646",
                "name" : "Driver Bob"
              },
              "endTime" : "2019-06-13T19:08:25Z",
              "isPassenger" : false,
              "startTime" : "2019-06-13T19:08:25Z"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/DriverAssignmentObjectResponseBody"
            }
          },
          "externalIds" : {
            "type" : "object",
            "properties" : { },
            "description" : "A map of external ids",
            "example" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "ID of the vehicle.",
            "example" : "494123"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the vehicle.",
            "example" : "Bus-123"
          }
        },
        "example" : {
          "driverAssignments" : [ {
            "assignmentType" : "driverApp",
            "driver" : {
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "45646",
              "name" : "Driver Bob"
            },
            "endTime" : "2019-06-13T19:08:25Z",
            "isPassenger" : false,
            "startTime" : "2019-06-13T19:08:25Z"
          }, {
            "assignmentType" : "driverApp",
            "driver" : {
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "45646",
              "name" : "Driver Bob"
            },
            "endTime" : "2019-06-13T19:08:25Z",
            "isPassenger" : false,
            "startTime" : "2019-06-13T19:08:25Z"
          }, {
            "assignmentType" : "driverApp",
            "driver" : {
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "45646",
              "name" : "Driver Bob"
            },
            "endTime" : "2019-06-13T19:08:25Z",
            "isPassenger" : false,
            "startTime" : "2019-06-13T19:08:25Z"
          }, {
            "assignmentType" : "driverApp",
            "driver" : {
              "externalIds" : {
                "maintenanceId" : "250020",
                "payrollId" : "ABFS18600"
              },
              "id" : "45646",
              "name" : "Driver Bob"
            },
            "endTime" : "2019-06-13T19:08:25Z",
            "isPassenger" : false,
            "startTime" : "2019-06-13T19:08:25Z"
          } ],
          "externalIds" : {
            "maintenanceId" : "250020",
            "payrollId" : "ABFS18600"
          },
          "id" : "494123",
          "name" : "Bus-123"
        }
      },
      "attributeTiny" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The samsara id of the attribute object.",
            "example" : "123e4567-e89b-12d3-a456-426614174000"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of attribute.",
            "example" : "License Certifications"
          },
          "numberValues" : {
            "type" : "array",
            "description" : "Number values that are associated with this attribute.",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "stringValues" : {
            "type" : "array",
            "description" : "String values that are associated with this attribute.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "A minified attribute."
      },
      "barcodeValueObjectResponseBody" : {
        "type" : "object",
        "properties" : {
          "barcodeType" : {
            "type" : "string",
            "description" : "The barcode type that was scanned.",
            "example" : "org.gs1.EAN-13"
          },
          "barcodeValue" : {
            "type" : "string",
            "description" : "The captured barcode value.",
            "example" : "0853883003114"
          }
        },
        "example" : {
          "barcodeType" : "org.gs1.EAN-13",
          "barcodeValue" : "0853883003114"
        }
      },
      "conditionalFieldSectionObjectResponseBody" : {
        "type" : "object",
        "properties" : {
          "conditionalFieldFirstIndex" : {
            "type" : "integer",
            "description" : "The index of the first conditional field associated with the triggeringFieldValue in the fieldTypes list.",
            "format" : "int64",
            "example" : 2099372702724875300
          },
          "conditionalFieldLastIndex" : {
            "type" : "integer",
            "description" : "The index of the last conditional field associated with the triggeringFieldValue in the fieldTypes list.",
            "format" : "int64",
            "example" : 6052484663396989000
          },
          "triggeringFieldIndex" : {
            "type" : "integer",
            "description" : "The index of the multiple choice field in the fieldTypes list that triggers one or more conditional fields.",
            "format" : "int64",
            "example" : 2382803277280539600
          },
          "triggeringFieldValue" : {
            "type" : "string",
            "description" : "The multiple choice option value that triggers the conditional fields.",
            "example" : "Nulla magnam."
          }
        },
        "example" : {
          "conditionalFieldFirstIndex" : 4345317278643067000,
          "conditionalFieldLastIndex" : 5164889522017101000,
          "triggeringFieldIndex" : 8570402441294513000,
          "triggeringFieldValue" : "Exercitationem officiis."
        }
      },
      "contactTinyResponse" : {
        "type" : "object",
        "properties" : {
          "firstName" : {
            "type" : "string",
            "description" : "First name of the contact.",
            "example" : "Jane"
          },
          "id" : {
            "type" : "string",
            "description" : "ID of the contact.",
            "example" : "22408"
          },
          "lastName" : {
            "type" : "string",
            "description" : "Last name of the contact.",
            "example" : "Jones"
          }
        },
        "description" : "A minified contact object"
      },
      "dateTimeValueObjectResponseBody" : {
        "type" : "object",
        "properties" : {
          "dateTime" : {
            "type" : "string",
            "description" : "Date time value inin RFC 3339 format.",
            "format" : "date-time",
            "example" : "1998-06-03T07:37:04Z"
          }
        },
        "example" : {
          "dateTime" : "1995-09-17T19:16:28Z"
        }
      },
      "documentResponseObjectResponseBody" : {
        "required" : [ "createdAtTime", "documentType", "driver", "fields", "id", "state" ],
        "type" : "object",
        "properties" : {
          "conditionalFieldSections" : {
            "type" : "array",
            "description" : "List of the document conditional field sections.",
            "example" : [ {
              "conditionalFieldFirstIndex" : 2949691048040286700,
              "conditionalFieldLastIndex" : 5188021910068834000,
              "triggeringFieldIndex" : 6312989348082117000,
              "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
            }, {
              "conditionalFieldFirstIndex" : 2949691048040286700,
              "conditionalFieldLastIndex" : 5188021910068834000,
              "triggeringFieldIndex" : 6312989348082117000,
              "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
            }, {
              "conditionalFieldFirstIndex" : 2949691048040286700,
              "conditionalFieldLastIndex" : 5188021910068834000,
              "triggeringFieldIndex" : 6312989348082117000,
              "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
            } ],
            "items" : {
              "$ref" : "#/components/schemas/conditionalFieldSectionObjectResponseBody"
            }
          },
          "createdAtTime" : {
            "type" : "string",
            "description" : "Time the document was created in RFC 3339 format.",
            "format" : "date-time",
            "example" : "1975-04-19T02:09:39Z"
          },
          "documentType" : {
            "$ref" : "#/components/schemas/GoaDocumentTypeTinyResponseResponseBody"
          },
          "driver" : {
            "$ref" : "#/components/schemas/GoaDriverTinyResponseResponseBody"
          },
          "fields" : {
            "type" : "array",
            "description" : "The fields associated with this document.",
            "example" : [ {
              "label" : "Load weight",
              "type" : "scannedDocument",
              "value" : {
                "barcodeValue" : {
                  "barcodeType" : "org.gs1.EAN-13",
                  "barcodeValue" : "0853883003114"
                },
                "dateTimeValue" : {
                  "dateTime" : "1988-11-10T02:42:05Z"
                },
                "multipleChoiceValue" : {
                  "selected" : false,
                  "value" : "Yes"
                },
                "numberValue" : 123,
                "photoValue" : {
                  "id" : "f5271458-21f9-4a9f-a290-780c6d8840ff",
                  "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                },
                "signatureValue" : {
                  "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                  "name" : "John Smith",
                  "signedAtTime" : "1996-02-21T06:57:25Z",
                  "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                },
                "stringValue" : "Red Truck"
              }
            }, {
              "label" : "Load weight",
              "type" : "scannedDocument",
              "value" : {
                "barcodeValue" : {
                  "barcodeType" : "org.gs1.EAN-13",
                  "barcodeValue" : "0853883003114"
                },
                "dateTimeValue" : {
                  "dateTime" : "1988-11-10T02:42:05Z"
                },
                "multipleChoiceValue" : {
                  "selected" : false,
                  "value" : "Yes"
                },
                "numberValue" : 123,
                "photoValue" : {
                  "id" : "f5271458-21f9-4a9f-a290-780c6d8840ff",
                  "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                },
                "signatureValue" : {
                  "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                  "name" : "John Smith",
                  "signedAtTime" : "1996-02-21T06:57:25Z",
                  "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
                },
                "stringValue" : "Red Truck"
              }
            } ],
            "items" : {
              "$ref" : "#/components/schemas/fieldObjectResponseBody"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "Universally unique identifier for the document.",
            "example" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the document.",
            "example" : "Dropoff Slip 123"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes on the document.",
            "example" : "Missing a crate"
          },
          "routeStop" : {
            "$ref" : "#/components/schemas/GoaRouteTinyResponseResponseBody"
          },
          "state" : {
            "type" : "string",
            "description" : "The condition of the document created for the driver. Can be either Required or Submitted. Required documents are pre-populated documents for the Driver to fill out in the Driver App and have not yet been submitted. Submitted documents have been submitted by the driver in the Driver App. Archived documents have been archived by the admin in the cloud dashboard.",
            "example" : "required",
            "enum" : [ "submitted", "required", "archived" ]
          },
          "updatedAtTime" : {
            "type" : "string",
            "description" : "Time the document was updated in RFC 3339 format.",
            "format" : "date-time",
            "example" : "1974-11-28T11:17:14Z"
          },
          "vehicle" : {
            "$ref" : "#/components/schemas/GoaVehicleTinyResponseResponseBody"
          }
        },
        "example" : {
          "conditionalFieldSections" : [ {
            "conditionalFieldFirstIndex" : 2949691048040286700,
            "conditionalFieldLastIndex" : 5188021910068834000,
            "triggeringFieldIndex" : 6312989348082117000,
            "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
          }, {
            "conditionalFieldFirstIndex" : 2949691048040286700,
            "conditionalFieldLastIndex" : 5188021910068834000,
            "triggeringFieldIndex" : 6312989348082117000,
            "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
          }, {
            "conditionalFieldFirstIndex" : 2949691048040286700,
            "conditionalFieldLastIndex" : 5188021910068834000,
            "triggeringFieldIndex" : 6312989348082117000,
            "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
          }, {
            "conditionalFieldFirstIndex" : 2949691048040286700,
            "conditionalFieldLastIndex" : 5188021910068834000,
            "triggeringFieldIndex" : 6312989348082117000,
            "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
          } ],
          "createdAtTime" : "1995-12-05T01:29:53Z",
          "documentType" : {
            "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
            "name" : "Fleet Truck List"
          },
          "driver" : {
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "id" : "45646",
            "name" : "Driver Bob"
          },
          "fields" : [ {
            "label" : "Load weight",
            "type" : "scannedDocument",
            "value" : {
              "barcodeValue" : {
                "barcodeType" : "org.gs1.EAN-13",
                "barcodeValue" : "0853883003114"
              },
              "dateTimeValue" : {
                "dateTime" : "1988-11-10T02:42:05Z"
              },
              "multipleChoiceValue" : {
                "selected" : false,
                "value" : "Yes"
              },
              "numberValue" : 123,
              "photoValue" : {
                "id" : "f5271458-21f9-4a9f-a290-780c6d8840ff",
                "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
              },
              "signatureValue" : {
                "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                "name" : "John Smith",
                "signedAtTime" : "1996-02-21T06:57:25Z",
                "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
              },
              "stringValue" : "Red Truck"
            }
          }, {
            "label" : "Load weight",
            "type" : "scannedDocument",
            "value" : {
              "barcodeValue" : {
                "barcodeType" : "org.gs1.EAN-13",
                "barcodeValue" : "0853883003114"
              },
              "dateTimeValue" : {
                "dateTime" : "1988-11-10T02:42:05Z"
              },
              "multipleChoiceValue" : {
                "selected" : false,
                "value" : "Yes"
              },
              "numberValue" : 123,
              "photoValue" : {
                "id" : "f5271458-21f9-4a9f-a290-780c6d8840ff",
                "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
              },
              "signatureValue" : {
                "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                "name" : "John Smith",
                "signedAtTime" : "1996-02-21T06:57:25Z",
                "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
              },
              "stringValue" : "Red Truck"
            }
          }, {
            "label" : "Load weight",
            "type" : "scannedDocument",
            "value" : {
              "barcodeValue" : {
                "barcodeType" : "org.gs1.EAN-13",
                "barcodeValue" : "0853883003114"
              },
              "dateTimeValue" : {
                "dateTime" : "1988-11-10T02:42:05Z"
              },
              "multipleChoiceValue" : {
                "selected" : false,
                "value" : "Yes"
              },
              "numberValue" : 123,
              "photoValue" : {
                "id" : "f5271458-21f9-4a9f-a290-780c6d8840ff",
                "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
              },
              "signatureValue" : {
                "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                "name" : "John Smith",
                "signedAtTime" : "1996-02-21T06:57:25Z",
                "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
              },
              "stringValue" : "Red Truck"
            }
          } ],
          "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
          "name" : "Dropoff Slip 123",
          "notes" : "Missing a crate",
          "routeStop" : {
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "id" : "494123",
            "name" : "Company Warehouse #1"
          },
          "state" : "required",
          "updatedAtTime" : "2009-03-31T07:01:03Z",
          "vehicle" : {
            "externalIds" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            },
            "id" : "494123",
            "name" : "Fleet Truck #1"
          }
        }
      },
      "driverTinyResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "ID of the driver.",
            "example" : "88668"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the driver.",
            "example" : "Susan Bob"
          }
        },
        "description" : "A minified driver object."
      },
      "dvirTrailerDefectsItems" : {
        "required" : [ "id", "isResolved" ],
        "type" : "object",
        "properties" : {
          "comment" : {
            "type" : "string",
            "description" : "Comment on the defect.",
            "example" : "Air Compressor not working"
          },
          "createdAtTime" : {
            "type" : "string",
            "description" : "Time when the defect was created. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.",
            "example" : "2020-01-27T07:06:25Z"
          },
          "defectType" : {
            "type" : "string",
            "description" : "The type of DVIR defect.",
            "example" : "Air Compressor"
          },
          "id" : {
            "type" : "string",
            "description" : "ID of the defect.",
            "example" : "18"
          },
          "isResolved" : {
            "type" : "boolean",
            "description" : "Signifies if this defect is resolved.",
            "example" : true
          },
          "mechanicNotes" : {
            "type" : "string",
            "description" : "The mechanics notes on the defect.",
            "example" : "Extremely large oddly shaped hole in passenger side window."
          },
          "mechanicNotesUpdatedAtTime" : {
            "type" : "string",
            "description" : "Time when mechanic notes were last updated. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.",
            "example" : "2020-01-27T07:06:25Z"
          },
          "resolvedAtTime" : {
            "type" : "string",
            "description" : "Time when this defect was resolved. Will not be returned if the defect is unresolved. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.",
            "example" : "2020-01-27T07:06:25Z"
          },
          "resolvedBy" : {
            "$ref" : "#/components/schemas/Defect_resolvedBy"
          },
          "trailer" : {
            "type" : "object",
            "allOf" : [ {
              "type" : "object",
              "description" : "The trailer this defect was submitted for."
            }, {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "ID of the trailer.",
                  "example" : "123456789"
                },
                "name" : {
                  "type" : "string",
                  "description" : "Name of the trailer.",
                  "example" : "Midwest Trailer #5"
                }
              },
              "description" : "A minified trailer object."
            } ]
          },
          "vehicle" : {
            "type" : "object",
            "allOf" : [ {
              "type" : "object",
              "description" : "The vehicle this defect was submitted for."
            }, {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "ID of the vehicle.",
                  "example" : "123456789"
                },
                "name" : {
                  "type" : "string",
                  "description" : "Name of the vehicle.",
                  "example" : "Midwest Truck #4"
                }
              },
              "description" : "A minified vehicle object."
            } ]
          }
        },
        "x-go-gen-location" : "models"
      },
      "fieldObjectResponseBody" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string",
            "description" : "The name of the field.",
            "example" : "Load weight"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of field.",
            "example" : "barcode",
            "enum" : [ "photo", "string", "number", "multipleChoice", "signature", "dateTime", "scannedDocument", "barcode" ]
          },
          "value" : {
            "$ref" : "#/components/schemas/fieldObjectValueResponseBody"
          }
        },
        "example" : {
          "label" : "Load weight",
          "type" : "barcode",
          "value" : {
            "barcodeValue" : {
              "barcodeType" : "org.gs1.EAN-13",
              "barcodeValue" : "0853883003114"
            },
            "dateTimeValue" : {
              "dateTime" : "1988-11-10T02:42:05Z"
            },
            "multipleChoiceValue" : {
              "selected" : false,
              "value" : "Yes"
            },
            "numberValue" : 123,
            "photoValue" : {
              "id" : "f5271458-21f9-4a9f-a290-780c6d8840ff",
              "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
            },
            "signatureValue" : {
              "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
              "name" : "John Smith",
              "signedAtTime" : "1996-02-21T06:57:25Z",
              "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
            },
            "stringValue" : "Red Truck"
          }
        }
      },
      "fieldObjectValueResponseBody" : {
        "type" : "object",
        "properties" : {
          "barcodeValue" : {
            "$ref" : "#/components/schemas/barcodeValueObjectResponseBody"
          },
          "dateTimeValue" : {
            "$ref" : "#/components/schemas/dateTimeValueObjectResponseBody"
          },
          "multipleChoiceValue" : {
            "$ref" : "#/components/schemas/multipleChoiceValueObjectResponseBody"
          },
          "numberValue" : {
            "type" : "integer",
            "description" : "The value of a number field. Only present for number fields.",
            "format" : "int64",
            "example" : 123
          },
          "photoValue" : {
            "$ref" : "#/components/schemas/photoValueObjectResponseBody"
          },
          "signatureValue" : {
            "$ref" : "#/components/schemas/signatureValueObjectResponseBody"
          },
          "stringValue" : {
            "type" : "string",
            "description" : "The value of a string field. Only present for string fields.",
            "example" : "Red Truck"
          }
        },
        "example" : {
          "barcodeValue" : {
            "barcodeType" : "org.gs1.EAN-13",
            "barcodeValue" : "0853883003114"
          },
          "dateTimeValue" : {
            "dateTime" : "1988-11-10T02:42:05Z"
          },
          "multipleChoiceValue" : {
            "selected" : false,
            "value" : "Yes"
          },
          "numberValue" : 123,
          "photoValue" : {
            "id" : "f5271458-21f9-4a9f-a290-780c6d8840ff",
            "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
          },
          "signatureValue" : {
            "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
            "name" : "John Smith",
            "signedAtTime" : "1996-02-21T06:57:25Z",
            "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
          },
          "stringValue" : "Red Truck"
        }
      },
      "fieldTypesObjectResponseBody" : {
        "required" : [ "fieldType", "label", "requiredField" ],
        "type" : "object",
        "properties" : {
          "fieldType" : {
            "type" : "string",
            "description" : "The type of value this field can have.",
            "example" : "number, string, photo, datetime, multipleChoice, etc."
          },
          "label" : {
            "type" : "string",
            "description" : "The name of the field type.",
            "example" : "Similique enim quos corrupti."
          },
          "multipleChoiceFieldTypeMetaData" : {
            "type" : "array",
            "description" : "A list of the multiple choice field option labels.",
            "example" : [ {
              "label" : "Maxime doloribus."
            }, {
              "label" : "Maxime doloribus."
            } ],
            "items" : {
              "$ref" : "#/components/schemas/multipleChoiceFieldTypeMetaDataObjectResponseBody"
            }
          },
          "numberFieldTypeMetaData" : {
            "$ref" : "#/components/schemas/numberFieldTypeMetaDataObjectResponseBody"
          },
          "requiredField" : {
            "type" : "boolean",
            "description" : "The indicator that states if the field is required.",
            "example" : true
          },
          "signatureFieldTypeMetaData" : {
            "$ref" : "#/components/schemas/signatureFieldTypeMetaDataObjectResponseBody"
          }
        },
        "example" : {
          "fieldType" : "number, string, photo, datetime, multipleChoice, etc.",
          "label" : "Doloremque sed.",
          "multipleChoiceFieldTypeMetaData" : [ {
            "label" : "Maxime doloribus."
          }, {
            "label" : "Maxime doloribus."
          }, {
            "label" : "Maxime doloribus."
          }, {
            "label" : "Maxime doloribus."
          } ],
          "numberFieldTypeMetaData" : {
            "numberOfDecimalPlaces" : 5628103227747262000
          },
          "requiredField" : true,
          "signatureFieldTypeMetaData" : {
            "legalText" : "Necessitatibus odit beatae."
          }
        }
      },
      "getDocumentTypeResponseObjectResponseBody" : {
        "type" : "object",
        "properties" : {
          "conditionalFieldSections" : {
            "type" : "array",
            "description" : "List of the document type conditional field sections.",
            "example" : [ {
              "conditionalFieldFirstIndex" : 2949691048040286700,
              "conditionalFieldLastIndex" : 5188021910068834000,
              "triggeringFieldIndex" : 6312989348082117000,
              "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
            }, {
              "conditionalFieldFirstIndex" : 2949691048040286700,
              "conditionalFieldLastIndex" : 5188021910068834000,
              "triggeringFieldIndex" : 6312989348082117000,
              "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
            } ],
            "items" : {
              "$ref" : "#/components/schemas/conditionalFieldSectionObjectResponseBody"
            }
          },
          "fieldTypes" : {
            "type" : "array",
            "description" : "The fields associated with this document type.",
            "example" : [ {
              "fieldType" : "number, string, photo, datetime, multipleChoice, etc.",
              "label" : "Molestias quo officia eum.",
              "multipleChoiceFieldTypeMetaData" : [ {
                "label" : "Maxime doloribus."
              }, {
                "label" : "Maxime doloribus."
              }, {
                "label" : "Maxime doloribus."
              } ],
              "numberFieldTypeMetaData" : {
                "numberOfDecimalPlaces" : 5628103227747262000
              },
              "requiredField" : false,
              "signatureFieldTypeMetaData" : {
                "legalText" : "Necessitatibus odit beatae."
              }
            }, {
              "fieldType" : "number, string, photo, datetime, multipleChoice, etc.",
              "label" : "Molestias quo officia eum.",
              "multipleChoiceFieldTypeMetaData" : [ {
                "label" : "Maxime doloribus."
              }, {
                "label" : "Maxime doloribus."
              }, {
                "label" : "Maxime doloribus."
              } ],
              "numberFieldTypeMetaData" : {
                "numberOfDecimalPlaces" : 5628103227747262000
              },
              "requiredField" : false,
              "signatureFieldTypeMetaData" : {
                "legalText" : "Necessitatibus odit beatae."
              }
            }, {
              "fieldType" : "number, string, photo, datetime, multipleChoice, etc.",
              "label" : "Molestias quo officia eum.",
              "multipleChoiceFieldTypeMetaData" : [ {
                "label" : "Maxime doloribus."
              }, {
                "label" : "Maxime doloribus."
              }, {
                "label" : "Maxime doloribus."
              } ],
              "numberFieldTypeMetaData" : {
                "numberOfDecimalPlaces" : 5628103227747262000
              },
              "requiredField" : false,
              "signatureFieldTypeMetaData" : {
                "legalText" : "Necessitatibus odit beatae."
              }
            } ],
            "items" : {
              "$ref" : "#/components/schemas/fieldTypesObjectResponseBody"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "Universally unique identifier for the document type. This value can be passed in as the documentTypeId when creating a document.",
            "example" : "Voluptatum ratione aut voluptas impedit vel excepturi."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the document type.",
            "example" : "Quibusdam provident cupiditate eligendi."
          },
          "orgId" : {
            "type" : "integer",
            "description" : "ID for the organization this document type belongs to.",
            "format" : "int64",
            "example" : 6686015252982573000
          }
        },
        "example" : {
          "conditionalFieldSections" : [ {
            "conditionalFieldFirstIndex" : 2949691048040286700,
            "conditionalFieldLastIndex" : 5188021910068834000,
            "triggeringFieldIndex" : 6312989348082117000,
            "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
          }, {
            "conditionalFieldFirstIndex" : 2949691048040286700,
            "conditionalFieldLastIndex" : 5188021910068834000,
            "triggeringFieldIndex" : 6312989348082117000,
            "triggeringFieldValue" : "Amet sapiente non tempora id reprehenderit."
          } ],
          "fieldTypes" : [ {
            "fieldType" : "number, string, photo, datetime, multipleChoice, etc.",
            "label" : "Molestias quo officia eum.",
            "multipleChoiceFieldTypeMetaData" : [ {
              "label" : "Maxime doloribus."
            }, {
              "label" : "Maxime doloribus."
            }, {
              "label" : "Maxime doloribus."
            } ],
            "numberFieldTypeMetaData" : {
              "numberOfDecimalPlaces" : 5628103227747262000
            },
            "requiredField" : false,
            "signatureFieldTypeMetaData" : {
              "legalText" : "Necessitatibus odit beatae."
            }
          }, {
            "fieldType" : "number, string, photo, datetime, multipleChoice, etc.",
            "label" : "Molestias quo officia eum.",
            "multipleChoiceFieldTypeMetaData" : [ {
              "label" : "Maxime doloribus."
            }, {
              "label" : "Maxime doloribus."
            }, {
              "label" : "Maxime doloribus."
            } ],
            "numberFieldTypeMetaData" : {
              "numberOfDecimalPlaces" : 5628103227747262000
            },
            "requiredField" : false,
            "signatureFieldTypeMetaData" : {
              "legalText" : "Necessitatibus odit beatae."
            }
          }, {
            "fieldType" : "number, string, photo, datetime, multipleChoice, etc.",
            "label" : "Molestias quo officia eum.",
            "multipleChoiceFieldTypeMetaData" : [ {
              "label" : "Maxime doloribus."
            }, {
              "label" : "Maxime doloribus."
            }, {
              "label" : "Maxime doloribus."
            } ],
            "numberFieldTypeMetaData" : {
              "numberOfDecimalPlaces" : 5628103227747262000
            },
            "requiredField" : false,
            "signatureFieldTypeMetaData" : {
              "legalText" : "Necessitatibus odit beatae."
            }
          } ],
          "id" : "Non aliquam qui veniam molestiae tempore.",
          "name" : "Dicta molestias error autem.",
          "orgId" : 2496636876549391000
        }
      },
      "hosStatusType" : {
        "type" : "string",
        "description" : "The Hours of Service status type.",
        "example" : "offDuty",
        "enum" : [ "offDuty", "sleeperBed", "driving", "onDuty", "yardMove", "personalConveyance" ]
      },
      "latitude" : {
        "type" : "number",
        "description" : "The latitude of the asset in decimal degrees.",
        "format" : "double",
        "example" : 37.765363
      },
      "location" : {
        "required" : [ "latitude", "longitude" ],
        "type" : "object",
        "properties" : {
          "latitude" : {
            "type" : "number",
            "description" : "GPS latitude represented in degrees",
            "format" : "double",
            "example" : 122.142
          },
          "longitude" : {
            "type" : "number",
            "description" : "GPS longitude represented in degrees",
            "format" : "double",
            "example" : -93.343
          }
        },
        "description" : "Location object"
      },
      "longitude" : {
        "type" : "number",
        "description" : "The longitude of the asset in decimal degrees.",
        "format" : "double",
        "example" : -122.403098
      },
      "multipleChoiceFieldTypeMetaDataObjectResponseBody" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string",
            "description" : "The option choice label.",
            "example" : "Non incidunt ipsam."
          }
        },
        "example" : {
          "label" : "Consequatur omnis."
        }
      },
      "multipleChoiceValueObjectResponseBody" : {
        "type" : "object",
        "properties" : {
          "selected" : {
            "type" : "boolean",
            "description" : "Boolean representing if the choice has been selected.",
            "example" : false
          },
          "value" : {
            "type" : "string",
            "description" : "Description of the choice.",
            "example" : "Yes"
          }
        },
        "example" : {
          "selected" : false,
          "value" : "Yes"
        }
      },
      "numberFieldTypeMetaDataObjectResponseBody" : {
        "type" : "object",
        "properties" : {
          "numberOfDecimalPlaces" : {
            "type" : "integer",
            "description" : "The number of decimal places allowed for the field.",
            "format" : "int64",
            "example" : 605096925308697200
          }
        },
        "example" : {
          "numberOfDecimalPlaces" : 8389989517472915000
        }
      },
      "paginationResponse" : {
        "required" : [ "endCursor", "hasNextPage" ],
        "type" : "object",
        "properties" : {
          "endCursor" : {
            "type" : "string",
            "description" : "Cursor identifier representing the last element in the response. This value should be used in conjunction with a subsequent request's 'after' query parameter. This may be an empty string if there are no more pages left to view.",
            "format" : "string",
            "example" : "MjkY"
          },
          "hasNextPage" : {
            "type" : "boolean",
            "description" : "True if there are more pages of results immediately available after this endCursor.",
            "example" : true
          }
        },
        "description" : "Pagination parameters."
      },
      "photoValueObjectResponseBody" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Id of the photo.",
            "example" : "f5271458-21f9-4a9f-a290-780c6d8840ff"
          },
          "url" : {
            "type" : "string",
            "description" : "Url of the photo.",
            "example" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
          }
        },
        "example" : {
          "id" : "f5271458-21f9-4a9f-a290-780c6d8840ff",
          "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
        }
      },
      "routeTinyResponse" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "externalIds" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
            "example" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "Unique identifier for the route.",
            "example" : "131313"
          },
          "name" : {
            "maxLength" : 255,
            "type" : "string",
            "description" : "Name of the route.",
            "example" : "Pineapple delivery"
          }
        },
        "description" : "A minified representation of a single route."
      },
      "signatureFieldTypeMetaDataObjectResponseBody" : {
        "type" : "object",
        "properties" : {
          "legalText" : {
            "type" : "string",
            "description" : "The signature field legal text.",
            "example" : "Nihil vero saepe."
          }
        },
        "example" : {
          "legalText" : "Quis explicabo earum voluptates quisquam repudiandae nulla."
        }
      },
      "signatureValueObjectResponseBody" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Id of the signature field.",
            "example" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the signee for a signature field.",
            "example" : "John Smith"
          },
          "signedAtTime" : {
            "type" : "string",
            "description" : "Time the signature was captured in RFC 3339 format.",
            "format" : "date-time",
            "example" : "1971-03-19T21:11:19Z"
          },
          "url" : {
            "type" : "string",
            "description" : "Url of a signature field's PNG signature image.",
            "example" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
          }
        },
        "example" : {
          "id" : "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
          "name" : "John Smith",
          "signedAtTime" : "2013-11-10T15:50:36Z",
          "url" : "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
        }
      },
      "standardDeleteResponse" : {
        "type" : "string",
        "description" : "A successful DELETE response is a 204 with no content.",
        "example" : "<empty content>"
      },
      "standardErrorResponse" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "The message of the error.",
            "example" : "An error has occurred."
          },
          "requestId" : {
            "type" : "string",
            "description" : "The ID of the request.",
            "example" : "8916e1c1"
          }
        },
        "description" : "Error response"
      },
      "tagTinyResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "ID of the tag.",
            "example" : "3914"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the tag.",
            "example" : "East Coast"
          },
          "parentTagId" : {
            "type" : "string",
            "description" : "If this tag is part a hierarchical tag tree, this is the ID of the parent tag, otherwise this will be omitted.",
            "example" : "4815"
          }
        },
        "description" : "A minified tag object"
      },
      "time" : {
        "type" : "string",
        "description" : "UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.",
        "example" : "2020-01-27T07:06:25Z"
      },
      "trailerNameOnlyResponse" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the trailer.",
            "example" : "Midwest Trailer #5"
          }
        },
        "description" : "A trailer object with only a name."
      },
      "trailerTinyResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "ID of the trailer.",
            "example" : "123456789"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the trailer.",
            "example" : "Midwest Trailer #5"
          }
        },
        "description" : "A minified trailer object."
      },
      "userTinyResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "ID of the user.",
            "example" : "88668"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the user.",
            "example" : "Susan Bob"
          }
        },
        "description" : "A minified user object."
      },
      "vehicleStatsAuxInputTime" : {
        "type" : "string",
        "description" : "UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.",
        "example" : "2020-01-27T07:06:25Z",
        "x-go-gen-location" : "models"
      },
      "vehicleTinyResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "ID of the vehicle.",
            "example" : "123456789"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the vehicle.",
            "example" : "Midwest Truck #4"
          }
        },
        "description" : "A minified vehicle object."
      },
      "inline_response_200" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AssetResponse"
          }
        }
      },
      "inline_response_200_1" : {
        "type" : "object",
        "properties" : {
          "assets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/V1Asset"
            }
          }
        }
      },
      "inline_response_200_2" : {
        "type" : "object",
        "properties" : {
          "assets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/V1AssetCurrentLocationsResponse"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/V1Pagination"
          }
        }
      },
      "inline_response_200_3" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/V1AssetsReefer"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/V1Pagination"
          }
        }
      },
      "body" : {
        "type" : "object",
        "properties" : {
          "apply_to_future_routes" : {
            "type" : "boolean",
            "description" : "This is only for a recurring route.  If set to true, delete all following runs of the route.  If set to false, only delete the current route.",
            "example" : true
          }
        }
      },
      "body_1" : {
        "required" : [ "duty_status" ],
        "type" : "object",
        "properties" : {
          "duty_status" : {
            "type" : "string",
            "description" : "Duty status to set the driver to. The only supported values are 'ON_DUTY' and 'OFF_DUTY'.",
            "example" : "ON_DUTY"
          },
          "location" : {
            "type" : "string",
            "description" : "Location to associate the duty status change with.",
            "example" : "Loading dock"
          },
          "remark" : {
            "type" : "string",
            "description" : "Remark to associate the duty status change with.",
            "example" : "Beginning On Duty Shift"
          },
          "status_change_at_ms" : {
            "type" : "number",
            "description" : "Timestamp that the duty status will begin at specified in milliseconds UNIX time. Defaults to the current time if left blank. This can only be set to up to 8 hours in the past.",
            "format" : "int64",
            "example" : 1580834793568
          },
          "vehicle_id" : {
            "type" : "number",
            "description" : "Vehicle ID to associate the duty status change with.",
            "format" : "int64",
            "example" : 1234.0
          }
        }
      },
      "inline_response_200_4" : {
        "type" : "object",
        "properties" : {
          "vehicles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/V1VehicleMaintenance"
            }
          }
        }
      },
      "inline_response_200_5" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/V1MessagesResponse"
          }
        },
        "description" : "A list of messages."
      },
      "body_2" : {
        "required" : [ "driverIds", "text" ],
        "type" : "object",
        "properties" : {
          "driverIds" : {
            "type" : "array",
            "description" : "IDs of the drivers for whom the messages are sent to.",
            "example" : [ 111, 222, 333 ],
            "items" : {
              "type" : "number",
              "format" : "int64",
              "example" : 555.0
            }
          },
          "text" : {
            "type" : "string",
            "description" : "The text sent in the message.",
            "example" : "This is a message."
          }
        }
      },
      "inline_response_200_6" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/V1Messages"
          }
        },
        "description" : "A list of created messages."
      },
      "inline_response_200_7" : {
        "type" : "object",
        "properties" : {
          "pagination" : {
            "$ref" : "#/components/schemas/V1Pagination"
          },
          "trailers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/V1TrailerAssignmentsResponse"
            }
          }
        }
      },
      "body_3" : {
        "required" : [ "endMs", "startMs" ],
        "type" : "object",
        "properties" : {
          "endMs" : {
            "type" : "integer",
            "description" : "End of the time range, specified in milliseconds UNIX time.",
            "example" : 1462881998034
          },
          "startMs" : {
            "type" : "integer",
            "description" : "Beginning of the time range, specified in milliseconds UNIX time.",
            "example" : 1462878398034
          }
        }
      },
      "inline_response_200_8" : {
        "type" : "object",
        "properties" : {
          "machines" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/V1Machine"
            }
          }
        }
      },
      "body_4" : {
        "required" : [ "sensors" ],
        "type" : "object",
        "properties" : {
          "sensors" : {
            "type" : "array",
            "description" : "List of sensor IDs to query.",
            "example" : [ 122 ],
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      },
      "body_5" : {
        "required" : [ "sensors" ],
        "type" : "object",
        "properties" : {
          "sensors" : {
            "type" : "array",
            "description" : "List of sensor IDs to query.",
            "example" : [ 122 ],
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      },
      "v1sensorshistory_series" : {
        "required" : [ "field", "widgetId" ],
        "type" : "object",
        "properties" : {
          "field" : {
            "type" : "string",
            "description" : "Field to query.",
            "example" : "ambientTemperature",
            "enum" : [ "ambientTemperature", "cargoPercent", "currentLoop1Raw", "currentLoop1Mapped", "currentLoop2Raw", "currentLoop2Mapped", "doorClosed", "humidity", "pmPowerTotal", "pmPhase1Power", "pmPhase2Power", "pmPhase3Power", "pmPhase1PowerFactor", "pmPhase2PowerFactor", "pmPhase3PowerFactor", "probeTemperature" ]
          },
          "widgetId" : {
            "type" : "integer",
            "description" : "V1Sensor ID to query.",
            "format" : "int64",
            "example" : 1
          }
        },
        "description" : "V1Sensor ID and field to query."
      },
      "body_6" : {
        "required" : [ "endMs", "series", "startMs", "stepMs" ],
        "type" : "object",
        "properties" : {
          "endMs" : {
            "type" : "integer",
            "description" : "End of the time range, specified in milliseconds UNIX time.",
            "example" : 1462881998034
          },
          "fillMissing" : {
            "type" : "string",
            "enum" : [ "withNull", "withPrevious" ],
            "default" : "withNull"
          },
          "series" : {
            "maxItems" : 40,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1sensorshistory_series"
            }
          },
          "startMs" : {
            "type" : "integer",
            "description" : "Beginning of the time range, specified in milliseconds UNIX time.",
            "example" : 1462878398034
          },
          "stepMs" : {
            "type" : "integer",
            "description" : "Time resolution for which data should be returned, in milliseconds. Specifying 3600000 will return data at hour intervals.",
            "example" : 3600000
          }
        }
      },
      "body_7" : {
        "required" : [ "sensors" ],
        "type" : "object",
        "properties" : {
          "sensors" : {
            "type" : "array",
            "description" : "List of sensor IDs to query.",
            "example" : [ 122 ],
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      },
      "inline_response_200_9" : {
        "type" : "object",
        "properties" : {
          "sensors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/V1Sensor"
            }
          }
        }
      },
      "body_8" : {
        "required" : [ "sensors" ],
        "type" : "object",
        "properties" : {
          "sensors" : {
            "type" : "array",
            "description" : "List of sensor IDs to query.",
            "example" : [ 122 ],
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      },
      "AddressGeofence_circle" : {
        "required" : [ "radiusMeters" ],
        "type" : "object",
        "properties" : {
          "latitude" : {
            "type" : "number",
            "description" : "Latitude of the address. Will be geocoded from `formattedAddress` if not provided.",
            "format" : "double",
            "example" : 37.765363
          },
          "longitude" : {
            "type" : "number",
            "description" : "Longitude of the address. Will be geocoded from `formattedAddress` if not provided.",
            "format" : "double",
            "example" : -122.4029238
          },
          "radiusMeters" : {
            "type" : "integer",
            "description" : "The radius of the circular geofence in meters.",
            "format" : "int64",
            "example" : 25
          }
        },
        "description" : "Information about a circular geofence. This field is only needed if the geofence is a circle."
      },
      "AddressGeofence_polygon_vertices" : {
        "required" : [ "latitude", "longitude" ],
        "type" : "object",
        "properties" : {
          "latitude" : {
            "type" : "number",
            "description" : "The latitude of a geofence vertex in decimal degrees.",
            "format" : "double"
          },
          "longitude" : {
            "type" : "number",
            "description" : "The longitude of a geofence vertex in decimal degrees.",
            "format" : "double"
          }
        }
      },
      "AddressGeofence_polygon" : {
        "required" : [ "vertices" ],
        "type" : "object",
        "properties" : {
          "vertices" : {
            "maxItems" : 40,
            "minItems" : 3,
            "type" : "array",
            "description" : "The vertices of the polygon geofence. These geofence vertices describe the perimeter of the polygon, and must consist of at least 3 vertices and less than 40.",
            "example" : [ {
              "latitude" : 37.765363,
              "longitude" : -122.403098
            }, {
              "latitude" : 38.765363,
              "longitude" : -122.403098
            }, {
              "latitude" : 37.765363,
              "longitude" : -123.403098
            } ],
            "items" : {
              "$ref" : "#/components/schemas/AddressGeofence_polygon_vertices"
            }
          }
        },
        "description" : "Information about a polygon geofence. This field is only needed if the geofence is a polygon."
      },
      "AssetResponse_locationDataInput" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Id of the data input"
          }
        },
        "description" : "The associated location data input (only applicable when locationType is \"dataInput\")."
      },
      "AssetResponse_parentAsset" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/ParentId"
          },
          "name" : {
            "$ref" : "#/components/schemas/AssetName"
          }
        },
        "description" : "The asset's parent"
      },
      "AssetResponse_runningStatusDataInput" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Id of the data input",
            "example" : "12345"
          }
        },
        "description" : "The associated running status data input. isRunning will be true when the data input's value is 1."
      },
      "CreateAddressRequest_geofence" : {
        "type" : "object",
        "properties" : {
          "circle" : {
            "$ref" : "#/components/schemas/AddressGeofence_circle"
          },
          "polygon" : {
            "$ref" : "#/components/schemas/AddressGeofence_polygon"
          }
        },
        "description" : "The geofence that defines this address and its bounds. This can either be a circle or a polygon, but not both."
      },
      "CreateAttributeRequest_entities" : {
        "type" : "object",
        "properties" : {
          "entityId" : {
            "type" : "string",
            "description" : "Entity id, based on the entity type."
          },
          "externalIds" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
            "example" : {
              "maintenanceId" : "250020",
              "payrollId" : "ABFS18600"
            }
          },
          "numberValues" : {
            "type" : "array",
            "description" : "Number values that can be associated with this attribute",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "stringValues" : {
            "type" : "array",
            "description" : "String values that can be associated with this attribute",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CreateDriverRequest_attributes" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The samsara id of the attribute object.",
            "example" : "123e4567-e89b-12d3-a456-426614174000"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of attribute.",
            "example" : "License Certifications"
          },
          "numberValues" : {
            "type" : "array",
            "description" : "Number values that are associated with this attribute.",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "stringValues" : {
            "type" : "array",
            "description" : "String values that are associated with this attribute.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "A minified attribute."
      },
      "CreateDriverRequest_carrierSettings" : {
        "type" : "object",
        "properties" : {
          "carrierName" : {
            "maxLength" : 255,
            "type" : "string",
            "description" : "Carrier for a given driver.",
            "example" : "Acme Inc."
          },
          "dotNumber" : {
            "type" : "integer",
            "description" : "Carrier US DOT Number. If this differs from the general organization's settings, the override value is used. Updating this value only updates the override setting for this driver.",
            "format" : "int64",
            "example" : 98231
          },
          "mainOfficeAddress" : {
            "maxLength" : 255,
            "type" : "string",
            "description" : "Main office address for a given driver. If this differs from the general organization's settings, the override value is used. ",
            "example" : "1234 Pear St., Scranton, PA 62814"
          }
        },
        "description" : "Carrier for a given driver. If the driver's carrier differs from the general organization's carrier settings, the override value is used. Updating this value only updates the override setting for this driver."
      },
      "CreateUserRequest_roles" : {
        "required" : [ "roleId" ],
        "type" : "object",
        "properties" : {
          "roleId" : {
            "type" : "string",
            "description" : "The unique ID for the role.",
            "example" : "8a9371af-82d1-4158-bf91-4ecc8d3a114c"
          },
          "tagId" : {
            "type" : "string",
            "description" : "ID of the tag this role applies to.",
            "example" : "3914"
          }
        },
        "description" : "A role that applies to a user. If the role has a `tagId`, then the role applies for that tag. If there is no `tagId`, then the role applies at the organizational level. A user may have many tag-specific roles, but may only have one organizational role. If the organizational level role has higher privileges than a tag-specific role, then the organizational role privileges will take precedence."
      },
      "Defect_resolvedBy" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "ID of the entity that resolved this defect. If the defect was resolved by a driver, this will be a Samsara Driver ID. If the defect was resolved by a mechanic, this will be the Samsara Dashboard User ID of the mechanic.",
            "example" : "11"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the person who resolved this defect.",
            "example" : "Christopher 'The Handyman' Zhen"
          },
          "type" : {
            "type" : "string",
            "description" : "Indicates whether this defect was resolved by a `driver` or a `mechanic`.",
            "enum" : [ "driver", "mechanic" ]
          }
        },
        "description" : "The person who resolved this defect.  Will not be returned if the defect is unresolved."
      },
      "DocumentPdfGenerationResponse_data" : {
        "type" : "object",
        "properties" : {
          "documentId" : {
            "type" : "string",
            "description" : "ID of the document.",
            "example" : "6c8c0c01-206a-41a4-9d21-15b9978d04cb"
          },
          "id" : {
            "type" : "string",
            "description" : "ID of the PDF file generated or being generated for the document.",
            "example" : "5c8c0c01-206a-41a4-9d21-15b9978d04cb"
          }
        }
      },
      "DocumentPdfQueryResponse_data" : {
        "type" : "object",
        "properties" : {
          "completedAtTime" : {
            "type" : "string",
            "description" : "Time that PDF generation was completed, in RFC 3339 format.",
            "example" : "2020-01-02T15:04:06+07:00"
          },
          "documentId" : {
            "type" : "string",
            "description" : "ID of the document.",
            "example" : "6c8c0c01-206a-41a4-9d21-15b9978d04cb"
          },
          "downloadDocumentPdfUrl" : {
            "type" : "string",
            "description" : "S3 pre-signed URL to download PDF file.",
            "example" : "https://samsara-driver-document-pdfs.s3.us-west-2.amazonaws.com/org/38487/42a4cffc-409d-4ddf-ba1c-5e3bbb961cba?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASI...&X-Amz-Date=20200423T162507Z&X-Amz-Expires=86400&X-Amz-Security-Token=IQoJ...-Amz-SignedHeaders=host&response-expires=2020-04-24T16%3A25%3A07Z&X-Amz-Signature=1c6fe87..."
          },
          "id" : {
            "type" : "string",
            "description" : "ID of the PDF file generated or being generated for the document",
            "example" : "5c8c0c01-206a-41a4-9d21-15b9978d04cb"
          },
          "jobStatus" : {
            "type" : "string",
            "description" : "Describes status of the PDF generation job.",
            "example" : "Completed",
            "enum" : [ "requested", "processing", "completed" ]
          },
          "requestedAtTime" : {
            "type" : "string",
            "description" : "Time that PDF generation was requested, in RFC 3339 format.",
            "example" : "2020-01-02T15:04:05+07:00"
          }
        }
      },
      "DriverEfficienciesResponse_data" : {
        "type" : "object",
        "properties" : {
          "driverSummaries" : {
            "type" : "array",
            "description" : "A list of drivers' efficiencies.",
            "items" : {
              "$ref" : "#/components/schemas/DriverEfficiency"
            }
          },
          "summaryEndTime" : {
            "type" : "string",
            "description" : "End time of the window for which this efficiency report was computed. Will be a UTC timestamp in RFC 3339 format. For example: `2020-03-16T16:00:00Z`",
            "format" : "date-time",
            "example" : "2020-03-16T16:00:00Z"
          },
          "summaryStartTime" : {
            "type" : "string",
            "description" : "Start time of the window for which this efficiency report was computed. Will be a UTC timestamp in RFC 3339 format. For example: `2020-03-15T16:00:00Z`",
            "format" : "date-time",
            "example" : "2020-03-15T16:00:00Z"
          }
        }
      },
      "EquipmentLocationsListResponse_data" : {
        "required" : [ "id", "locations", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/EquipmentId"
          },
          "locations" : {
            "type" : "array",
            "description" : "A time-series of location events for the given unit of equipment.",
            "items" : {
              "$ref" : "#/components/schemas/EquipmentLocation"
            }
          },
          "name" : {
            "$ref" : "#/components/schemas/EquipmentName"
          }
        },
        "description" : "A unit of equipment and its time-series of location events."
      },
      "EquipmentLocationsResponse_data" : {
        "required" : [ "id", "location", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/EquipmentId"
          },
          "location" : {
            "$ref" : "#/components/schemas/EquipmentLocation"
          },
          "name" : {
            "$ref" : "#/components/schemas/EquipmentName"
          }
        },
        "description" : "A unit of equipment and its most recent location."
      },
      "EquipmentStatsListResponse_data" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "engineRpm" : {
            "type" : "array",
            "description" : "A time-series of engine RPM readings for the given unit of equipment.",
            "items" : {
              "$ref" : "#/components/schemas/EquipmentEngineRpm"
            }
          },
          "engineSeconds" : {
            "type" : "array",
            "description" : "[DEPRECATED] Please use either `gatewayEngineSeconds`, `obdEngineSeconds`, or `gatewayJ1939EngineSeconds`.",
            "items" : {
              "$ref" : "#/components/schemas/EquipmentEngineSeconds"
            }
          },
          "engineStates" : {
            "type" : "array",
            "description" : "[DEPRECATED] Please use either `gatewayEngineStates` or `obdEngineStates`.",
            "items" : {
              "$ref" : "#/components/schemas/EquipmentEngineState"
            }
          },
          "fuelPercent" : {
            "type" : "array",
            "description" : "A time-series of fuel percent level changes for the given unit of equipment.",
            "items" : {
              "$ref" : "#/components/schemas/EquipmentFuelPercent"
            }
          },
          "gatewayEngineSeconds" : {
            "type" : "array",
            "description" : "A time-series of engine seconds readings for the given unit of equipment as an approximate based on readings from the AG24's aux/digio cable.",
            "items" : {
              "$ref" : "#/components/schemas/EquipmentGatewayEngineSeconds"
            }
          },
          "gatewayEngineState" : {
            "type" : "array",
            "description" : "A time-series of engine state changes (as read from the AG24's aux/digio cable) for the given unit of equipment.",
            "items" : {
              "$ref" : "#/components/schemas/EquipmentGatewayEngineState"
            }
          },
          "gatewayJ1939EngineSeconds" : {
            "type" : "array",
            "description" : "A time-series of engine seconds readings for the given unit of equipment as an approximate based on readings from the AG24's CAT/J1939 cable.",
            "items" : {
              "$ref" : "#/components/schemas/EquipmentGatewayJ1939EngineSeconds"
            }
          },
          "gpsOdometerMeters" : {
            "type" : "array",
            "description" : "A time-series of GPS odometer readings for the given unit of equipment.",
            "items" : {
              "$ref" : "#/components/schemas/EquipmentGpsOdometerMeters"
            }
          },
          "id" : {
            "$ref" : "#/components/schemas/EquipmentId"
          },
          "name" : {
            "$ref" : "#/components/schemas/EquipmentName"
          },
          "obdEngineSeconds" : {
            "type" : "array",
            "description" : "A time-series of engine seconds readings for the given unit of equipment directly from on-board diagnostics.",
            "items" : {
              "$ref" : "#/components/schemas/EquipmentObdEngineSeconds"
            }
          },
          "obdEngineState" : {
            "type" : "array",
            "description" : "A time-series of engine state changes (as read from on-board diagnostics) for the given unit of equipment.",
            "items" : {
              "$ref" : "#/components/schemas/EquipmentObdEngineState"
            }
          }
        },
        "description" : "A unit of equipment and its time-series of stats events."
      },
      "EquipmentStatsResponse_data" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "engineRpm" : {
            "$ref" : "#/components/schemas/EquipmentEngineRpm"
          },
          "engineSeconds" : {
            "$ref" : "#/components/schemas/EquipmentEngineSeconds"
          },
          "engineState" : {
            "$ref" : "#/components/schemas/EquipmentEngineState"
          },
          "fuelPercent" : {
            "$ref" : "#/components/schemas/EquipmentFuelPercent"
          },
          "gatewayEngineSeconds" : {
            "$ref" : "#/components/schemas/EquipmentGatewayEngineSeconds"
          },
          "gatewayEngineState" : {
            "$ref" : "#/components/schemas/EquipmentGatewayEngineState"
          },
          "gpsOdometerMeters" : {
            "$ref" : "#/components/schemas/EquipmentGpsOdometerMeters"
          },
          "id" : {
            "$ref" : "#/components/schemas/EquipmentId"
          },
          "name" : {
            "$ref" : "#/components/schemas/EquipmentName"
          },
          "obdEngineSeconds" : {
            "$ref" : "#/components/schemas/EquipmentObdEngineSeconds"
          },
          "obdEngineState" : {
            "$ref" : "#/components/schemas/EquipmentObdEngineState"
          }
        },
        "description" : "A unit of equipment and its most recent stat."
      },
      "FftSpectraDataPoint_fftSpectra" : {
        "type" : "object",
        "properties" : {
          "frequencies" : {
            "type" : "array",
            "description" : "Frequencies",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "x" : {
            "type" : "array",
            "description" : "X-axis data",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "y" : {
            "type" : "array",
            "description" : "Y-axis data",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "z" : {
            "type" : "array",
            "description" : "Z-axis data",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          }
        },
        "description" : "FFT spectrum data"
      },
      "J1939D1StatusDataPoint_value" : {
        "type" : "object",
        "properties" : {
          "amberLampStatus" : {
            "type" : "number",
            "format" : "int32"
          },
          "fmi" : {
            "type" : "number",
            "format" : "int32"
          },
          "milStatus" : {
            "type" : "number",
            "format" : "int32"
          },
          "occuranceCount" : {
            "type" : "number",
            "format" : "int32"
          },
          "protectLampStatus" : {
            "type" : "number",
            "format" : "int32"
          },
          "redLampStatus" : {
            "type" : "number",
            "format" : "int32"
          },
          "spn" : {
            "type" : "number",
            "format" : "int32"
          },
          "txId" : {
            "type" : "number",
            "format" : "int32"
          }
        },
        "description" : "A single J1939D1 status"
      },
      "LocationDataPoint_gpsLocation_place" : {
        "type" : "object",
        "properties" : {
          "city" : {
            "type" : "string",
            "description" : "City",
            "format" : "string",
            "example" : "San Francisco"
          },
          "houseNumber" : {
            "type" : "string",
            "description" : "House number",
            "format" : "string",
            "example" : "350"
          },
          "neighborhood" : {
            "type" : "string",
            "description" : "Neighborhood",
            "format" : "string",
            "example" : "Castro"
          },
          "poi" : {
            "type" : "string",
            "description" : "POI",
            "format" : "string",
            "example" : "400"
          },
          "postcode" : {
            "type" : "string",
            "description" : "Postcode",
            "format" : "string",
            "example" : "94103"
          },
          "state" : {
            "type" : "string",
            "description" : "State",
            "format" : "string",
            "example" : "CA"
          },
          "street" : {
            "type" : "string",
            "description" : "Street",
            "format" : "string",
            "example" : "Rhode Island"
          }
        },
        "description" : "Address of the location"
      },
      "LocationDataPoint_gpsLocation" : {
        "type" : "object",
        "properties" : {
          "formattedAddress" : {
            "type" : "string",
            "description" : "Formatted address of the location",
            "format" : "string",
            "example" : "350 Rhode Island St, San Francisco CA, 94103"
          },
          "gpsMetersPerSecond" : {
            "type" : "number",
            "description" : "Speed of GPS (meters per second)",
            "format" : "double",
            "example" : 35.5
          },
          "headingDegrees" : {
            "type" : "number",
            "description" : "Heading degrees",
            "format" : "double",
            "example" : 91.2
          },
          "latitude" : {
            "type" : "number",
            "description" : "Latitude of the location",
            "format" : "double",
            "example" : 42.44817
          },
          "longitude" : {
            "type" : "number",
            "description" : "Longitude of the location",
            "format" : "double",
            "example" : -71.224716
          },
          "place" : {
            "$ref" : "#/components/schemas/LocationDataPoint_gpsLocation_place"
          }
        },
        "description" : "GPS location information of the data input's datapoint."
      },
      "OrganizationInfo_carrierSettings" : {
        "type" : "object",
        "properties" : {
          "carrierName" : {
            "maxLength" : 255,
            "type" : "string",
            "description" : "Carrier for a given organization.",
            "example" : "Acme Inc."
          },
          "dotNumber" : {
            "type" : "integer",
            "description" : "Carrier US DOT Number for the organization.",
            "format" : "int64",
            "example" : 98231
          },
          "mainOfficeAddress" : {
            "maxLength" : 255,
            "type" : "string",
            "description" : "Main office address for a given organization.",
            "example" : "1234 Pear St., Scranton, PA 62814"
          }
        },
        "description" : "Carrier for a given organization."
      },
      "RouteFeedResponse_inner" : {
        "required" : [ "changes", "route", "source", "time", "type" ],
        "type" : "object",
        "properties" : {
          "changes" : {
            "required" : [ "after", "before" ],
            "type" : "object",
            "properties" : {
              "after" : {
                "$ref" : "#/components/schemas/MinimalRoute"
              },
              "before" : {
                "$ref" : "#/components/schemas/MinimalRoute"
              }
            },
            "description" : "A diff of the changes for this route update."
          },
          "operation" : {
            "type" : "string",
            "description" : "The operation that was performed as part of this route update.",
            "example" : "stop skipped",
            "enum" : [ "stop scheduled", "stop en route", "stop skipped", "stop arrived", "stop departed", "stop ETA updated" ]
          },
          "route" : {
            "$ref" : "#/components/schemas/routeTinyResponse"
          },
          "source" : {
            "type" : "string",
            "description" : "The source of this route update. Updates that are triggered by time or by the route being completed are 'automatic'.",
            "example" : "automatic",
            "enum" : [ "automatic", "driver", "admin" ],
            "default" : "automatic"
          },
          "time" : {
            "$ref" : "#/components/schemas/time"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of route update. The route tracking updates occur as a route is completed and stops transition from one state to another. Currently only Route Tracking updates are supported, but this will change in the future when additional types are added.",
            "example" : "route tracking",
            "enum" : [ "route tracking" ],
            "default" : "route tracking"
          }
        },
        "description" : "Route feed response."
      },
      "V1Asset_cable" : {
        "type" : "object",
        "properties" : {
          "assetType" : {
            "type" : "string",
            "description" : "Asset type",
            "example" : "Reefer (Thermo King)"
          }
        }
      },
      "V1AssetCurrentLocationsResponse_cable" : {
        "type" : "object",
        "properties" : {
          "assetType" : {
            "type" : "string",
            "description" : "Asset type",
            "example" : "Reefer (Thermo King)"
          }
        },
        "description" : "The cable connected to the asset"
      },
      "V1AssetLocationResponse_inner" : {
        "type" : "object",
        "properties" : {
          "latitude" : {
            "type" : "number",
            "description" : "The latitude of the location in degrees.",
            "example" : 37.0
          },
          "location" : {
            "type" : "string",
            "description" : "The best effort (street,city,state) for the latitude and longitude.",
            "example" : "525 York, San Francisco, CA"
          },
          "longitude" : {
            "type" : "number",
            "description" : "The longitude of the location in degrees.",
            "example" : -122.7
          },
          "speedMilesPerHour" : {
            "type" : "number",
            "description" : "The speed calculated from GPS that the asset was traveling at in miles per hour.",
            "example" : 35.0
          },
          "time" : {
            "type" : "number",
            "description" : "Time in Unix milliseconds since epoch when the asset was at the location.",
            "example" : 12314151
          }
        },
        "description" : "Asset location details."
      },
      "V1AssetReeferResponse_reeferStats_alarms" : {
        "type" : "object",
        "properties" : {
          "alarmCode" : {
            "type" : "integer",
            "description" : "ID of the alarm",
            "format" : "int64",
            "example" : 102
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the alarm",
            "example" : "Check Return Air Sensor"
          },
          "operatorAction" : {
            "type" : "string",
            "description" : "Recommended operator action",
            "example" : "Check and repair at end of trip"
          },
          "severity" : {
            "type" : "integer",
            "description" : "Severity of the alarm: 1: OK to run, 2: Check as specified, 3: Take immediate action",
            "format" : "int64",
            "example" : 1
          }
        }
      },
      "V1AssetReeferResponse_reeferStats_alarms_1" : {
        "type" : "object",
        "properties" : {
          "alarms" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/V1AssetReeferResponse_reeferStats_alarms"
            }
          },
          "changedAtMs" : {
            "type" : "integer",
            "description" : "Timestamp when the alarms were reported, in Unix milliseconds since epoch",
            "format" : "int64",
            "example" : 1453449599999
          }
        }
      },
      "V1AssetReeferResponse_reeferStats_engineHours" : {
        "type" : "object",
        "properties" : {
          "changedAtMs" : {
            "type" : "integer",
            "description" : "Timestamp in Unix milliseconds since epoch.",
            "format" : "int64",
            "example" : 1453449599999
          },
          "engineHours" : {
            "type" : "integer",
            "description" : "Engine hours of the reefer.",
            "format" : "int64",
            "example" : 1200
          }
        }
      },
      "V1AssetReeferResponse_reeferStats_fuelPercentage" : {
        "type" : "object",
        "properties" : {
          "changedAtMs" : {
            "type" : "integer",
            "description" : "Timestamp in Unix milliseconds since epoch.",
            "format" : "int64",
            "example" : 1453449599999
          },
          "fuelPercentage" : {
            "type" : "integer",
            "description" : "Fuel percentage of the reefer.",
            "format" : "int64",
            "example" : 99
          }
        }
      },
      "V1AssetReeferResponse_reeferStats_powerStatus" : {
        "type" : "object",
        "properties" : {
          "changedAtMs" : {
            "type" : "integer",
            "description" : "Timestamp in Unix milliseconds since epoch.",
            "format" : "int64",
            "example" : 1453449599999
          },
          "status" : {
            "type" : "string",
            "description" : "Power status of the reefer.",
            "example" : "Active (Continuous)"
          }
        }
      },
      "V1AssetReeferResponse_reeferStats_returnAirTemp" : {
        "type" : "object",
        "properties" : {
          "changedAtMs" : {
            "type" : "integer",
            "description" : "Timestamp in Unix milliseconds since epoch.",
            "format" : "int64",
            "example" : 1453449599999
          },
          "tempInMilliC" : {
            "type" : "integer",
            "description" : "Return air temperature in millidegree Celsius.",
            "format" : "int64",
            "example" : 31110
          }
        }
      },
      "V1AssetReeferResponse_reeferStats_setPoint" : {
        "type" : "object",
        "properties" : {
          "changedAtMs" : {
            "type" : "integer",
            "description" : "Timestamp in Unix milliseconds since epoch.",
            "format" : "int64",
            "example" : 1453449599999
          },
          "tempInMilliC" : {
            "type" : "integer",
            "description" : "Set point temperature in millidegree Celsius.",
            "format" : "int64",
            "example" : 31110
          }
        }
      },
      "V1AssetReeferResponse_reeferStats" : {
        "type" : "object",
        "properties" : {
          "alarms" : {
            "type" : "array",
            "description" : "Reefer alarms",
            "items" : {
              "$ref" : "#/components/schemas/V1AssetReeferResponse_reeferStats_alarms_1"
            }
          },
          "engineHours" : {
            "type" : "array",
            "description" : "Engine hours of the reefer",
            "items" : {
              "$ref" : "#/components/schemas/V1AssetReeferResponse_reeferStats_engineHours"
            }
          },
          "fuelPercentage" : {
            "type" : "array",
            "description" : "Fuel percentage of the reefer",
            "items" : {
              "$ref" : "#/components/schemas/V1AssetReeferResponse_reeferStats_fuelPercentage"
            }
          },
          "powerStatus" : {
            "type" : "array",
            "description" : "Power status of the reefer",
            "items" : {
              "$ref" : "#/components/schemas/V1AssetReeferResponse_reeferStats_powerStatus"
            }
          },
          "returnAirTemp" : {
            "type" : "array",
            "description" : "Return air temperature of the reefer",
            "items" : {
              "$ref" : "#/components/schemas/V1AssetReeferResponse_reeferStats_returnAirTemp"
            }
          },
          "setPoint" : {
            "type" : "array",
            "description" : "Set point temperature of the reefer",
            "items" : {
              "$ref" : "#/components/schemas/V1AssetReeferResponse_reeferStats_setPoint"
            }
          }
        }
      },
      "V1AssetsReefer_reeferStats_ambientAirTemperature" : {
        "type" : "object",
        "properties" : {
          "changedAtMs" : {
            "type" : "integer",
            "description" : "Timestamp in Unix milliseconds since epoch.",
            "format" : "int64",
            "example" : 1453449599999
          },
          "tempInMilliC" : {
            "type" : "integer",
            "description" : "Ambient temperature in millidegree Celsius.",
            "format" : "int64",
            "example" : 31110
          }
        }
      },
      "V1AssetsReefer_reeferStats_dischargeAirTemperature" : {
        "type" : "object",
        "properties" : {
          "changedAtMs" : {
            "type" : "integer",
            "description" : "Timestamp in Unix milliseconds since epoch.",
            "format" : "int64",
            "example" : 1453449599999
          },
          "tempInMilliC" : {
            "type" : "integer",
            "description" : "Discharge temperature in millidegree Celsius.",
            "format" : "int64",
            "example" : 31110
          }
        }
      },
      "V1AssetsReefer_reeferStats_powerStatus" : {
        "type" : "object",
        "properties" : {
          "changedAtMs" : {
            "type" : "integer",
            "description" : "Timestamp in Unix milliseconds since epoch.",
            "format" : "int64",
            "example" : 1453449599999
          },
          "status" : {
            "type" : "string",
            "description" : "Power status of the reefer.",
            "example" : "Active (Continuous)",
            "enum" : [ "Off", "Active", "Active (Start/Stop)", "Active (Continuous)" ]
          }
        }
      },
      "V1AssetsReefer_reeferStats" : {
        "type" : "object",
        "properties" : {
          "ambientAirTemperature" : {
            "type" : "array",
            "description" : "Ambient temperature of the reefer. This is the temperature of the air around the Samsara Asset Gateway.",
            "items" : {
              "$ref" : "#/components/schemas/V1AssetsReefer_reeferStats_ambientAirTemperature"
            }
          },
          "dischargeAirTemperature" : {
            "type" : "array",
            "description" : "Discharge air temperature of the reefer. This is the temperature of the air as it leaves the cooling unit.",
            "items" : {
              "$ref" : "#/components/schemas/V1AssetsReefer_reeferStats_dischargeAirTemperature"
            }
          },
          "engineHours" : {
            "type" : "array",
            "description" : "Engine hours of the reefer",
            "items" : {
              "$ref" : "#/components/schemas/V1AssetReeferResponse_reeferStats_engineHours"
            }
          },
          "fuelPercentage" : {
            "type" : "array",
            "description" : "Fuel percentage of the reefer",
            "items" : {
              "$ref" : "#/components/schemas/V1AssetReeferResponse_reeferStats_fuelPercentage"
            }
          },
          "powerStatus" : {
            "type" : "array",
            "description" : "Power status of the reefer",
            "items" : {
              "$ref" : "#/components/schemas/V1AssetsReefer_reeferStats_powerStatus"
            }
          },
          "reeferAlarms" : {
            "type" : "array",
            "description" : "Reefer alarms",
            "items" : {
              "$ref" : "#/components/schemas/V1AssetReeferResponse_reeferStats_alarms_1"
            }
          },
          "returnAirTemperature" : {
            "type" : "array",
            "description" : "Return air temperature of the reefer. This is the temperature read by the reefer module (Carrier, Thermo King) that shows the temperature of the air as it enters the system.",
            "items" : {
              "$ref" : "#/components/schemas/V1AssetReeferResponse_reeferStats_returnAirTemp"
            }
          },
          "setPoint" : {
            "type" : "array",
            "description" : "Set point temperature of the reefer",
            "items" : {
              "$ref" : "#/components/schemas/V1AssetReeferResponse_reeferStats_setPoint"
            }
          }
        },
        "description" : "Contains all the state changes of the reefer for the included stat types. Each state change is recorded independently, so the number of records in each array may differ depending on when that stat changed state. Stat types with a continuous value (such as temperature) will be recorded at different rates depending on the reefer, but generally readings have a frequency on the order of seconds."
      },
      "V1CargoResponse_sensors" : {
        "type" : "object",
        "properties" : {
          "cargoEmpty" : {
            "type" : "boolean",
            "description" : "Flag indicating whether the current cargo is empty or loaded.",
            "example" : true
          },
          "cargoStatusTime" : {
            "type" : "string",
            "description" : "The timestamp of reported cargo status, specified in RFC 3339 time.",
            "example" : "2019-04-17T16:42:55Z"
          },
          "id" : {
            "type" : "integer",
            "description" : "ID of the sensor.",
            "format" : "int64",
            "example" : 122
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the sensor.",
            "example" : "Trailer Cargo V1Sensor"
          },
          "trailerId" : {
            "type" : "integer",
            "description" : "ID of the trailer associated with the sensor for the data point. If no trailer is connected, this parameter will not be reported.",
            "example" : 123
          },
          "vehicleId" : {
            "type" : "integer",
            "description" : "ID of the vehicle associated with the sensor for the data point. If no vehicle is connected, this parameter will not be reported.",
            "example" : 124
          }
        }
      },
      "V1DataInputHistoryResponse_points" : {
        "type" : "object",
        "properties" : {
          "timeMs" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1453449599999
          },
          "value" : {
            "type" : "number",
            "format" : "double",
            "example" : 12.332
          }
        }
      },
      "V1DocumentConditionalFields_inner" : {
        "type" : "object",
        "properties" : {
          "conditionalFieldIndexFirst" : {
            "type" : "number",
            "description" : "Start index of the conditional fields set"
          },
          "conditionalFieldIndexLast" : {
            "type" : "number",
            "description" : "End index of the conditional fields set"
          },
          "triggeringFieldIndex" : {
            "type" : "number",
            "description" : "Index of the multiple choice field that triggers the conditional fields"
          },
          "triggeringFieldValue" : {
            "type" : "string",
            "description" : "Multiple choice value that triggers the conditional fields"
          }
        }
      },
      "V1DocumentCreateFields_inner" : {
        "required" : [ "label", "valueType" ],
        "type" : "object",
        "properties" : {
          "dateTimeValue" : {
            "type" : "object",
            "properties" : {
              "dateTimeMs" : {
                "type" : "number"
              }
            },
            "description" : "The date time value to populate the field. Use with ValueType_DateTime. Cannot be ommited or set to null"
          },
          "label" : {
            "type" : "string",
            "description" : "label of the field"
          },
          "multipleChoiceValue" : {
            "type" : "array",
            "description" : "The multiple choice value to populate the field. Use with ValueType_MultipleChoice. Cannot be ommited or set to null",
            "items" : {
              "type" : "object",
              "properties" : {
                "selected" : {
                  "type" : "boolean"
                },
                "value" : {
                  "type" : "string"
                }
              },
              "description" : "An option item for a multiple choice field"
            }
          },
          "numberValue" : {
            "type" : "number",
            "description" : "The number value to populate the field. Use with ValueType_Number. Can be ommited or set to null"
          },
          "stringValue" : {
            "type" : "string",
            "description" : "The string value to populate the field. Use with ValueType_String. Can be ommited or set to null"
          },
          "value" : {
            "type" : "object",
            "description" : "DEPRECATED. Please use one of the type-specific parameters."
          },
          "valueType" : {
            "type" : "string",
            "description" : "The valueType of the field. Use with the corresponding {type of field}Value attribute. Signature and photo fields do not support values added via API. Their values must be omitted or set to null. For example:\n\n```\n\n\"fields\": [\n\n  {\n\n    \"label\": \"Signature\",\n\n    \"valueType\": \"ValueType_Signature\"\n\n  },\n\n  ... more fields\n\n]\n\n```"
          }
        },
        "description" : "Field item parameters."
      },
      "V1DocumentFieldType_multipleChoiceValueTypeMetadata_multipleChoiceOptionLabels" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string",
            "example" : "option 1"
          }
        }
      },
      "V1DocumentFieldType_multipleChoiceValueTypeMetadata" : {
        "type" : "object",
        "properties" : {
          "multipleChoiceOptionLabels" : {
            "type" : "array",
            "description" : "Array of the multiple choice option labels for the field",
            "items" : {
              "$ref" : "#/components/schemas/V1DocumentFieldType_multipleChoiceValueTypeMetadata_multipleChoiceOptionLabels"
            }
          }
        },
        "description" : "Metadata about the multiple choice field. Only present for value type `ValueType_MultipleChoice`"
      },
      "V1DocumentFieldType_numberValueTypeMetadata" : {
        "type" : "object",
        "properties" : {
          "numDecimalPlaces" : {
            "type" : "number",
            "description" : "The number of decimal places allowed for this number field",
            "format" : "int64",
            "example" : 2.0
          }
        },
        "description" : "Metadata about the number field. Only present for value type `ValueType_Number`"
      },
      "V1DocumentFieldType_signatureValueTypeMetadata" : {
        "type" : "object",
        "properties" : {
          "legalText" : {
            "type" : "string",
            "description" : "Legal text displayed alongside signature",
            "example" : "I consent on behalf of myself and my employer to using electronic signatures in this transaction. I understand that I can request a copy of the signed documentation from the party requesting my signature."
          }
        },
        "description" : "Metadata about the signature field. Only present for value type `ValueType_Signature`"
      },
      "V1DocumentFields_inner" : {
        "type" : "object",
        "properties" : {
          "barcodeValue" : {
            "type" : "array",
            "description" : "The value of a barcode scanning field. Only present for barcode scanning fields",
            "items" : {
              "type" : "object",
              "properties" : {
                "barcodeType" : {
                  "type" : "string",
                  "description" : "The barcode type that was scanned"
                },
                "barcodeValue" : {
                  "type" : "string",
                  "description" : "The captured barcode value"
                }
              }
            }
          },
          "dateTimeValue" : {
            "type" : "object",
            "properties" : {
              "dateTimeMs" : {
                "type" : "number",
                "description" : "Date time value in milliseconds."
              }
            },
            "description" : "The value of a date time field. Only present for date time fields."
          },
          "label" : {
            "type" : "string",
            "description" : "The name of a field."
          },
          "multipleChoiceValue" : {
            "type" : "array",
            "description" : "The value of a multiple choice field. Only present for multiple choice fields.",
            "items" : {
              "type" : "object",
              "properties" : {
                "selected" : {
                  "type" : "boolean",
                  "description" : "Boolean representing if the choice has been selected."
                },
                "value" : {
                  "type" : "string",
                  "description" : "Description of the choice."
                }
              }
            }
          },
          "numberValue" : {
            "type" : "number",
            "description" : "The value of a number field. Only present for number fields.",
            "format" : "float"
          },
          "photoValue" : {
            "type" : "array",
            "description" : "The value of a photo or document scanning field. Only present for photo or document scanning fields.",
            "items" : {
              "type" : "object",
              "properties" : {
                "url" : {
                  "type" : "string",
                  "description" : "Url of the photo."
                },
                "uuid" : {
                  "type" : "string",
                  "description" : "Uuid of the photo."
                }
              }
            }
          },
          "signatureValue" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "Name of the signee for a signature field"
              },
              "signedAtMs" : {
                "type" : "number",
                "description" : "Date time value in milliseconds of the time a signature was captured."
              },
              "url" : {
                "type" : "string",
                "description" : "Url of a signature field's PNG signature image."
              },
              "uuid" : {
                "type" : "string",
                "description" : "Uuid of a signature field"
              }
            },
            "description" : "The value of a signature field. Only present for signature fields."
          },
          "stringValue" : {
            "type" : "string",
            "description" : "The value of a string field. Only present for string fields."
          },
          "value" : {
            "type" : "object",
            "description" : "The value of a field. Type varies by field type."
          },
          "valueType" : {
            "type" : "string",
            "description" : "The value type of a field."
          }
        }
      },
      "V1DoorResponse_sensors" : {
        "type" : "object",
        "properties" : {
          "doorClosed" : {
            "type" : "boolean",
            "description" : "Flag indicating whether the current door is closed or open.",
            "example" : true
          },
          "doorStatusTime" : {
            "type" : "string",
            "description" : "The timestamp of reported door status, specified in RFC 3339 time.",
            "example" : "2019-04-17T16:42:55Z"
          },
          "id" : {
            "type" : "integer",
            "description" : "ID of the sensor.",
            "format" : "int64",
            "example" : 122
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the sensor.",
            "example" : "Trailer Door V1Sensor"
          },
          "trailerId" : {
            "type" : "integer",
            "description" : "ID of the trailer associated with the sensor for the data point. If no trailer is connected, this parameter will not be reported.",
            "example" : 123
          },
          "vehicleId" : {
            "type" : "integer",
            "description" : "ID of the vehicle associated with the sensor for the data point. If no vehicle is connected, this parameter will not be reported.",
            "example" : 124
          }
        }
      },
      "V1DriverDailyLogResponse_days" : {
        "type" : "object",
        "properties" : {
          "activeHours" : {
            "type" : "number",
            "description" : "Hours spent on duty or driving, rounded to two decimal places.",
            "format" : "double",
            "example" : 5.4
          },
          "activeMs" : {
            "type" : "integer",
            "description" : "Milliseconds spent on duty or driving.",
            "format" : "int64",
            "example" : 691200
          },
          "certified" : {
            "type" : "boolean",
            "description" : "Whether this HOS day chart was certified by the driver."
          },
          "certifiedAtMs" : {
            "type" : "number",
            "description" : "Unix epoch time (in ms) of time when this chart was certified. If this chart is uncertified, 0.",
            "format" : "int64"
          },
          "distanceMiles" : {
            "type" : "number",
            "description" : "Distance driven in miles, rounded to two decimal places.",
            "format" : "double",
            "example" : 123.24
          },
          "endMs" : {
            "type" : "integer",
            "description" : "End of the HOS day, specified in milliseconds UNIX time.",
            "example" : 1473836400000
          },
          "shippingDocIds" : {
            "type" : "array",
            "description" : "List of customer shipping document IDs associated with the driver for the day.",
            "example" : [ "14334", "Shipping Document ID 1" ],
            "items" : {
              "type" : "string"
            }
          },
          "startMs" : {
            "type" : "integer",
            "description" : "Start of the HOS day, specified in milliseconds UNIX time.",
            "example" : 1473750000000
          },
          "trailerIds" : {
            "type" : "array",
            "description" : "List of trailer ID's associated with the driver for the day.",
            "example" : [ "10293", "Trailer ID 1" ],
            "items" : {
              "type" : "string"
            }
          },
          "vehicleIds" : {
            "type" : "object",
            "properties" : { },
            "description" : "List of vehicle ID's associated with the driver for the day.",
            "example" : [ 192319, 12958 ]
          }
        }
      },
      "V1DvirBase_authorSignature" : {
        "type" : "object",
        "properties" : {
          "driverId" : {
            "type" : "integer",
            "description" : "ID of the driver who signed the DVIR. Will not be returned if mechanicUserId is returned.",
            "format" : "int64",
            "example" : 2581
          },
          "email" : {
            "type" : "string",
            "description" : "Email of the  driver|mechanic who signed the DVIR.",
            "example" : "j.smith@yahoo.com"
          },
          "mechanicUserId" : {
            "type" : "integer",
            "description" : "ID of the mechanic who signed the DVIR. Will not be returned if driverId is returned.",
            "format" : "int64",
            "example" : 14849
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the driver or mechanic who signed the DVIR.",
            "example" : "John Smith"
          },
          "signedAt" : {
            "type" : "integer",
            "description" : "The time in millis when the DVIR was signed",
            "format" : "int64",
            "example" : 12535500000
          },
          "type" : {
            "type" : "string",
            "description" : "Type corresponds to whether the signature corresponds to driver|mechanic.",
            "example" : "driver"
          },
          "username" : {
            "type" : "string",
            "description" : "Username of the  driver|mechanic who signed the DVIR.",
            "example" : "jsmith"
          }
        },
        "description" : "The authors signature for the DVIR."
      },
      "V1DvirBase_mechanicOrAgentSignature" : {
        "type" : "object",
        "properties" : {
          "driverId" : {
            "type" : "integer",
            "description" : "ID of the driver who signed the DVIR. Will not be returned if mechanicUserId is returned.",
            "format" : "int64",
            "example" : 2581
          },
          "email" : {
            "type" : "string",
            "description" : "Email of the  agent|mechanic who signed the DVIR.",
            "example" : "j.smith@yahoo.com"
          },
          "mechanicUserId" : {
            "type" : "integer",
            "description" : "ID of the mechanic who signed the DVIR. Will not be returned if driverId is returned.",
            "format" : "int64",
            "example" : 14849
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the agent or mechanic who signed the DVIR.",
            "example" : "John Smith"
          },
          "signedAt" : {
            "type" : "integer",
            "description" : "The time in millis when the DVIR was signed",
            "format" : "int64",
            "example" : 12535500000
          },
          "type" : {
            "type" : "string",
            "description" : "Type corresponds to whether the signature corresponds to driver|mechanic.",
            "example" : "driver"
          },
          "username" : {
            "type" : "string",
            "description" : "Username of the  agent|mechanic who signed the DVIR.",
            "example" : "jsmith"
          }
        },
        "description" : "The mechanic's or agent's signature for the DVIR."
      },
      "V1DvirBase_nextDriverSignature" : {
        "type" : "object",
        "properties" : {
          "driverId" : {
            "type" : "integer",
            "description" : "ID of the driver who signed the DVIR",
            "format" : "int64",
            "example" : 2581
          },
          "email" : {
            "type" : "string",
            "description" : "Email of the  driver who signed the next DVIR on this vehicle.",
            "example" : "j.smith@yahoo.com"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the driver who signed the next DVIR on this vehicle.",
            "example" : "John Smith"
          },
          "signedAt" : {
            "type" : "integer",
            "description" : "The time in millis when the next driver signed the DVIR on this vehicle.",
            "format" : "int64",
            "example" : 12535500000
          },
          "type" : {
            "type" : "string",
            "description" : "Type corresponds to driver.",
            "example" : "driver"
          },
          "username" : {
            "type" : "string",
            "description" : "Username of the  driver who signed the next DVIR on this vehicle.",
            "example" : "jsmith"
          }
        },
        "description" : "The next driver signature for the DVIR."
      },
      "V1DvirBase_vehicle" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The vehicle id on which DVIR was done.",
            "format" : "int64",
            "example" : 19
          },
          "name" : {
            "type" : "string",
            "description" : "The vehicle on which DVIR was done.",
            "example" : "Storer's vehicle 19"
          }
        },
        "description" : "The vehicle on which DVIR was done."
      },
      "V1FleetVehiclesLocations_inner" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "ID of the vehicle.",
            "format" : "int64",
            "example" : 112
          },
          "locations" : {
            "$ref" : "#/components/schemas/V1FleetVehicleLocations"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the vehicle.",
            "example" : "Truck A7"
          }
        }
      },
      "V1HosAuthenticationLogsResponse_authenticationLogs" : {
        "type" : "object",
        "properties" : {
          "actionType" : {
            "type" : "string",
            "description" : "The log type - one of 'signin' or 'signout'",
            "example" : "signin"
          },
          "address" : {
            "type" : "string",
            "description" : "DEPRECATED: THIS FIELD MAY NOT BE POPULATED",
            "example" : "THIS FIELD MAY NOT BE POPULATED"
          },
          "addressName" : {
            "type" : "string",
            "description" : "DEPRECATED: THIS FIELD MAY NOT BE POPULATED",
            "example" : "THIS FIELD MAY NOT BE POPULATED"
          },
          "city" : {
            "type" : "string",
            "description" : "DEPRECATED: THIS FIELD MAY NOT BE POPULATED",
            "example" : "THIS FIELD MAY NOT BE POPULATED"
          },
          "happenedAtMs" : {
            "type" : "integer",
            "description" : "The time at which the event was recorded in UNIX milliseconds.",
            "format" : "int64",
            "example" : 1462881998034
          },
          "state" : {
            "type" : "string",
            "description" : "DEPRECATED: THIS FIELD MAY NOT BE POPULATED",
            "example" : "THIS FIELD MAY NOT BE POPULATED"
          }
        }
      },
      "V1HosLogsResponse_logs" : {
        "type" : "object",
        "properties" : {
          "codriverIds" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "description" : "Ids of codrivers during any of the logged trips",
              "example" : 445.0
            }
          },
          "driverId" : {
            "type" : "integer",
            "description" : "ID of the driver.",
            "format" : "int64",
            "example" : 444
          },
          "groupId" : {
            "type" : "integer",
            "description" : "Deprecated.",
            "format" : "int64",
            "example" : 101
          },
          "hosStatusType" : {
            "type" : "string",
            "description" : "The Hours of Service status type. One of `OFF_DUTY`, `SLEEPER_BED`, `DRIVING`, `ON_DUTY`, `YARD_MOVE`, `PERSONAL_CONVEYANCE`.",
            "example" : "OFF_DUTY"
          },
          "locCity" : {
            "type" : "string",
            "description" : "City in which the log was recorded.",
            "example" : "Ahwatukee"
          },
          "locLat" : {
            "type" : "number",
            "description" : "Latitude at which the log was recorded.",
            "format" : "float",
            "example" : 23.413702
          },
          "locLng" : {
            "type" : "number",
            "description" : "Longitude at which the log was recorded.",
            "format" : "float",
            "example" : -98.50289
          },
          "locName" : {
            "type" : "string",
            "description" : "Name of location at which the log was recorded.",
            "example" : "McLean Site A"
          },
          "locState" : {
            "type" : "string",
            "description" : "State in which the log was recorded.",
            "example" : "Arizona"
          },
          "logStartMs" : {
            "type" : "integer",
            "description" : "The time at which the log/HOS status started in UNIX milliseconds.",
            "format" : "int64",
            "example" : 1462881998034
          },
          "remark" : {
            "type" : "string",
            "description" : "Remark associated with the log entry.",
            "example" : "Lunch Break"
          },
          "vehicleId" : {
            "type" : "integer",
            "description" : "ID of the vehicle.",
            "format" : "int64",
            "example" : 112
          }
        }
      },
      "V1HumidityResponse_sensors" : {
        "type" : "object",
        "properties" : {
          "humidity" : {
            "type" : "integer",
            "description" : "Currently reported relative humidity in percent, from 0-100.",
            "example" : 53
          },
          "humidityTime" : {
            "type" : "string",
            "description" : "The timestamp of reported relative humidity, specified in RFC 3339 time.",
            "example" : "2019-04-17T16:42:55Z"
          },
          "id" : {
            "type" : "integer",
            "description" : "ID of the sensor.",
            "format" : "int64",
            "example" : 122
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the sensor.",
            "example" : "Freezer Humidity V1Sensor"
          },
          "trailerId" : {
            "type" : "integer",
            "description" : "ID of the trailer associated with the sensor for the data point. If no trailer is connected, this parameter will not be reported.",
            "example" : 123
          },
          "vehicleId" : {
            "type" : "integer",
            "description" : "ID of the vehicle associated with the sensor for the data point. If no vehicle is connected, this parameter will not be reported.",
            "example" : 124
          }
        }
      },
      "V1MachineHistoryResponse_vibrations" : {
        "type" : "object",
        "properties" : {
          "X" : {
            "type" : "number",
            "format" : "double",
            "example" : 0.01
          },
          "Y" : {
            "type" : "number",
            "format" : "double",
            "example" : 1.23
          },
          "Z" : {
            "type" : "number",
            "format" : "double",
            "example" : 2.55
          },
          "time" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1453449599999
          }
        }
      },
      "V1MachineHistoryResponse_machines" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "Machine ID",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "description" : "Machine name",
            "example" : "1/3 HP Motor"
          },
          "vibrations" : {
            "type" : "array",
            "description" : "List of vibration datapoints, with timestamp and vibration measurement for x/y/z axis in mm/s",
            "items" : {
              "$ref" : "#/components/schemas/V1MachineHistoryResponse_vibrations"
            }
          }
        }
      },
      "V1ProgramsForTheCameraResponse_inner" : {
        "type" : "object",
        "properties" : {
          "programId" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1
          },
          "programName" : {
            "type" : "string",
            "example" : "Barcode verification program"
          }
        }
      },
      "V1SensorHistoryResponse_results" : {
        "type" : "object",
        "properties" : {
          "series" : {
            "type" : "array",
            "description" : "List of datapoints, one for each requested (sensor, field) pair.",
            "items" : {
              "type" : "integer",
              "format" : "int64",
              "example" : 1
            }
          },
          "timeMs" : {
            "type" : "integer",
            "description" : "Timestamp in UNIX milliseconds.",
            "example" : 1453449599999
          }
        }
      },
      "V1TemperatureResponse_sensors" : {
        "type" : "object",
        "properties" : {
          "ambientTemperature" : {
            "type" : "integer",
            "description" : "Currently reported ambient temperature in millidegrees celsius.",
            "example" : 11057
          },
          "ambientTemperatureTime" : {
            "type" : "string",
            "description" : "The timestamp of reported ambient temperature, specified in RFC 3339 time.",
            "example" : "2019-04-17T16:42:55Z"
          },
          "id" : {
            "type" : "integer",
            "description" : "ID of the sensor.",
            "format" : "int64",
            "example" : 122
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the sensor.",
            "example" : "Freezer Temp V1Sensor"
          },
          "probeTemperature" : {
            "type" : "integer",
            "description" : "Currently reported probe temperature in millidegrees celsius. If no probe is connected, this parameter will not be reported.",
            "example" : -20145
          },
          "probeTemperatureTime" : {
            "type" : "string",
            "description" : "The timestamp of reported probe temperature, specified in RFC 3339 time.",
            "example" : "2019-04-17T16:42:55Z"
          },
          "trailerId" : {
            "type" : "integer",
            "description" : "ID of the trailer associated with the sensor for the data point. If no trailer is connected, this parameter will not be reported.",
            "example" : 123
          },
          "vehicleId" : {
            "type" : "integer",
            "description" : "ID of the vehicle associated with the sensor for the data point. If no vehicle is connected, this parameter will not be reported.",
            "example" : 124
          }
        }
      },
      "V1TripResponse_endAddress" : {
        "type" : "object",
        "properties" : {
          "address" : {
            "type" : "string",
            "description" : "The formatted address",
            "example" : "123 Main St, Sunnyvale, CA 94089"
          },
          "id" : {
            "type" : "number",
            "description" : "The ID of the address",
            "format" : "int64",
            "example" : 581.0
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the address",
            "example" : "Ramen Tatsunoya"
          }
        },
        "description" : "Text representation of nearest identifiable location to the end (latitude, longitude) coordinates."
      },
      "V1TripResponse_endCoordinates" : {
        "type" : "object",
        "properties" : {
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "example" : 23.413702345
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "example" : -91.502888123
          }
        },
        "description" : "End (latitude, longitude) in decimal degrees."
      },
      "V1TripResponse_startAddress" : {
        "type" : "object",
        "properties" : {
          "address" : {
            "type" : "string",
            "description" : "The formatted address",
            "example" : "123 Main St, Sunnyvale, CA 94089"
          },
          "id" : {
            "type" : "number",
            "description" : "The ID of the address",
            "format" : "int64",
            "example" : 581.0
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the address",
            "example" : "Ramen Tatsunoya"
          }
        },
        "description" : "Text representation of nearest identifiable location to the start (latitude, longitude) coordinates."
      },
      "V1TripResponse_startCoordinates" : {
        "type" : "object",
        "properties" : {
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "example" : 29.443702345
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "example" : -98.502888123
          }
        },
        "description" : "Start (latitude, longitude) in decimal degrees."
      },
      "V1TripResponse_trips" : {
        "type" : "object",
        "properties" : {
          "assetIds" : {
            "type" : "array",
            "description" : "List of associated asset IDs",
            "example" : [ 122 ],
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "codriverIds" : {
            "type" : "array",
            "description" : "List of codriver IDs",
            "example" : [ 122 ],
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "distanceMeters" : {
            "type" : "integer",
            "description" : "Length of the trip in meters. This value is calculated from the GPS data collected by the Samsara Vehicle Gateway.",
            "example" : 2500
          },
          "driverId" : {
            "type" : "integer",
            "description" : "ID of the driver.",
            "example" : 719
          },
          "endAddress" : {
            "$ref" : "#/components/schemas/V1TripResponse_endAddress"
          },
          "endCoordinates" : {
            "$ref" : "#/components/schemas/V1TripResponse_endCoordinates"
          },
          "endLocation" : {
            "type" : "string",
            "description" : "Geocoded street address of start (latitude, longitude) coordinates.",
            "example" : "571 S Lake Ave, Pasadena, CA 91101"
          },
          "endMs" : {
            "type" : "integer",
            "description" : "End of the trip in UNIX milliseconds. Ongoing trips are indicated by an endMs value of 9223372036854775807.",
            "example" : 1462881998034
          },
          "endOdometer" : {
            "type" : "integer",
            "description" : "Odometer reading (in meters) at the end of the trip. This is read from the vehicle's on-board diagnostics. If Samsara cannot read the vehicle's odometer values from on-board diagnostics, this value will be 0.",
            "example" : 210430500
          },
          "fuelConsumedMl" : {
            "type" : "integer",
            "description" : "Amount in milliliters of fuel consumed on this trip.",
            "example" : 75700
          },
          "startAddress" : {
            "$ref" : "#/components/schemas/V1TripResponse_startAddress"
          },
          "startCoordinates" : {
            "$ref" : "#/components/schemas/V1TripResponse_startCoordinates"
          },
          "startLocation" : {
            "type" : "string",
            "description" : "Geocoded street address of start (latitude, longitude) coordinates.",
            "example" : "16 N Fair Oaks Ave, Pasadena, CA 91103"
          },
          "startMs" : {
            "type" : "integer",
            "description" : "Beginning of the trip in UNIX milliseconds.",
            "example" : 1462878398034
          },
          "startOdometer" : {
            "type" : "integer",
            "description" : "Odometer reading (in meters) at the beginning of the trip. This is read from the vehicle's on-board diagnostics. If Samsara cannot read the vehicle's odometer values from on-board diagnostics, this value will be 0.",
            "example" : 210430450
          },
          "tollMeters" : {
            "type" : "integer",
            "description" : "Length in meters trip spent on toll roads.",
            "example" : 32000
          }
        }
      },
      "V1VehicleHarshEventResponse_location" : {
        "type" : "object",
        "properties" : {
          "address" : {
            "type" : "string",
            "description" : "Address of location where the harsh event occurred",
            "example" : "350 Rhode Island St, San Francisco, CA"
          },
          "latitude" : {
            "type" : "number",
            "description" : "Latitude of location where the harsh event occurred",
            "example" : 33.07614328
          },
          "longitude" : {
            "type" : "number",
            "description" : "Longitude of location where the harsh event occurred",
            "example" : -96.14907287
          }
        }
      },
      "V1VehicleMaintenance_j1939_checkEngineLight" : {
        "type" : "object",
        "properties" : {
          "emissionsIsOn" : {
            "type" : "boolean"
          },
          "protectIsOn" : {
            "type" : "boolean"
          },
          "stopIsOn" : {
            "type" : "boolean"
          },
          "warningIsOn" : {
            "type" : "boolean"
          }
        },
        "description" : "J1939 check engine lights."
      },
      "V1VehicleMaintenance_j1939_diagnosticTroubleCodes" : {
        "required" : [ "fmiId", "fmiText", "occurrenceCount", "spnDescription", "spnId", "txId" ],
        "type" : "object",
        "properties" : {
          "fmiId" : {
            "type" : "integer"
          },
          "fmiText" : {
            "type" : "string"
          },
          "occurrenceCount" : {
            "type" : "integer"
          },
          "spnDescription" : {
            "type" : "string"
          },
          "spnId" : {
            "type" : "integer"
          },
          "txId" : {
            "type" : "integer"
          }
        }
      },
      "V1VehicleMaintenance_j1939" : {
        "type" : "object",
        "properties" : {
          "checkEngineLight" : {
            "$ref" : "#/components/schemas/V1VehicleMaintenance_j1939_checkEngineLight"
          },
          "diagnosticTroubleCodes" : {
            "type" : "array",
            "description" : "J1939 DTCs.",
            "items" : {
              "$ref" : "#/components/schemas/V1VehicleMaintenance_j1939_diagnosticTroubleCodes"
            }
          }
        },
        "description" : "J1939 based data. Null if no data is available."
      },
      "V1VehicleMaintenance_passenger_checkEngineLight" : {
        "type" : "object",
        "properties" : {
          "isOn" : {
            "type" : "boolean"
          }
        },
        "description" : "Passenger vehicle check engine light."
      },
      "V1VehicleMaintenance_passenger_diagnosticTroubleCodes" : {
        "required" : [ "dtcDescription", "dtcId", "dtcShortCode" ],
        "type" : "object",
        "properties" : {
          "dtcDescription" : {
            "type" : "string"
          },
          "dtcId" : {
            "type" : "integer"
          },
          "dtcShortCode" : {
            "type" : "string"
          }
        }
      },
      "V1VehicleMaintenance_passenger" : {
        "type" : "object",
        "properties" : {
          "checkEngineLight" : {
            "$ref" : "#/components/schemas/V1VehicleMaintenance_passenger_checkEngineLight"
          },
          "diagnosticTroubleCodes" : {
            "type" : "array",
            "description" : "Passenger vehicle DTCs.",
            "items" : {
              "$ref" : "#/components/schemas/V1VehicleMaintenance_passenger_diagnosticTroubleCodes"
            }
          }
        },
        "description" : "Passenger vehicle data. Null if no data is available."
      },
      "V1VisionCamerasResponse_inner" : {
        "type" : "object",
        "properties" : {
          "cameraId" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1234512345999
          },
          "cameraName" : {
            "type" : "string",
            "example" : "Line 32"
          },
          "ethernetIp" : {
            "type" : "string",
            "example" : "10.1.2.34"
          },
          "wifiIp" : {
            "type" : "string",
            "example" : "10.1.2.35"
          }
        }
      },
      "V1VisionRunByCameraResponse_inspectionResults" : {
        "type" : "object",
        "properties" : {
          "captureAtMs" : {
            "type" : "number",
            "format" : "float64",
            "example" : 1.55381199473E+12
          },
          "result" : {
            "type" : "string",
            "example" : "PASS"
          },
          "stepResults" : {
            "$ref" : "#/components/schemas/V1VisionStepResults"
          }
        }
      },
      "V1VisionRunByCameraResponse_program" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "example" : "Barcode verification program"
          }
        }
      },
      "V1VisionRunByCameraResponse_runSummary" : {
        "type" : "object",
        "properties" : {
          "itemsPerMinute" : {
            "type" : "number",
            "format" : "float64",
            "example" : 0.1
          },
          "noReadCount" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 0
          },
          "rejectCount" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 0
          },
          "successCount" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 181
          }
        }
      },
      "V1VisionRunsByCameraResponse_inner" : {
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1234512345123
          },
          "endedAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 0
          },
          "program" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "integer",
                "format" : "int64",
                "example" : 1
              },
              "name" : {
                "type" : "string",
                "example" : "Barcode verification program"
              }
            }
          },
          "reportMetadata" : {
            "type" : "object",
            "properties" : {
              "itemsPerMinute" : {
                "type" : "number",
                "format" : "float64",
                "example" : 0.1
              },
              "noReadCount" : {
                "type" : "integer",
                "format" : "int64",
                "example" : 0
              },
              "rejectCount" : {
                "type" : "integer",
                "format" : "int64",
                "example" : 0
              },
              "successCount" : {
                "type" : "integer",
                "format" : "int64",
                "example" : 181
              }
            }
          },
          "startedAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1553808606097
          }
        }
      },
      "V1VisionRunsResponse_reportMetadata" : {
        "type" : "object",
        "properties" : {
          "itemsPerMinute" : {
            "type" : "number",
            "description" : "Returns average scanned items per minute. Should be used instead of scanRate.",
            "format" : "float64",
            "example" : 0.1
          },
          "noReadCount" : {
            "type" : "integer",
            "description" : "Returns no read count for the run. Should be used instead of noReadScansCount",
            "format" : "int64",
            "example" : 181
          },
          "rejectCount" : {
            "type" : "integer",
            "description" : "Returns reject count for the run. Should be used instead of failedScansCount",
            "format" : "int64",
            "example" : 0
          },
          "successCount" : {
            "type" : "integer",
            "description" : "Returns success count for the run. Should be used instead of successfulScansCount",
            "format" : "int64",
            "example" : 181
          }
        },
        "description" : "The response includes 4 additional fields that are now deprecated"
      },
      "V1VisionRunsResponse_visionRuns" : {
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1234512345123
          },
          "endedAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 0
          },
          "programId" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1
          },
          "reportMetadata" : {
            "$ref" : "#/components/schemas/V1VisionRunsResponse_reportMetadata"
          },
          "startedAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1553808606097
          }
        }
      },
      "V1VisionStepResults_inner" : {
        "type" : "object",
        "properties" : {
          "angleCheck" : {
            "type" : "object",
            "properties" : {
              "angleConfigured" : {
                "type" : "object",
                "properties" : {
                  "high" : {
                    "type" : "integer",
                    "format" : "int64",
                    "example" : 150
                  },
                  "low" : {
                    "type" : "integer",
                    "format" : "int64",
                    "example" : 90
                  }
                },
                "description" : "The configured angle allowance range (in degrees)"
              },
              "angleFound" : {
                "type" : "integer",
                "description" : "The counter-clockwise angle detected from the first edge to the second edge",
                "format" : "int64",
                "example" : 60
              },
              "endStepName" : {
                "type" : "string",
                "description" : "The name of the second reference step used to check the angle",
                "example" : "Edge 2"
              },
              "startStepName" : {
                "type" : "string",
                "description" : "The name of the first reference step used to check the angle",
                "example" : "Edge 1"
              }
            }
          },
          "barcode" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "contents" : {
                  "type" : "string",
                  "example" : "10855639004823"
                },
                "matchString" : {
                  "type" : "string",
                  "example" : "10855639004823"
                },
                "type" : {
                  "type" : "string",
                  "example" : "EAN8"
                }
              }
            }
          },
          "booleanLogic" : {
            "type" : "object",
            "properties" : {
              "operator" : {
                "type" : "string",
                "example" : "AND"
              },
              "steps" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "name" : {
                      "type" : "string",
                      "example" : "Expiration Date"
                    },
                    "result" : {
                      "type" : "string",
                      "example" : "PASS"
                    }
                  }
                }
              }
            }
          },
          "caliper" : {
            "type" : "object",
            "properties" : {
              "angleRange" : {
                "type" : "object",
                "properties" : {
                  "high" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 360
                  },
                  "low" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 0
                  }
                },
                "description" : "The configured angle allowance range"
              },
              "contrastRange" : {
                "type" : "object",
                "properties" : {
                  "high" : {
                    "type" : "integer",
                    "format" : "int64",
                    "example" : 100
                  },
                  "low" : {
                    "type" : "integer",
                    "format" : "int64",
                    "example" : 50
                  }
                },
                "description" : "The configured contrast allowance range"
              },
              "distanceFound" : {
                "type" : "number",
                "description" : "The distance found between the found edges",
                "format" : "float",
                "example" : 555.55
              },
              "filterPolarity" : {
                "type" : "string",
                "description" : "The configured polarity for finding edges",
                "example" : "LIGHT TO DARK",
                "enum" : [ "LIGHT TO DARK", "DARK TO LIGHT" ],
                "default" : "LIGHT TO DARK"
              },
              "maxDistance" : {
                "type" : "number",
                "description" : "The maximum allowed distance threshold",
                "format" : "float",
                "example" : 1000.0
              },
              "minDistance" : {
                "type" : "number",
                "description" : "The minumum allowed distance threshold",
                "format" : "float",
                "example" : 500.0
              },
              "sharpnessRange" : {
                "type" : "object",
                "properties" : {
                  "high" : {
                    "type" : "integer",
                    "format" : "int64",
                    "example" : 100
                  },
                  "low" : {
                    "type" : "integer",
                    "format" : "int64",
                    "example" : 80
                  }
                },
                "description" : "The configured sharpness allowance range"
              },
              "straightnessRange" : {
                "type" : "object",
                "properties" : {
                  "high" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 100
                  },
                  "low" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 80
                  }
                },
                "description" : "The configured straightness allowance range"
              },
              "unit" : {
                "type" : "string",
                "description" : "The measurement unit of the distance found and the min and max distance threshold",
                "example" : "Millimeters"
              }
            }
          },
          "contour" : {
            "type" : "object",
            "properties" : {
              "angleDegrees" : {
                "type" : "integer",
                "description" : "The rotation angle found",
                "format" : "int64",
                "example" : 0
              },
              "angleTolerance" : {
                "type" : "integer",
                "description" : "The rotation angle allowance",
                "format" : "int64",
                "example" : 50
              },
              "matchPercentage" : {
                "type" : "integer",
                "description" : "The contour match percentage with the configured contour",
                "format" : "int64",
                "example" : 46
              },
              "matchThreshold" : {
                "type" : "integer",
                "description" : "The configured match threshold for contours",
                "format" : "int64",
                "example" : 18
              }
            }
          },
          "distance" : {
            "type" : "object",
            "properties" : {
              "distanceFound" : {
                "type" : "integer",
                "description" : "The distance found between the start and end references",
                "format" : "float64"
              },
              "endStepName" : {
                "type" : "string",
                "description" : "The name of the second reference step that we're checking the distances between",
                "example" : "Bottom Right Square"
              },
              "enforceOffsetAngleRange" : {
                "type" : "boolean",
                "description" : "Whether an offset angle range is enforced",
                "example" : true
              },
              "maxDistance" : {
                "type" : "integer",
                "description" : "The maximum allowed distance threshold",
                "format" : "float64",
                "example" : 900
              },
              "maxOffsetAngle" : {
                "type" : "integer",
                "description" : "The maximum angle allowance (in degrees) if enforceOffsetAngleRange is true",
                "format" : "int64",
                "example" : 90
              },
              "minDistance" : {
                "type" : "integer",
                "description" : "The minumum allowed distance threshold",
                "format" : "float64",
                "example" : 1500
              },
              "minOffsetAngle" : {
                "type" : "integer",
                "description" : "The minimum angle allowance (in degrees) if enforceOffsetAngleRange is true",
                "format" : "int64",
                "example" : 45
              },
              "offsetAngleFound" : {
                "type" : "integer",
                "description" : "The counter-clockwise angle (in degrees) found between the horizontal axis of the start reference step and the last",
                "format" : "int64",
                "example" : 50
              },
              "startStepName" : {
                "type" : "string",
                "description" : "The name of the first reference step that we're checking the distances between",
                "example" : "Top Left Square"
              },
              "unit" : {
                "type" : "string",
                "description" : "The measurement unit of the distance found and the min and max distance threshold",
                "example" : "Millimeters"
              }
            }
          },
          "expirationDate" : {
            "type" : "object",
            "properties" : {
              "dateOffset" : {
                "type" : "integer",
                "format" : "int64",
                "example" : 1
              },
              "foundDate" : {
                "type" : "string",
                "example" : "06/13/2019"
              },
              "matchDate" : {
                "type" : "string",
                "example" : "06/13/2019"
              }
            }
          },
          "findCopies" : {
            "type" : "object",
            "properties" : {
              "angleTolerance" : {
                "type" : "integer",
                "description" : "The orientation angle tolerance (+/- °)",
                "format" : "int64",
                "example" : 10
              },
              "foundCount" : {
                "type" : "integer",
                "description" : "The number of copies found",
                "format" : "int64",
                "example" : 1
              },
              "maxCount" : {
                "type" : "integer",
                "description" : "The maximum number of copies allowed",
                "format" : "int64",
                "example" : 5
              },
              "minCount" : {
                "type" : "integer",
                "description" : "The minimum number of copies allowed",
                "format" : "int64",
                "example" : 1
              },
              "threshold" : {
                "type" : "integer",
                "description" : "The minimum required similarity (in %) of a found copy compared to the configured match region",
                "format" : "int64",
                "example" : 70
              }
            }
          },
          "findEdge" : {
            "type" : "object",
            "properties" : {
              "angleFound" : {
                "type" : "integer",
                "description" : "The detected angle in degrees",
                "format" : "float64",
                "example" : 90
              },
              "angleRange" : {
                "type" : "object",
                "properties" : {
                  "high" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 360
                  },
                  "low" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 0
                  }
                },
                "description" : "The configured angle allowance range"
              },
              "contrastPercent" : {
                "type" : "integer",
                "description" : "The detected contrast percentage",
                "format" : "float64"
              },
              "contrastRange" : {
                "type" : "object",
                "properties" : {
                  "high" : {
                    "type" : "integer",
                    "format" : "int64",
                    "example" : 100
                  },
                  "low" : {
                    "type" : "integer",
                    "format" : "int64",
                    "example" : 50
                  }
                },
                "description" : "The configured contrast allowance range"
              },
              "filterPolarity" : {
                "type" : "string",
                "description" : "The configured polarity for finding edges",
                "example" : "ANY"
              },
              "sharpnessPercent" : {
                "type" : "integer",
                "description" : "The detected sharpness percentage",
                "format" : "float64",
                "example" : 95
              },
              "sharpnessRange" : {
                "type" : "object",
                "properties" : {
                  "high" : {
                    "type" : "integer",
                    "format" : "int64",
                    "example" : 100
                  },
                  "low" : {
                    "type" : "integer",
                    "format" : "int64",
                    "example" : 80
                  }
                },
                "description" : "The configured sharpness allowance range"
              },
              "straightnessFound" : {
                "type" : "integer",
                "description" : "The detected straightness percentage",
                "format" : "float64",
                "example" : 95
              },
              "straightnessRange" : {
                "type" : "object",
                "properties" : {
                  "high" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 100
                  },
                  "low" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 80
                  }
                },
                "description" : "The configured straightness allowance range"
              }
            }
          },
          "findShapes" : {
            "type" : "object",
            "properties" : {
              "foundCount" : {
                "type" : "integer",
                "format" : "int32",
                "example" : 1
              },
              "maxCount" : {
                "type" : "integer",
                "format" : "int32",
                "example" : 5
              },
              "minCount" : {
                "type" : "integer",
                "format" : "int32",
                "example" : 1
              }
            }
          },
          "fixture" : {
            "type" : "object",
            "properties" : {
              "coordinates" : {
                "type" : "object",
                "properties" : {
                  "x" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 10
                  },
                  "y" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 10
                  }
                }
              },
              "found" : {
                "type" : "boolean",
                "example" : true
              },
              "rotationDegrees" : {
                "type" : "integer",
                "format" : "int64",
                "example" : 90
              }
            }
          },
          "labelMatch" : {
            "type" : "object",
            "properties" : {
              "score" : {
                "type" : "integer",
                "format" : "int64",
                "example" : 10
              },
              "threshold" : {
                "type" : "integer",
                "format" : "int64",
                "example" : 10
              }
            }
          },
          "name" : {
            "type" : "string",
            "example" : "Chicken Caesar Label"
          },
          "presenceAbsence" : {
            "type" : "object",
            "properties" : {
              "blueRange" : {
                "type" : "object",
                "properties" : {
                  "high" : {
                    "type" : "integer",
                    "format" : "int64",
                    "example" : 150
                  },
                  "low" : {
                    "type" : "integer",
                    "format" : "int64",
                    "example" : 90
                  }
                }
              },
              "checkForAbsence" : {
                "type" : "boolean",
                "example" : true
              },
              "grayscaleRange" : {
                "type" : "object",
                "properties" : {
                  "high" : {
                    "type" : "integer",
                    "format" : "int64",
                    "example" : 100
                  },
                  "low" : {
                    "type" : "integer",
                    "format" : "int64",
                    "example" : 20
                  }
                }
              },
              "greenRange" : {
                "type" : "object",
                "properties" : {
                  "high" : {
                    "type" : "integer",
                    "format" : "int64",
                    "example" : 150
                  },
                  "low" : {
                    "type" : "integer",
                    "format" : "int64",
                    "example" : 90
                  }
                }
              },
              "hueRange" : {
                "type" : "object",
                "properties" : {
                  "high" : {
                    "type" : "integer",
                    "format" : "int64",
                    "example" : 100
                  },
                  "low" : {
                    "type" : "integer",
                    "format" : "int64",
                    "example" : 20
                  }
                }
              },
              "redRange" : {
                "type" : "object",
                "properties" : {
                  "high" : {
                    "type" : "integer",
                    "format" : "int64",
                    "example" : 150
                  },
                  "low" : {
                    "type" : "integer",
                    "format" : "int64",
                    "example" : 90
                  }
                }
              },
              "saturationRange" : {
                "type" : "object",
                "properties" : {
                  "high" : {
                    "type" : "integer",
                    "format" : "int64",
                    "example" : 50
                  },
                  "low" : {
                    "type" : "integer",
                    "format" : "int64",
                    "example" : 10
                  }
                }
              },
              "score" : {
                "type" : "integer",
                "format" : "int64",
                "example" : 50
              },
              "threshold" : {
                "type" : "integer",
                "format" : "int64",
                "example" : 50
              },
              "valueRange" : {
                "type" : "object",
                "properties" : {
                  "high" : {
                    "type" : "integer",
                    "format" : "int64",
                    "example" : 50
                  },
                  "low" : {
                    "type" : "integer",
                    "format" : "int64",
                    "example" : 10
                  }
                }
              }
            }
          },
          "result" : {
            "type" : "string",
            "example" : "PASS"
          },
          "textMatch" : {
            "type" : "object",
            "properties" : {
              "foundText" : {
                "type" : "string",
                "example" : "ABCD"
              },
              "matchString" : {
                "type" : "string",
                "example" : "ABCD"
              }
            }
          }
        }
      },
      "VehicleLocationsListResponse_data" : {
        "required" : [ "id", "locations", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/VehicleId"
          },
          "locations" : {
            "type" : "array",
            "description" : "A list of location events for the given vehicle.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleLocation"
            }
          },
          "name" : {
            "$ref" : "#/components/schemas/VehicleName"
          }
        },
        "description" : "A vehicle and its list of location events."
      },
      "VehicleLocationsResponse_data" : {
        "required" : [ "id", "location", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/VehicleId"
          },
          "location" : {
            "$ref" : "#/components/schemas/VehicleLocation"
          },
          "name" : {
            "$ref" : "#/components/schemas/VehicleName"
          }
        },
        "description" : "A vehicle and its most recent location."
      },
      "VehicleStatsDecorations_ambientAirTemperatureMilliC" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "$ref" : "#/components/schemas/VehicleStatsAmbientAirTempMilliCValue"
          }
        }
      },
      "VehicleStatsDecorations_barometricPressurePa" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "$ref" : "#/components/schemas/VehicleStatsBarometricPressurePaValue"
          }
        }
      },
      "VehicleStatsDecorations_batteryMilliVolts" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "$ref" : "#/components/schemas/VehicleStatsBatteryMilliVoltsValue"
          }
        }
      },
      "VehicleStatsDecorations_defLevelMilliPercent" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "$ref" : "#/components/schemas/VehicleStatsDefLevelMilliPercentValue"
          }
        }
      },
      "VehicleStatsDecorations_ecuSpeedMph" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "$ref" : "#/components/schemas/VehicleStatsEcuSpeedMphValue"
          }
        }
      },
      "VehicleStatsDecorations_engineCoolantTemperatureMilliC" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "$ref" : "#/components/schemas/VehicleStatsEngineCoolantTempMilliCValue"
          }
        }
      },
      "VehicleStatsDecorations_engineLoadPercent" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "$ref" : "#/components/schemas/VehicleStatsEngineLoadPercentValue"
          }
        }
      },
      "VehicleStatsDecorations_engineOilPressureKPa" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "$ref" : "#/components/schemas/VehicleStatsEngineOilPressureKPaValue"
          }
        }
      },
      "VehicleStatsDecorations_engineRpm" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "$ref" : "#/components/schemas/VehicleStatsEngineRpmValue"
          }
        }
      },
      "VehicleStatsDecorations_engineStates" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string",
            "description" : "The state of the engine.",
            "example" : "On",
            "enum" : [ "Off", "On", "Idle" ]
          }
        }
      },
      "VehicleStatsDecorations_fuelPercents" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "$ref" : "#/components/schemas/VehicleStatsFuelPercentValue"
          }
        }
      },
      "VehicleStatsDecorations_gps" : {
        "required" : [ "latitude", "longitude" ],
        "type" : "object",
        "properties" : {
          "headingDegrees" : {
            "$ref" : "#/components/schemas/VehicleLocationHeading"
          },
          "latitude" : {
            "$ref" : "#/components/schemas/VehicleLocationLatitude"
          },
          "longitude" : {
            "$ref" : "#/components/schemas/VehicleLocationLongitude"
          },
          "reverseGeo" : {
            "$ref" : "#/components/schemas/VehicleLocationReverseGeo"
          },
          "speedMilesPerHour" : {
            "$ref" : "#/components/schemas/VehicleLocationSpeed"
          }
        }
      },
      "VehicleStatsDecorations_gpsDistanceMeters" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "$ref" : "#/components/schemas/VehicleStatsGpsDistanceMetersValue"
          }
        }
      },
      "VehicleStatsDecorations_gpsOdometerMeters" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "$ref" : "#/components/schemas/VehicleStatsGpsOdometerMetersValue"
          }
        }
      },
      "VehicleStatsDecorations_intakeManifoldTemperatureMilliC" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "$ref" : "#/components/schemas/VehicleStatsIntakeManifoldTempMilliCValue"
          }
        }
      },
      "VehicleStatsDecorations_obdEngineSeconds" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "$ref" : "#/components/schemas/VehicleStatsObdEngineSecondsValue"
          }
        }
      },
      "VehicleStatsDecorations_obdOdometerMeters" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "$ref" : "#/components/schemas/VehicleStatsObdOdometerMetersValue"
          }
        }
      },
      "VehicleStatsFaultCodesValue_j1939_checkEngineLights" : {
        "required" : [ "emissionsIsOn", "protectIsOn", "stopIsOn", "warningIsOn" ],
        "type" : "object",
        "properties" : {
          "emissionsIsOn" : {
            "type" : "boolean",
            "description" : "True if the MIL status is nonzero.",
            "example" : true
          },
          "protectIsOn" : {
            "type" : "boolean",
            "description" : "True if the engine protect lamp status is nonzero.",
            "example" : false
          },
          "stopIsOn" : {
            "type" : "boolean",
            "description" : "True if the red lamp status is nonzero.",
            "example" : false
          },
          "warningIsOn" : {
            "type" : "boolean",
            "description" : "True if the amber lamp status is nonzero.",
            "example" : false
          }
        },
        "description" : "Status of engine lights on J1939 vehicles."
      },
      "VehicleStatsFaultCodesValue_j1939_vendorSpecificFields" : {
        "type" : "object",
        "properties" : {
          "dtcDescription" : {
            "type" : "string",
            "description" : "The DTC description, if available.",
            "example" : "false"
          },
          "repairInstructionsUrl" : {
            "type" : "string",
            "description" : "A link to vendor repair instructions, if available.",
            "example" : "false"
          }
        },
        "description" : "Vendor specific data for J1939 vehicles."
      },
      "VehicleStatsFaultCodesValue_j1939_diagnosticTroubleCodes" : {
        "required" : [ "fmiId", "milStatus", "occurrenceCount", "spnId", "txId" ],
        "type" : "object",
        "properties" : {
          "fmiDescription" : {
            "type" : "string",
            "description" : "A short description of the FMI identifier, if available.",
            "example" : "Voltage Below Normal"
          },
          "fmiId" : {
            "type" : "integer",
            "description" : "The FMI identifier.",
            "format" : "int32",
            "example" : 9
          },
          "milStatus" : {
            "type" : "integer",
            "description" : "The MIL status, indicating a check engine light.",
            "format" : "int32",
            "example" : 1
          },
          "occurrenceCount" : {
            "type" : "integer",
            "description" : "The number of times this fault has triggered.",
            "format" : "int32",
            "example" : 1
          },
          "sourceAddressName" : {
            "type" : "string",
            "description" : "The source address name corresponding to the txId",
            "example" : "Engine #1"
          },
          "spnDescription" : {
            "type" : "string",
            "description" : "A short description of the SPN identifier, if available.",
            "example" : "System Diagnostic Code #1"
          },
          "spnId" : {
            "type" : "integer",
            "description" : "The SPN identifier.",
            "format" : "int32",
            "example" : 3031
          },
          "txId" : {
            "type" : "integer",
            "description" : "The TX identifier.",
            "format" : "int32",
            "example" : 0
          },
          "vendorSpecificFields" : {
            "$ref" : "#/components/schemas/VehicleStatsFaultCodesValue_j1939_vendorSpecificFields"
          }
        },
        "description" : "Diagnostic trouble code for J1939 vehicles."
      },
      "VehicleStatsFaultCodesValue_j1939" : {
        "type" : "object",
        "properties" : {
          "checkEngineLights" : {
            "$ref" : "#/components/schemas/VehicleStatsFaultCodesValue_j1939_checkEngineLights"
          },
          "diagnosticTroubleCodes" : {
            "type" : "array",
            "description" : "Diagnostic trouble codes for J1939 vehicles.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsFaultCodesValue_j1939_diagnosticTroubleCodes"
            }
          }
        },
        "description" : "Vehicle fault codes for J1939 vehicles."
      },
      "VehicleStatsFaultCodesValue_obdii_confirmedDtcs" : {
        "required" : [ "dtcId" ],
        "type" : "object",
        "properties" : {
          "dtcDescription" : {
            "type" : "string",
            "description" : "The DTC description, if available.",
            "example" : "Fuel Rail/System Pressure - Too Low Bank 1"
          },
          "dtcId" : {
            "type" : "integer",
            "description" : "The DTC identifier.",
            "format" : "int32",
            "example" : 135
          },
          "dtcShortCode" : {
            "type" : "string",
            "description" : "The DTC short code, if available.",
            "example" : "P0087"
          }
        },
        "description" : "Passenger vehicle DTC information"
      },
      "VehicleStatsFaultCodesValue_obdii_monitorStatus" : {
        "type" : "object",
        "properties" : {
          "catalyst" : {
            "type" : "string",
            "description" : "Enum of monitor status:\n-U: Unsupported\n-N: Not Complete\n-R: Complete\n",
            "enum" : [ "N", "R", "U" ]
          },
          "comprehensive" : {
            "type" : "string",
            "description" : "Enum of monitor status:\n-U: Unsupported\n-N: Not Complete\n-R: Complete\n",
            "enum" : [ "N", "R", "U" ]
          },
          "egr" : {
            "type" : "string",
            "description" : "Enum of monitor status:\n-U: Unsupported\n-N: Not Complete\n-R: Complete\n",
            "enum" : [ "N", "R", "U" ]
          },
          "evapSystem" : {
            "type" : "string",
            "description" : "Enum of monitor status:\n-U: Unsupported\n-N: Not Complete\n-R: Complete\n",
            "enum" : [ "N", "R", "U" ]
          },
          "fuel" : {
            "type" : "string",
            "description" : "Enum of monitor status:\n-U: Unsupported\n-N: Not Complete\n-R: Complete\n",
            "enum" : [ "N", "R", "U" ]
          },
          "heatedCatalyst" : {
            "type" : "string",
            "description" : "Enum of monitor status:\n-U: Unsupported\n-N: Not Complete\n-R: Complete\n",
            "enum" : [ "N", "R", "U" ]
          },
          "heatedO2Sensor" : {
            "type" : "string",
            "description" : "Enum of monitor status:\n-U: Unsupported\n-N: Not Complete\n-R: Complete\n",
            "enum" : [ "N", "R", "U" ]
          },
          "isoSaeReserved" : {
            "type" : "string",
            "description" : "Enum of monitor status:\n-U: Unsupported\n-N: Not Complete\n-R: Complete\n",
            "enum" : [ "N", "R", "U" ]
          },
          "misfire" : {
            "type" : "string",
            "description" : "Enum of monitor status:\n-U: Unsupported\n-N: Not Complete\n-R: Complete\n",
            "enum" : [ "N", "R", "U" ]
          },
          "notReadyCount" : {
            "type" : "integer",
            "description" : "Count of the number of sensors reporting N: Not Complete"
          },
          "o2Sensor" : {
            "type" : "string",
            "description" : "Enum of monitor status:\n-U: Unsupported\n-N: Not Complete\n-R: Complete\n",
            "enum" : [ "N", "R", "U" ]
          },
          "secondaryAir" : {
            "type" : "string",
            "description" : "Enum of monitor status:\n-U: Unsupported\n-N: Not Complete\n-R: Complete\n",
            "enum" : [ "N", "R", "U" ]
          }
        },
        "description" : "Readings from engine sensors"
      },
      "VehicleStatsFaultCodesValue_obdii_diagnosticTroubleCodes" : {
        "required" : [ "txId" ],
        "type" : "object",
        "properties" : {
          "confirmedDtcs" : {
            "type" : "array",
            "description" : "Confirmed DTC codes.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsFaultCodesValue_obdii_confirmedDtcs"
            }
          },
          "ignitionType" : {
            "type" : "string",
            "description" : "The ignition type of this passenger vehicle. Valid values are \"spark\" and \"compression\"",
            "enum" : [ "spark", "compression" ]
          },
          "milStatus" : {
            "type" : "boolean",
            "description" : "The MIL status, indicating a check engine light.",
            "example" : true
          },
          "monitorStatus" : {
            "$ref" : "#/components/schemas/VehicleStatsFaultCodesValue_obdii_monitorStatus"
          },
          "pendingDtcs" : {
            "type" : "array",
            "description" : "Pending DTC codes.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsFaultCodesValue_obdii_confirmedDtcs"
            }
          },
          "permanentDtcs" : {
            "type" : "array",
            "description" : "Permanent DTC codes.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsFaultCodesValue_obdii_confirmedDtcs"
            }
          },
          "txId" : {
            "type" : "integer",
            "description" : "The TX identifier.",
            "format" : "int32",
            "example" : 0
          }
        },
        "description" : "Diagnostic trouble code for passenger vehicles."
      },
      "VehicleStatsFaultCodesValue_obdii" : {
        "type" : "object",
        "properties" : {
          "checkEngineLightIsOn" : {
            "type" : "boolean",
            "description" : "True if the check engine light is illuminated (MIL status field is nonzero for any faults).",
            "example" : true
          },
          "diagnosticTroubleCodes" : {
            "type" : "array",
            "description" : "Diagnostic trouble codes for passenger vehicles.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsFaultCodesValue_obdii_diagnosticTroubleCodes"
            }
          }
        },
        "description" : "Vehicle fault codes for passenger vehicles."
      },
      "VehicleStatsListResponse_data" : {
        "type" : "object",
        "properties" : {
          "ambientAirTemperatureMilliC" : {
            "type" : "array",
            "description" : "A list of ambient air temperature readings in millidegree Celsius for the given vehicle.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsAmbientAirTempMilliCWithDecoration"
            }
          },
          "auxInput1" : {
            "type" : "array",
            "description" : "A list of auxiliary equipment states.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsAuxInputWithDecoration"
            }
          },
          "auxInput10" : {
            "type" : "array",
            "description" : "A list of auxiliary equipment states.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsAuxInputWithDecoration"
            }
          },
          "auxInput2" : {
            "type" : "array",
            "description" : "A list of auxiliary equipment states.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsAuxInputWithDecoration"
            }
          },
          "auxInput3" : {
            "type" : "array",
            "description" : "A list of auxiliary equipment states.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsAuxInputWithDecoration"
            }
          },
          "auxInput4" : {
            "type" : "array",
            "description" : "A list of auxiliary equipment states.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsAuxInputWithDecoration"
            }
          },
          "auxInput5" : {
            "type" : "array",
            "description" : "A list of auxiliary equipment states.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsAuxInputWithDecoration"
            }
          },
          "auxInput6" : {
            "type" : "array",
            "description" : "A list of auxiliary equipment states.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsAuxInputWithDecoration"
            }
          },
          "auxInput7" : {
            "type" : "array",
            "description" : "A list of auxiliary equipment states.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsAuxInputWithDecoration"
            }
          },
          "auxInput8" : {
            "type" : "array",
            "description" : "A list of auxiliary equipment states.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsAuxInputWithDecoration"
            }
          },
          "auxInput9" : {
            "type" : "array",
            "description" : "A list of auxiliary equipment states.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsAuxInputWithDecoration"
            }
          },
          "barometricPressurePa" : {
            "type" : "array",
            "description" : "A list of barometric pressure readings in pascals for the given vehicle.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsBarometricPressurePaWithDecoration"
            }
          },
          "batteryMilliVolts" : {
            "type" : "array",
            "description" : "A list of battery levels in milliVolts for the given vehicle.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsBatteryVoltageWithDecoration"
            }
          },
          "defLevelMilliPercent" : {
            "type" : "array",
            "description" : "A list of DEF level milli percentage readings for the given vehicle.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsDefLevelMilliPercentWithDecoration"
            }
          },
          "ecuSpeedMph" : {
            "type" : "array",
            "description" : "A list of the speeds of the vehicle in miles per hour, as reported by the ECU.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsEcuSpeedMphWithDecoration"
            }
          },
          "engineCoolantTemperatureMilliC" : {
            "type" : "array",
            "description" : "A list of engine coolant temperature readings in millidegree Celsius for the given vehicle.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsEngineCoolantTempMilliCWithDecoration"
            }
          },
          "engineLoadPercent" : {
            "type" : "array",
            "description" : "A list of engine load percentage readings for the given vehicle.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsEngineLoadPercentWithDecoration"
            }
          },
          "engineOilPressureKPa" : {
            "type" : "array",
            "description" : "A list of engine oil pressure readings in kilopascals for the given vehicle.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsEngineOilPressureKPaWithDecoration"
            }
          },
          "engineRpm" : {
            "type" : "array",
            "description" : "A list engine RPM values for the given vehicle.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsEngineRpmWithDecoration"
            }
          },
          "engineStates" : {
            "type" : "array",
            "description" : "A list of engine state events for the given vehicle.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsEngineStateWithDecoration"
            }
          },
          "faultCodes" : {
            "type" : "array",
            "description" : "A list of engine fault codes.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsFaultCodesWithDecoration"
            }
          },
          "fuelPercents" : {
            "type" : "array",
            "description" : "A list of fuel percentage readings for the given vehicle.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsFuelPercentWithDecoration"
            }
          },
          "gps" : {
            "type" : "array",
            "description" : "A list of GPS location events for the given vehicles.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsListGps"
            }
          },
          "gpsDistanceMeters" : {
            "type" : "array",
            "description" : "A list of GPS distance events for the given vehicle.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsGpsDistanceMetersWithDecoration"
            }
          },
          "gpsOdometerMeters" : {
            "type" : "array",
            "description" : "A list of GPS odometer events for the given vehicle.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsGpsOdometerMetersWithDecoration"
            }
          },
          "id" : {
            "$ref" : "#/components/schemas/VehicleId"
          },
          "intakeManifoldTemperatureMilliC" : {
            "type" : "array",
            "description" : "A list of intake manifold temperature readings in millidegree Celsius for the given vehicle.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsIntakeManifoldTempMilliCWithDecoration"
            }
          },
          "name" : {
            "$ref" : "#/components/schemas/VehicleName"
          },
          "nfcCardScans" : {
            "type" : "array",
            "description" : "A list of NFC cards that were scanned for the given vehicles.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsNfcCardScanWithDecoration"
            }
          },
          "obdEngineSeconds" : {
            "type" : "array",
            "description" : "A list of OBD engine seconds readings for the given vehicle.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsObdEngineSecondsWithDecoration"
            }
          },
          "obdOdometerMeters" : {
            "type" : "array",
            "description" : "A list of OBD odometer readings for the given vehicle.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsObdOdometerMetersWithDecoration"
            }
          },
          "syntheticEngineSeconds" : {
            "type" : "array",
            "description" : "A list of synthetic engine seconds values.",
            "items" : {
              "$ref" : "#/components/schemas/VehicleStatsListSyntheticEngineSeconds"
            }
          }
        },
        "description" : "A vehicle and its list of stat events."
      },
      "VehicleStatsNfcCardScan_card" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The id code of the card that was scanned.",
            "example" : "835063"
          }
        },
        "description" : "The card that was scanned."
      },
      "VehicleStatsResponse_data" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "ambientAirTemperatureMilliC" : {
            "$ref" : "#/components/schemas/VehicleStatsAmbientAirTempMilliC"
          },
          "auxInput1" : {
            "$ref" : "#/components/schemas/VehicleStatsAuxInput"
          },
          "auxInput10" : {
            "$ref" : "#/components/schemas/VehicleStatsAuxInput"
          },
          "auxInput2" : {
            "$ref" : "#/components/schemas/VehicleStatsAuxInput"
          },
          "auxInput3" : {
            "$ref" : "#/components/schemas/VehicleStatsAuxInput"
          },
          "auxInput4" : {
            "$ref" : "#/components/schemas/VehicleStatsAuxInput"
          },
          "auxInput5" : {
            "$ref" : "#/components/schemas/VehicleStatsAuxInput"
          },
          "auxInput6" : {
            "$ref" : "#/components/schemas/VehicleStatsAuxInput"
          },
          "auxInput7" : {
            "$ref" : "#/components/schemas/VehicleStatsAuxInput"
          },
          "auxInput8" : {
            "$ref" : "#/components/schemas/VehicleStatsAuxInput"
          },
          "auxInput9" : {
            "$ref" : "#/components/schemas/VehicleStatsAuxInput"
          },
          "barometricPressurePa" : {
            "$ref" : "#/components/schemas/VehicleStatsBarometricPressurePa"
          },
          "batteryMilliVolts" : {
            "$ref" : "#/components/schemas/VehicleStatsBatteryVoltage"
          },
          "defLevelMilliPercent" : {
            "$ref" : "#/components/schemas/VehicleStatsDefLevelMilliPercent"
          },
          "ecuSpeedMph" : {
            "$ref" : "#/components/schemas/VehicleStatsEcuSpeedMph"
          },
          "engineCoolantTemperatureMilliC" : {
            "$ref" : "#/components/schemas/VehicleStatsEngineCoolantTempMilliC"
          },
          "engineLoadPercent" : {
            "$ref" : "#/components/schemas/VehicleStatsEngineLoadPercent"
          },
          "engineOilPressureKPa" : {
            "$ref" : "#/components/schemas/VehicleStatsEngineOilPressureKPa"
          },
          "engineRpm" : {
            "$ref" : "#/components/schemas/VehicleStatsEngineRpm"
          },
          "engineState" : {
            "$ref" : "#/components/schemas/VehicleStatsEngineState"
          },
          "faultCodes" : {
            "$ref" : "#/components/schemas/VehicleStatsFaultCodes"
          },
          "fuelPercent" : {
            "$ref" : "#/components/schemas/VehicleStatsFuelPercent"
          },
          "gps" : {
            "$ref" : "#/components/schemas/VehicleStatsGps"
          },
          "gpsDistanceMeters" : {
            "$ref" : "#/components/schemas/VehicleStatsGpsDistanceMeters"
          },
          "gpsOdometerMeters" : {
            "$ref" : "#/components/schemas/VehicleStatsGpsOdometerMeters"
          },
          "id" : {
            "$ref" : "#/components/schemas/VehicleId"
          },
          "intakeManifoldTemperatureMilliC" : {
            "$ref" : "#/components/schemas/VehicleStatsIntakeManifoldTempMilliC"
          },
          "name" : {
            "$ref" : "#/components/schemas/VehicleName"
          },
          "nfcCardScan" : {
            "$ref" : "#/components/schemas/VehicleStatsNfcCardScan"
          },
          "obdEngineSeconds" : {
            "$ref" : "#/components/schemas/VehicleStatsObdEngineSeconds"
          },
          "obdOdometerMeters" : {
            "$ref" : "#/components/schemas/VehicleStatsObdOdometerMeters"
          },
          "syntheticEngineSeconds" : {
            "$ref" : "#/components/schemas/VehicleStatsSyntheticEngineSeconds"
          }
        },
        "description" : "A vehicle and its most recent stat."
      }
    },
    "parameters" : {
      "V1DispatchRouteIdOrExternalIdParam" : {
        "name" : "route_id_or_external_id",
        "in" : "path",
        "description" : "ID of the route. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "V1JobUpdatesIncludeParam" : {
        "name" : "include",
        "in" : "query",
        "description" : "Optionally set include=route to include route object in response payload.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "V1assetHistoryEndTimeParam" : {
        "name" : "endMs",
        "in" : "query",
        "description" : "Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs.",
        "required" : true,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "V1assetHistoryStartTimeParam" : {
        "name" : "startMs",
        "in" : "query",
        "description" : "Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs.",
        "required" : true,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "V1assetIdParam" : {
        "name" : "asset_id",
        "in" : "path",
        "description" : "ID of the asset. Must contain only digits 0-9.",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "V1dataInputEndTimeParam" : {
        "name" : "endMs",
        "in" : "query",
        "description" : "Timestamp in unix milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs. Defaults to nowMs.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "V1dataInputIdParam" : {
        "name" : "data_input_id",
        "in" : "path",
        "description" : "ID of the data input. Must contain only digits 0-9.",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "V1dataInputStartTimeParam" : {
        "name" : "startMs",
        "in" : "query",
        "description" : "Timestamp in unix milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs. defaults to nowMs.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "V1documentQueryByParam" : {
        "name" : "queryBy",
        "in" : "query",
        "description" : "Retrieve most recent documents based on either driverCreatedAtMs or serverUpdatedAtMs. If no value is provided, the default is driverCreatedAtMs.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "string",
          "format" : "string",
          "enum" : [ "created", "updated" ]
        }
      },
      "V1documentsDurationMsParam" : {
        "name" : "durationMs",
        "in" : "query",
        "description" : "Time in milliseconds that represents the duration before endMs to query. Defaults to 24 hours.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "V1documentsEndMsParam" : {
        "name" : "endMs",
        "in" : "query",
        "description" : "Time in unix milliseconds that represents the oldest documents to return. Used in combination with durationMs. Defaults to now.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "V1getMessagesDurationMsParam" : {
        "name" : "durationMs",
        "in" : "query",
        "description" : "Time in milliseconds that represents the duration before endMs to query. Defaults to 24 hours.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "V1getMessagesEndMsParam" : {
        "name" : "endMs",
        "in" : "query",
        "description" : "Time in unix milliseconds that represents the end of time range of messages to return. Used in combination with durationMs. Defaults to now.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "V1harshEventMsParam" : {
        "name" : "timestamp",
        "in" : "query",
        "description" : "Timestamp in milliseconds representing the timestamp of a harsh event.",
        "required" : true,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "V1lastReceivedSequenceIDParam" : {
        "name" : "sequence_id",
        "in" : "query",
        "description" : "Sequence ID from the response payload of the last request. Defaults to fetching updates from last 24 hours.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "V1paginationEndingBeforeParam" : {
        "name" : "endingBefore",
        "in" : "query",
        "description" : "Pagination parameter indicating the cursor position to return results before. Used in conjunction with the 'limit' parameter. Mutually exclusive with 'startingAfter' parameter.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "V1paginationLimitParam" : {
        "name" : "limit",
        "in" : "query",
        "description" : "Pagination parameter indicating the number of results to return in this request. Used in conjunction with either 'startingAfter' or 'endingBefore'.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "number",
          "format" : "int64"
        }
      },
      "V1paginationStartingAfterParam" : {
        "name" : "startingAfter",
        "in" : "query",
        "description" : "Pagination parameter indicating the cursor position to continue returning results after. Used in conjunction with the 'limit' parameter. Mutually exclusive with 'endingBefore' parameter.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "V1routeDurationParam" : {
        "name" : "duration",
        "in" : "query",
        "description" : "Time in milliseconds that represents the duration before end_time to query. Defaults to 24 hours.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "V1routeEndTimeParam" : {
        "name" : "end_time",
        "in" : "query",
        "description" : "Time in unix milliseconds that represents the end time of the requested time interval. See above for a description of how routes are returned. Defaults to now.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "V1routeHistoryEndTimeParam" : {
        "name" : "end_time",
        "in" : "query",
        "description" : "Timestamp representing the end of the period to fetch, inclusive. Used in combination with start_time. Defaults to nowMs.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "V1routeHistoryStartTimeParam" : {
        "name" : "start_time",
        "in" : "query",
        "description" : "Timestamp representing the start of the period to fetch, inclusive. Used in combination with end_time. Defaults to 0.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "V1safetyScoreEndMsParam" : {
        "name" : "endMs",
        "in" : "query",
        "description" : "Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs. Total duration (endMs - startMs) must be greater than or equal to 1 hour.",
        "required" : true,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "V1safetyScoreStartMsParam" : {
        "name" : "startMs",
        "in" : "query",
        "description" : "Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs. Total duration (endMs - startMs) must be greater than or equal to 1 hour.",
        "required" : true,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "V1visionCameraIdParam" : {
        "name" : "camera_id",
        "in" : "path",
        "description" : "The camera_id should be valid for the given accessToken.",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "V1visionDurationMsParam" : {
        "name" : "durationMs",
        "in" : "query",
        "description" : "DurationMs is a required param. This works with the EndMs parameter. Indicates the duration in which the visionRuns will be fetched",
        "required" : true,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "V1visionEndMsParam" : {
        "name" : "endMs",
        "in" : "query",
        "description" : "EndMs is an optional param. It will default to the current time.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "V1visionIncludeParam" : {
        "name" : "include",
        "in" : "query",
        "description" : "Include is a filter parameter. Accepts 'pass', 'reject' or 'no_read'.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "V1visionLimitParam" : {
        "name" : "limit",
        "in" : "query",
        "description" : "Limit is an integer value from 1 to 1,000.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "V1visionProgramIdParam" : {
        "name" : "program_id",
        "in" : "query",
        "description" : "The configured program's ID on the camera.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "V1visionProgramIdPathParam" : {
        "name" : "program_id",
        "in" : "path",
        "description" : "The configured program's ID on the camera.",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "V1visionStartAtMsParam" : {
        "name" : "startedAtMs",
        "in" : "query",
        "description" : "EndMs is an optional param. It will default to the current time.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "V1visionStartAtMsPathParam" : {
        "name" : "started_at_ms",
        "in" : "path",
        "description" : "Started_at_ms is a required param. Indicates the start time of the run to be fetched.",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "decorationStatTypes" : {
        "name" : "decorations",
        "in" : "query",
        "description" : "Decorations to add to the primary stats listed in the `types` parameter. For example, if you wish to know the vehicle's location whenever the engine changes state, you may set `types=engineStates&decorations=gps`.\n\nYou may list ***up to 2*** decorations using comma-separated format. If multiple stats are listed in the `types` parameter, the decorations will be added to each one. For example: `types=engineStates,obdOdometerMeters,faultCodes&decorations=gps,fuelPercents` will list GPS and fuel decorations for each engine state change, each odometer reading, and each fault code. See the [Vehicle Stats](https://developers.samsara.com/docs/vehicle-stats#query-parameters) guide for more details.\n\nNote that decorations may significantly increase the response payload size.\n\n- `ambientAirTemperatureMilliC`: The ambient air temperature reading in millidegree Celsius.\n- `auxInput1`-`auxInput10`: Stat events from the [auxiliary inputs](https://kb.samsara.com/hc/en-us/articles/232232368-Auxiliary-Inputs) for the vehicle.\n- `batteryMilliVolts`: The vehicle battery voltage reading.\n- `barometricPressurePa`: The barometric pressure reading in pascals.\n- `ecuSpeedMph`: The speed of the engine in miles per hour according to the ECU.\n- `engineCoolantTemperatureMilliC`: The engine coolant temperature reading in millidegree Celsius.\n- `engineOilPressureKPa`: The engine oil pressure reading in kilopascals.\n- `engineLoadPercent`: The engine load in percentage points (e.g. `99`, `50`, etc).\n- `engineRpm`: The revolutions per minute of the engine.\n- `engineStates`: The state of the engine (`Off`, `On`, `Idle`).\n- `faultCodes`: The diagnostic fault codes for the vehicle.\n- `fuelPercents`: The engine fuel level in percentage points (e.g. `99`, `50`, etc).\n- `gps`: GPS data including lat/long, heading, speed, and a reverse geocoded address.\n- `gpsDistanceMeters`: The distance the vehicle has traveled since the gateway was installed based on GPS calculations.\n- `intakeManifoldTemperatureMilliC`: The intake manifold temperature reading in millidegree Celsius.\n- `nfcCardScans`: ID card scans.\n- `obdEngineSeconds`: The cumulative number of seconds the engine has run according to onboard diagnostics.\n- `obdOdometerMeters`: The odometer reading according to onboard diagnostics. If Samsara does not have diagnostic coverage for a particular vehicle, the value for this stat type will be omitted.\n- `syntheticEngineSeconds`: Data for the synthetic engine seconds for the vehicle.  ",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "ambientAirTemperatureMilliC", "auxInput1", "auxInput2", "auxInput3", "auxInput4", "auxInput5", "auxInput6", "auxInput7", "auxInput8", "auxInput9", "auxInput10", "batteryMilliVolts", "barometricPressurePa", "defLevelMilliPercent", "ecuSpeedMph", "engineCoolantTemperatureMilliC", "engineLoadPercent", "engineOilPressureKPa", "engineRpm", "engineStates", "faultCodes", "fuelPercents", "gps", "gpsDistanceMeters", "intakeManifoldTemperatureMilliC", "nfcCardScans", "obdEngineSeconds", "obdOdometerMeters" ]
          }
        }
      },
      "driverActivationStatusParam" : {
        "name" : "driverActivationStatus",
        "in" : "query",
        "description" : "If value is `deactivated`, only drivers that are deactivated will appear in the response. This parameter will default to `active` if not provided (fetching only active drivers).",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "string",
          "enum" : [ "active", "deactivated" ]
        }
      },
      "equipmentStatTypes" : {
        "name" : "types",
        "in" : "query",
        "description" : "The type of equipment stat you want to query. Currently, you may only submit one type.\n\n- `engineRpm`: The revolutions per minute of the engine.\n- `fuelPercents`: The percent of fuel in the unit of equipment.\n- `obdEngineSeconds`: The number of seconds the engine has been running since it was new. This value is provided directly from on-board diagnostics.\n- `gatewayEngineSeconds`: An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG24 device is receiving power via APWR/AOPEN cable and an offset provided manually through the Samsara cloud dashboard.\n- `gatewayJ1939EngineSeconds`: An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG24 device is receiving power via J1939/CAT cable and an offset provided manually through the Samsara cloud dashboard.\n- `obdEngineStates`: The state of the engine read from on-board diagnostics. Can be `Off`, `On`, or `Idle`.\n- `gatewayEngineStates`: An approximation of engine state based on readings the AG24 receives from the aux/digio cable. Can be `Off` or `On`.\n- `gpsOdometerMeters`: An approximation of odometer reading based on GPS calculations since the AG24 was activated, and a manual odometer offset provided in the Samsara cloud dashboard.",
        "required" : true,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "string",
            "enum" : [ "gatewayEngineStates", "obdEngineStates", "fuelPercents", "engineRpm", "gatewayEngineSeconds", "obdEngineSeconds", "gatewayJ1939EngineSeconds", "gpsOdometerMeters" ]
          }
        }
      },
      "isDeactivatedParam" : {
        "name" : "isDeactivated",
        "in" : "query",
        "description" : "If value is true, only drivers that are deactivated will appear in the response. This parameter will default to false if not provided (fetching only active drivers).",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "boolean"
        }
      },
      "vehicleStatTypes" : {
        "name" : "types",
        "in" : "query",
        "description" : "The stat types you want this endpoint to return information on. See also the [Vehicle Stats](https://developers.samsara.com/docs/vehicle-stats#query-parameters) guide for more details.\n\nYou may list ***up to 3*** types using comma-separated format. For example: `types=gps,engineStates,obdOdometerMeters`.\n\n*Note:* `auxInput3`-`auxInput10` count as a single type against the limit of 3. For example, you could list `types=engineStates,obdOdometerMeters,auxInput3,auxInput4` because `auxInput3` and `auxInput4` count as a single stat type. `auxInput1` and `auxInput2` still count as their own individual types.\n\n- `ambientAirTemperatureMilliC`: The ambient air temperature reading in millidegree Celsius.\n- `auxInput1`-`auxInput10`: Stat events from the [auxiliary inputs](https://kb.samsara.com/hc/en-us/articles/232232368-Auxiliary-Inputs) for the vehicle.\n- `barometricPressurePa`: The barometric pressure reading in pascals.\n- `batteryMilliVolts`: The vehicle battery voltage reading.\n- `defLevelMilliPercent`: The Diesel Exhaust Fluid (DEF) level in milli percentage points (e.g. `99001`, `49999`, etc).\n- `ecuSpeedMph`: The speed of the engine in miles per hour according to the ECU.\n- `engineCoolantTemperatureMilliC`: The engine coolant temperature reading in millidegree Celsius.\n- `engineLoadPercent`: The engine load in percentage points (e.g. `99`, `50`, etc).\n- `engineOilPressureKPa`: The engine oil pressure reading in kilopascals.\n- `engineRpm`: The revolutions per minute of the engine.\n- `engineStates`: The state of the engine (`Off`, `On`, `Idle`).\n- `faultCodes`: The diagnostic fault codes for the vehicle.\n- `fuelPercents`: The engine fuel level in percentage points (e.g. `99`, `50`, etc).\n- `gps`: GPS data including lat/long, heading, speed, and a reverse geocoded address.\n- `gpsDistanceMeters`: The distance the vehicle has traveled since the gateway was installed based on GPS calculations.\n- `gpsOdometerMeters`: Odometer reading provided by GPS calculations when OBD odometer cannot be pulled automatically. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the [PATCH /fleet/vehicles/{id}](#operation/updateVehicle) endpoint or through the [cloud dasbhoard](https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading). Odometer readings that are manually set will update as GPS trip data is gathered. Try combining with `obdOdometerMeters`.\n- `intakeManifoldTemperatureMilliC`: The intake manifold temperature reading in millidegree Celsius.\n- `nfcCardScans`: ID card scans.\n- `obdEngineSeconds`: The cumulative number of seconds the engine has run according to onboard diagnostics.\n- `obdOdometerMeters`: The odometer reading according to onboard diagnostics. If Samsara does not have diagnostic coverage for a particular vehicle, the value for this stat type will be omitted. Try combining with `gpsOdometerMeters`. \n- `syntheticEngineSeconds`: Data for the synthetic engine seconds for the vehicle.",
        "required" : true,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "ambientAirTemperatureMilliC", "auxInput1", "auxInput2", "auxInput3", "auxInput4", "auxInput5", "auxInput6", "auxInput7", "auxInput8", "auxInput9", "auxInput10", "barometricPressurePa", "batteryMilliVolts", "defLevelMilliPercent", "ecuSpeedMph", "engineCoolantTemperatureMilliC", "engineLoadPercent", "engineOilPressureKPa", "engineRpm", "engineStates", "faultCodes", "fuelPercents", "gps", "gpsDistanceMeters", "gpsOdometerMeters", "intakeManifoldTemperatureMilliC", "nfcCardScans", "obdEngineSeconds", "obdOdometerMeters", "syntheticEngineSeconds" ]
          }
        }
      }
    },
    "requestBodies" : {
      "V1DispatchRouteApplyToFutureRoutesParam" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "apply_to_future_routes" : {
                  "type" : "boolean",
                  "description" : "This is only for a recurring route.  If set to true, delete all following runs of the route.  If set to false, only delete the current route.",
                  "example" : true
                }
              }
            }
          }
        },
        "required" : false
      },
      "V1createDvirParam" : {
        "description" : "DVIR creation body",
        "content" : {
          "application/json" : {
            "schema" : {
              "required" : [ "inspectionType", "safe", "userEmail" ],
              "type" : "object",
              "properties" : {
                "inspectionType" : {
                  "type" : "string",
                  "description" : "Only type 'mechanic' is currently accepted.",
                  "example" : "mechanic",
                  "enum" : [ "mechanic" ]
                },
                "mechanicNotes" : {
                  "type" : "string",
                  "description" : "Any notes from the mechanic.",
                  "example" : "Replaced headlight on passenger side."
                },
                "odometerMiles" : {
                  "type" : "integer",
                  "description" : "The current odometer of the vehicle.",
                  "example" : 38426
                },
                "previousDefectsCorrected" : {
                  "type" : "boolean",
                  "description" : "Whether any previous defects were corrected. If this vehicle or trailer was previously marked unsafe, and this DVIR marks it as safe, either previousDefectsCorrected or previousDefectsIgnored must be true.",
                  "example" : true
                },
                "previousDefectsIgnored" : {
                  "type" : "boolean",
                  "description" : "Whether any previous defects were ignored. If this vehicle or trailer was previously marked unsafe, and this DVIR marks it as safe, either previousDefectsCorrected or previousDefectsIgnored must be true.",
                  "example" : false
                },
                "resolvedDefectIds" : {
                  "type" : "array",
                  "description" : "List of defect IDs to resolve.  The defects must be associated with the provided vehicle or trailer.",
                  "example" : [ 18, 19 ],
                  "items" : {
                    "type" : "integer",
                    "format" : "int64"
                  }
                },
                "safe" : {
                  "type" : "string",
                  "description" : "Whether or not this vehicle or trailer is safe to drive.",
                  "example" : "safe",
                  "enum" : [ "safe", "unsafe" ]
                },
                "trailerId" : {
                  "type" : "integer",
                  "description" : "Id of trailer being inspected. Either vehicleId or trailerId must be provided.",
                  "example" : 11
                },
                "userEmail" : {
                  "type" : "string",
                  "description" : "The Samsara login email for the person creating the DVIR. The email must correspond to a Samsara user's email.",
                  "example" : "j.smith@yahoo.com"
                },
                "vehicleId" : {
                  "type" : "integer",
                  "description" : "Id of vehicle being inspected. Either vehicleId or trailerId must be provided.",
                  "example" : 10
                }
              }
            }
          }
        },
        "required" : true
      },
      "V1createMessagesParam" : {
        "description" : "Text to send to a list of driverIds.",
        "content" : {
          "application/json" : {
            "schema" : {
              "required" : [ "driverIds", "text" ],
              "type" : "object",
              "properties" : {
                "driverIds" : {
                  "type" : "array",
                  "description" : "IDs of the drivers for whom the messages are sent to.",
                  "example" : [ 111, 222, 333 ],
                  "items" : {
                    "type" : "number",
                    "format" : "int64",
                    "example" : 555.0
                  }
                },
                "text" : {
                  "type" : "string",
                  "description" : "The text sent in the message.",
                  "example" : "This is a message."
                }
              }
            }
          }
        },
        "required" : true
      },
      "V1documentCreateParam" : {
        "description" : "To create a document for a given document type, provide the `documentTypeUuid` of the type of document you'd like to create. Then, pass in the `fields` of the document in the same order that they show up in the given document type.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/V1DocumentCreate"
            }
          }
        },
        "required" : true
      },
      "V1routeCreateParam" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/V1DispatchRouteCreate"
            }
          }
        },
        "required" : true
      },
      "V1routeUpdateParam" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/V1DispatchRouteUpdate"
            }
          }
        },
        "required" : true
      },
      "V1sensorParam" : {
        "description" : "List of sensor IDs to query.",
        "content" : {
          "application/json" : {
            "schema" : {
              "required" : [ "sensors" ],
              "type" : "object",
              "properties" : {
                "sensors" : {
                  "type" : "array",
                  "description" : "List of sensor IDs to query.",
                  "example" : [ 122 ],
                  "items" : {
                    "type" : "integer",
                    "format" : "int64"
                  }
                }
              }
            }
          }
        },
        "required" : true
      }
    },
  },
  "x-original-swagger-version" : "2.0"
}
